{
	"name": "DF_LIA_FACT_ADJUDICACIONS",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "STG_LIA_FACT_ADJUDICACIONS",
						"type": "DatasetReference"
					},
					"name": "STGAdjudicacions"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ODS_LIA_FACT_ADJUDICACIONS",
						"type": "DatasetReference"
					},
					"name": "ODSAdjudicacions"
				}
			],
			"transformations": [
				{
					"name": "Select"
				},
				{
					"name": "CambioTipos"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Identificador as string,",
				"          {Link licitación} as string,",
				"          {Fecha actualización} as string,",
				"          {Número de expediente} as string,",
				"          Lote as string,",
				"          {Objeto licitación/lote} as string,",
				"          {Presupuesto base con impuestos licitación/lote} as string,",
				"          {Presupuesto base sin impuestos licitación/lote} as string,",
				"          {CPV licitación/lote} as string,",
				"          {Lugar ejecución licitación/lote} as string,",
				"          {Resultado licitación/lote} as string,",
				"          {Fecha del acuerdo licitación/lote} as string,",
				"          {Número de ofertas recibidas por licitación/lote} as string,",
				"          {Precio de la oferta más baja por licitación/lote} as string,",
				"          {Precio de la oferta más alta por licitación/lote} as string,",
				"          {Se han excluído ofertas por ser anormalmente bajas por licitación/lote} as string,",
				"          {Número del contrato licitación/lote} as string,",
				"          {Fecha formalización del contrato licitación/lote} as string,",
				"          {Fecha entrada en vigor del contrato de licitación/lote} as string,",
				"          {Adjudicatario licitación/lote} as string,",
				"          {Tipo de identificador de adjudicatario por licitación/lote} as string,",
				"          {Identificador Adjudicatario de la licitación/lote} as string,",
				"          {El adjudicatario es o no PYME de la licitación/lote} as string,",
				"          {Importe adjudicación sin impuestos licitación/lote} as string,",
				"          {Importe adjudicación con impuestos licitación/lote} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> STGAdjudicacions",
				"STGAdjudicacions select(mapColumn(",
				"          ID_LICITACIO = Identificador,",
				"          QTY_IMPORT_ADJUDICACIO = {Importe adjudicación sin impuestos licitación/lote},",
				"          DATA_ACORD_LICITACIO = {Fecha del acuerdo licitación/lote}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Select",
				"Select derive(ID_LICITACIO = toInteger(ID_LICITACIO),",
				"          DATA_ACORD_LICITACIO = toDate(DATA_ACORD_LICITACIO),",
				"          QTY_IMPORT_ADJUDICACIO = toDecimal(replace(replace(QTY_IMPORT_ADJUDICACIO,'.',''),',','.'),15,2)) ~> CambioTipos",
				"CambioTipos sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ID_LICITACIO as integer,",
				"          QTY_IMPORT_ADJUDICACIO as decimal(15,2),",
				"          DATA_ACORD_LICITACIO as date,",
				"          DATA_CARREGA as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> ODSAdjudicacions"
			]
		}
	}
}