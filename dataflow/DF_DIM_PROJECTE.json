{
	"name": "DF_DIM_PROJECTE",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "STG_PRES_FACT_DET_EST_OOAA_RE",
						"type": "DatasetReference"
					},
					"name": "STGPresEstOoaaRe"
				},
				{
					"dataset": {
						"referenceName": "DM_DIM_PROJECTES",
						"type": "DatasetReference"
					},
					"name": "SourceDimProjectes"
				},
				{
					"dataset": {
						"referenceName": "STG_PRES_FACT_DET_SEGURETAT_SOCIAL",
						"type": "DatasetReference"
					},
					"name": "STGSeguretatSocial"
				},
				{
					"dataset": {
						"referenceName": "DIM_PROVINCIES",
						"type": "DatasetReference"
					},
					"name": "Provincies"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DM_DIM_PROJECTES",
						"type": "DatasetReference"
					},
					"name": "DimProjectes"
				}
			],
			"transformations": [
				{
					"name": "Distinct"
				},
				{
					"name": "LeftJoin"
				},
				{
					"name": "FitroRepetidos"
				},
				{
					"name": "DistinctSS"
				},
				{
					"name": "ObtenerIDProjecte"
				},
				{
					"name": "JoinProvincies"
				},
				{
					"name": "SelectSS"
				},
				{
					"name": "Union"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ID_MINISTERI as string,",
				"          DESC_MINISTERI as string,",
				"          COMUNITAT_AUTONOMA as string,",
				"          CODI_CENTRE as string,",
				"          ID_PROGRAMA as string,",
				"          ID_ARTICLE as string,",
				"          DESC_CENTRE as string,",
				"          ID_PROJECTE as string,",
				"          NOM_PROJECTE as string,",
				"          ANY_INICI as string,",
				"          ANY_FI as string,",
				"          PROVINCIA as string,",
				"          TIPUS as string,",
				"          COST_TOTAL as string,",
				"          ANY_ANTERIOR as string,",
				"          ANY_ACTUAL as string,",
				"          {ANY_ACTUAL+1} as string,",
				"          {ANY_ACTUAL+2} as string,",
				"          {ANY_ACTUAL+3} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> STGPresEstOoaaRe",
				"source(output(",
				"          ID_PROJECTE as string,",
				"          NOM_PROJECTE as string,",
				"          DESC_COMENTARI as string,",
				"          ID_MACROPROJECTE as integer,",
				"          CODI_PROJECTE_CLAU as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SourceDimProjectes",
				"source(output(",
				"          Organisme as string,",
				"          Programa as string,",
				"          Article as string,",
				"          {Centre Tipus} as string,",
				"          {Número} as string,",
				"          {Denominació} as string,",
				"          Inici as string,",
				"          Final as string,",
				"          {Import Total} as string,",
				"          ANY as string,",
				"          {ANY+1} as string,",
				"          {ANY+2} as string,",
				"          {ANY+3} as string,",
				"          {Província} as string,",
				"          {ID Entitat} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> STGSeguretatSocial",
				"source(output(",
				"          ID_PROVINCIA as string,",
				"          ID_CCAA as integer,",
				"          NOM_PROVINCIA as string,",
				"          NOM_PROVINCIA_CAT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Provincies",
				"STGPresEstOoaaRe aggregate(groupBy(ID_PROJECTE,",
				"          NOM_PROJECTE),",
				"     count = count(1)) ~> Distinct",
				"Union, SourceDimProjectes join(Union@ID_PROJECTE == SourceDimProjectes@ID_PROJECTE,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> LeftJoin",
				"LeftJoin filter(isNull(SourceDimProjectes@ID_PROJECTE)) ~> FitroRepetidos",
				"ObtenerIDProjecte aggregate(groupBy({Denominació},",
				"          ID_PROJECTE),",
				"     count = count(1)) ~> DistinctSS",
				"JoinProvincies derive(ID_PROJECTE = concat(ID_PROVINCIA,' ',Organisme, ' ', Programa, ' ', Article,' ' ,{Centre Tipus}, ' ', {Número})) ~> ObtenerIDProjecte",
				"STGSeguretatSocial, Provincies join(lower({Província}) == lower(NOM_PROVINCIA),",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinProvincies",
				"DistinctSS select(mapColumn(",
				"          NOM_PROJECTE = {Denominació},",
				"          ID_PROJECTE,",
				"          count",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectSS",
				"Distinct, SelectSS union(byName: true)~> Union",
				"FitroRepetidos select(mapColumn(",
				"          ID_PROJECTE = Union@ID_PROJECTE,",
				"          NOM_PROJECTE = Union@NOM_PROJECTE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ID_PROJECTE as string,",
				"          NOM_PROJECTE as string,",
				"          DESC_COMENTARI as string,",
				"          ID_MACROPROJECTE as integer,",
				"          CODI_PROJECTE_CLAU as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ID_PROJECTE,",
				"          NOM_PROJECTE",
				"     )) ~> DimProjectes"
			]
		}
	}
}