{
	"name": "DF_DIM_PROJECTE",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "STG_PRES_FACT_DET_EST_OOAA_RE",
						"type": "DatasetReference"
					},
					"name": "STGPresEstOoaaRe"
				},
				{
					"dataset": {
						"referenceName": "DM_DIM_PROJECTES",
						"type": "DatasetReference"
					},
					"name": "SourceDimProjectes"
				},
				{
					"dataset": {
						"referenceName": "STG_PRES_FACT_DET_SEGURETAT_SOCIAL",
						"type": "DatasetReference"
					},
					"name": "STGSeguretatSocial"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DM_DIM_PROJECTES",
						"type": "DatasetReference"
					},
					"name": "DimProjectes"
				},
				{
					"dataset": {
						"referenceName": "DM_DIM_PROJECTES",
						"type": "DatasetReference"
					},
					"name": "DimProjectesSS"
				}
			],
			"transformations": [
				{
					"name": "Distinct"
				},
				{
					"name": "Select"
				},
				{
					"name": "LeftJoin"
				},
				{
					"name": "FitroRepetidos"
				},
				{
					"name": "DistinctSS"
				},
				{
					"name": "LeftJoinSS"
				},
				{
					"name": "FiltroRepetidos"
				},
				{
					"name": "SelectSS"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ID_MINISTERI as string,",
				"          DESC_MINISTERI as string,",
				"          COMUNITAT_AUTONOMA as string,",
				"          CODI_CENTRE as string,",
				"          ID_PROGRAMA as string,",
				"          ID_ARTICLE as string,",
				"          DESC_CENTRE as string,",
				"          ID_PROJECTE as string,",
				"          NOM_PROJECTE as string,",
				"          ANY_INICI as string,",
				"          ANY_FI as string,",
				"          PROVINCIA as string,",
				"          TIPUS as string,",
				"          COST_TOTAL as string,",
				"          ANY_ANTERIOR as string,",
				"          ANY_ACTUAL as string,",
				"          {ANY_ACTUAL+1} as string,",
				"          {ANY_ACTUAL+2} as string,",
				"          {ANY_ACTUAL+3} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> STGPresEstOoaaRe",
				"source(output(",
				"          ID_PROJECTE as string,",
				"          ID_ORGANISME as integer,",
				"          ID_PROGRAMA as integer,",
				"          ID_ARTICLE as integer,",
				"          ID_CENTRE_TIPUS as integer,",
				"          ID_NUMERO as integer,",
				"          NOM_PROVINCIA as string,",
				"          NOM_PROJECTE as string,",
				"          FLAG_CLAU as string,",
				"          DESC_MUNICIPIS as string,",
				"          DESC_COMARQUES as string,",
				"          DESC_AMBITS as string,",
				"          DESC_COMENTARI as string,",
				"          NOM_MACROPROJECTE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SourceDimProjectes",
				"source(output(",
				"          Organisme as string,",
				"          Programa as string,",
				"          Article as string,",
				"          {Centre Tipus} as string,",
				"          {Número} as string,",
				"          {Denominació} as string,",
				"          Inici as string,",
				"          Final as string,",
				"          {Import Total} as string,",
				"          ANY as string,",
				"          {ANY+1} as string,",
				"          {ANY+2} as string,",
				"          {ANY+3} as string,",
				"          {Província} as string,",
				"          {ID Entitat} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> STGSeguretatSocial",
				"STGPresEstOoaaRe aggregate(groupBy(ID_PROJECTE,",
				"          NOM_PROJECTE),",
				"     Count = count(1)) ~> Distinct",
				"FitroRepetidos select(mapColumn(",
				"          ID_PROJECTE = Distinct@ID_PROJECTE,",
				"          NOM_PROJECTE = Distinct@NOM_PROJECTE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Select",
				"Distinct, SourceDimProjectes join(Distinct@ID_PROJECTE == SourceDimProjectes@ID_PROJECTE,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> LeftJoin",
				"LeftJoin filter(isNull(SourceDimProjectes@ID_PROJECTE)) ~> FitroRepetidos",
				"STGSeguretatSocial aggregate(groupBy(Organisme,",
				"          Programa,",
				"          Article,",
				"          {Centre Tipus},",
				"          {Número},",
				"          {Província},",
				"          {Denominació}),",
				"     count = count(1)) ~> DistinctSS",
				"DistinctSS, SourceDimProjectes join(toInteger(Organisme) == ID_ORGANISME",
				"     && toInteger(Programa) == ID_PROGRAMA",
				"     && toInteger(Article) == ID_ARTICLE",
				"     && toInteger({Centre Tipus}) == ID_CENTRE_TIPUS",
				"     && toInteger({Número}) == ID_NUMERO",
				"     && {Província} == NOM_PROVINCIA,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> LeftJoinSS",
				"LeftJoinSS filter(isNull(ID_PROGRAMA)) ~> FiltroRepetidos",
				"FiltroRepetidos select(mapColumn(",
				"          Organisme,",
				"          Programa,",
				"          Article,",
				"          {Centre Tipus},",
				"          {Número},",
				"          {Província},",
				"          NOM_PROJECTE = {Denominació}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectSS",
				"Select sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ID_PROJECTE as string,",
				"          ID_ORGANISME as integer,",
				"          ID_PROGRAMA as integer,",
				"          ID_ARTICLE as integer,",
				"          ID_CENTRE_TIPUS as integer,",
				"          ID_NUMERO as integer,",
				"          NOM_PROVINCIA as string,",
				"          NOM_PROJECTE as string,",
				"          FLAG_CLAU as string,",
				"          DESC_MUNICIPIS as string,",
				"          DESC_COMARQUES as string,",
				"          DESC_AMBITS as string,",
				"          DESC_COMENTARI as string,",
				"          NOM_MACROPROJECTE as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ID_PROJECTE,",
				"          NOM_PROJECTE",
				"     )) ~> DimProjectes",
				"SelectSS sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ID_PROJECTE as string,",
				"          ID_ORGANISME as integer,",
				"          ID_PROGRAMA as integer,",
				"          ID_ARTICLE as integer,",
				"          ID_CENTRE_TIPUS as integer,",
				"          ID_NUMERO as integer,",
				"          NOM_PROVINCIA as string,",
				"          NOM_PROJECTE as string,",
				"          FLAG_CLAU as string,",
				"          DESC_MUNICIPIS as string,",
				"          DESC_COMARQUES as string,",
				"          DESC_AMBITS as string,",
				"          DESC_COMENTARI as string,",
				"          NOM_MACROPROJECTE as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ID_ORGANISME = Organisme,",
				"          ID_PROGRAMA = Programa,",
				"          ID_ARTICLE = Article,",
				"          ID_CENTRE_TIPUS = {Centre Tipus},",
				"          ID_NUMERO = {Número},",
				"          NOM_PROVINCIA = {Província},",
				"          NOM_PROJECTE",
				"     )) ~> DimProjectesSS"
			]
		}
	}
}