{
	"name": "DF_ODS_PRES_FACT_DET_EST_OOAA_RE",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "STG_PRES_FACT_DET_EST_OOAA_RE",
						"type": "DatasetReference"
					},
					"name": "STGDetRE"
				},
				{
					"dataset": {
						"referenceName": "STG_PRES_FACT_DET_SEGURETAT_SOCIAL",
						"type": "DatasetReference"
					},
					"name": "STGDetSeguretatSocial"
				},
				{
					"dataset": {
						"referenceName": "DIM_PROVINCIES",
						"type": "DatasetReference"
					},
					"name": "Provincies"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ODS_PRES_FACT_DET_EST_OOAA_RE",
						"type": "DatasetReference"
					},
					"name": "ODSDetRE"
				}
			],
			"transformations": [
				{
					"name": "Select"
				},
				{
					"name": "Anys"
				},
				{
					"name": "AnysSS"
				},
				{
					"name": "SelectSS"
				},
				{
					"name": "Join"
				},
				{
					"name": "Union"
				}
			],
			"scriptLines": [
				"parameters{",
				"     Any as string",
				"}",
				"source(output(",
				"          ID_MINISTERI as string,",
				"          DESC_MINISTERI as string,",
				"          COMUNITAT_AUTONOMA as string,",
				"          CODI_CENTRE as string,",
				"          ID_PROGRAMA as string,",
				"          ID_ARTICLE as string,",
				"          DESC_CENTRE as string,",
				"          ID_PROJECTE as string,",
				"          NOM_PROJECTE as string,",
				"          ANY_INICI as string,",
				"          ANY_FI as string,",
				"          PROVINCIA as string,",
				"          TIPUS as string,",
				"          COST_TOTAL as string,",
				"          ANY_ANTERIOR as string,",
				"          ANY_ACTUAL as string,",
				"          {ANY_ACTUAL+1} as string,",
				"          {ANY_ACTUAL+2} as string,",
				"          {ANY_ACTUAL+3} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> STGDetRE",
				"source(output(",
				"          Organisme as string,",
				"          Programa as string,",
				"          Article as string,",
				"          {Centre Tipus} as string,",
				"          {Número} as string,",
				"          {Denominació} as string,",
				"          Inici as string,",
				"          Final as string,",
				"          {Import Total} as string,",
				"          ANY as string,",
				"          {ANY+1} as string,",
				"          {ANY+2} as string,",
				"          {ANY+3} as string,",
				"          {Província} as string,",
				"          {ID Entitat} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> STGDetSeguretatSocial",
				"source(output(",
				"          ID_PROVINCIA as string,",
				"          ID_CCAA as integer,",
				"          NOM_PROVINCIA as string,",
				"          NOM_PROVINCIA_CAT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Provincies",
				"Anys select(mapColumn(",
				"          ID_PROVINCIA = PROVINCIA,",
				"          ID_MINISTERI,",
				"          ID_PROGRAMA,",
				"          ID_ARTICLE,",
				"          ID_PROJECTE,",
				"          CODI_CENTRE,",
				"          DESC_CENTRE,",
				"          ANY_INICI,",
				"          ANY_FI,",
				"          COD_TIPUS_PROJECTE = TIPUS,",
				"          QTY_COST_TOTAL = COST_TOTAL,",
				"          QTY_ANY_ANT = ANY_ANTERIOR,",
				"          QTY_ANY_EXC_PRESSUPOSTARI = ANY_ACTUAL,",
				"          QTY_ANY_1 = {ANY_ACTUAL+1},",
				"          QTY_ANY_2 = {ANY_ACTUAL+2},",
				"          QTY_ANY_3 = {ANY_ACTUAL+3},",
				"          DATA_ANY_ANT,",
				"          DATA_ANY_EXC_PRESSUPOSTARI,",
				"          DATA_ANY_1,",
				"          DATA_ANY_2,",
				"          DATA_ANY_3,",
				"          FLAG_SEGURETAT_SOCIAL,",
				"          DESC_PROJECTE = NOM_PROJECTE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Select",
				"STGDetRE derive(DATA_ANY_ANT = toInteger($Any)-1,",
				"          DATA_ANY_EXC_PRESSUPOSTARI = toInteger($Any),",
				"          DATA_ANY_1 = toInteger($Any)+1,",
				"          DATA_ANY_2 = toInteger($Any)+2,",
				"          DATA_ANY_3 = toInteger($Any)+3,",
				"          ANY_ANTERIOR = toDecimal(replace(replace(ANY_ANTERIOR,'.',''),',','.'))*1000,",
				"          ANY_ACTUAL = toDecimal(replace(replace(ANY_ACTUAL,'.',''),',','.'))*1000,",
				"          {ANY_ACTUAL+1} = toDecimal(replace(replace({ANY_ACTUAL+1},'.',''),',','.'))*1000,",
				"          {ANY_ACTUAL+2} = toDecimal(replace(replace({ANY_ACTUAL+2},'.',''),',','.'))*1000,",
				"          {ANY_ACTUAL+3} = toDecimal(replace(replace({ANY_ACTUAL+3},'.',''),',','.'))*1000,",
				"          COST_TOTAL = toDecimal(replace(replace(COST_TOTAL,'.',''),',','.'))*1000,",
				"          FLAG_SEGURETAT_SOCIAL = 0) ~> Anys",
				"STGDetSeguretatSocial derive(DATA_ANY_EXC_PRESSUPOSTARI = toInteger($Any),",
				"          DATA_ANY_1 = toInteger($Any)+1,",
				"          DATA_ANY_2 = toInteger($Any)+2,",
				"          DATA_ANY_3 = toInteger($Any)+3,",
				"          ANY = toDecimal(replace(replace(ANY,'.',''),',','.'))*1000,",
				"          {ANY+1} = toDecimal(replace(replace({ANY+1},'.',''),',','.'))*1000,",
				"          {ANY+2} = toDecimal(replace(replace({ANY+2},'.',''),',','.'))*1000,",
				"          {ANY+3} = toDecimal(replace(replace({ANY+3},'.',''),',','.'))*1000,",
				"          {Import Total} = toDecimal(replace(replace({Import Total},'.',''),',','.'))*1000,",
				"          FLAG_SEGURETAT_SOCIAL = 1) ~> AnysSS",
				"Join select(mapColumn(",
				"          ID_PROVINCIA,",
				"          ID_MINISTERI = Organisme,",
				"          ID_PROGRAMA = Programa,",
				"          ID_ARTICLE = Article,",
				"          ID_PROJECTE = {Número},",
				"          CODI_CENTRE = {Centre Tipus},",
				"          DESC_PROJECTE = {Denominació},",
				"          ANY_INICI = Inici,",
				"          ANY_FI = Final,",
				"          QTY_COST_TOTAL = {Import Total},",
				"          QTY_ANY_EXC_PRESSUPOSTARI = ANY,",
				"          QTY_ANY_1 = {ANY+1},",
				"          QTY_ANY_2 = {ANY+2},",
				"          QTY_ANY_3 = {ANY+3},",
				"          ID_ENTITAT = {ID Entitat},",
				"          DATA_ANY_EXC_PRESSUPOSTARI,",
				"          DATA_ANY_1,",
				"          DATA_ANY_2,",
				"          DATA_ANY_3,",
				"          FLAG_SEGURETAT_SOCIAL",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectSS",
				"AnysSS, Provincies join(lower({Província}) == lower(NOM_PROVINCIA),",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> Join",
				"Select, SelectSS union(byName: true)~> Union",
				"Union sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ID_PROVINCIA as string,",
				"          ID_MINISTERI as string,",
				"          ID_PROGRAMA as string,",
				"          ID_ARTICLE as integer,",
				"          ID_PROJECTE as string,",
				"          ID_ENTITAT as string,",
				"          DESC_PROJECTE as string,",
				"          CODI_CENTRE as string,",
				"          DESC_CENTRE as string,",
				"          ANY_INICI as integer,",
				"          ANY_FI as integer,",
				"          COD_TIPUS_PROJECTE as string,",
				"          QTY_COST_TOTAL as decimal(10,2),",
				"          DATA_ANY_ANT as integer,",
				"          QTY_ANY_ANT as decimal(10,2),",
				"          DATA_ANY_EXC_PRESSUPOSTARI as integer,",
				"          QTY_ANY_EXC_PRESSUPOSTARI as decimal(10,2),",
				"          DATA_ANY_1 as integer,",
				"          QTY_ANY_1 as decimal(10,2),",
				"          DATA_ANY_2 as integer,",
				"          QTY_ANY_2 as decimal(10,2),",
				"          DATA_ANY_3 as integer,",
				"          QTY_ANY_3 as decimal(10,2),",
				"          FLAG_SEGURETAT_SOCIAL as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ID_PROVINCIA,",
				"          ID_MINISTERI,",
				"          ID_PROGRAMA,",
				"          ID_ARTICLE,",
				"          ID_PROJECTE,",
				"          ID_ENTITAT,",
				"          DESC_PROJECTE,",
				"          CODI_CENTRE,",
				"          DESC_CENTRE,",
				"          ANY_INICI,",
				"          ANY_FI,",
				"          COD_TIPUS_PROJECTE,",
				"          QTY_COST_TOTAL,",
				"          DATA_ANY_ANT,",
				"          QTY_ANY_ANT,",
				"          DATA_ANY_EXC_PRESSUPOSTARI,",
				"          QTY_ANY_EXC_PRESSUPOSTARI,",
				"          DATA_ANY_1,",
				"          QTY_ANY_1,",
				"          DATA_ANY_2,",
				"          QTY_ANY_2,",
				"          DATA_ANY_3,",
				"          QTY_ANY_3,",
				"          FLAG_SEGURETAT_SOCIAL",
				"     )) ~> ODSDetRE"
			]
		}
	}
}