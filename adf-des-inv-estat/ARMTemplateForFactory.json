{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-des-inv-estat"
		},
		"AzureKeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://kv-sdg-sp.vault.azure.net/"
		},
		"BD_INV_ESTAT_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "bbdd-inv-est-connection"
		},
		"BlobStorage_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "blob-inv-estat-connection"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CARREGA_EXECPRESS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "STG_EXEC_PRESSUP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "STG_EXEC_PRESSUP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ODS_EXEC_PRESSUP",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STG_EXEC_PRESSUP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ODS_EXEC_PRESSUP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "HIST_EXEC_PRESSUP",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STG_EXEC_PRESSUP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "HIST_EXEC_PRESSUP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DM_EXEC_PRESSUP",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ODS_EXEC_PRESSUP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DM_EXEC_PRESSUP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ÀMBIT EXECUCIÓ PRESSUPOSTARIA"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-17T09:42:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/STG_EXEC_PRESSUP')]",
				"[concat(variables('factoryId'), '/pipelines/ODS_EXEC_PRESSUP')]",
				"[concat(variables('factoryId'), '/pipelines/HIST_EXEC_PRESSUP')]",
				"[concat(variables('factoryId'), '/pipelines/DM_EXEC_PRESSUP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CARREGA_LIA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "STG_LIA",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "STG_LIA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Data_Any_Carrega": {
									"value": "@pipeline().parameters.Any",
									"type": "Expression"
								},
								"Data_Mes_Carrega": {
									"value": "@pipeline().parameters.Mes",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ODS_LIA",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STG_LIA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ODS_LIA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Any": {
									"value": "@pipeline().parameters.Any",
									"type": "Expression"
								},
								"Mes": {
									"value": "@pipeline().parameters.Mes",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "DM_LIA",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ODS_LIA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DM_LIA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "HIST_LIA",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STG_LIA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "HIST_LIA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Any": {
									"value": "@pipeline().parameters.Any",
									"type": "Expression"
								},
								"Mes": {
									"value": "@pipeline().parameters.Mes",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Any": {
						"type": "string"
					},
					"Mes": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ÀMBIT LICITACIONS ADJUDICACIONS"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-17T09:42:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/STG_LIA')]",
				"[concat(variables('factoryId'), '/pipelines/ODS_LIA')]",
				"[concat(variables('factoryId'), '/pipelines/DM_LIA')]",
				"[concat(variables('factoryId'), '/pipelines/HIST_LIA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CARREGA_PRESSUPOST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "STG_PRESSUPOST",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "STG_PRESSUPOST",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ODS_PRESSUPOST",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STG_PRESSUPOST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ODS_PRESSUPOST",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DM_PRESSUPOST",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ODS_PRESSUPOST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DM_PRESSUPOST",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "HIST_PRESSUPOST",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STG_PRESSUPOST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "HIST_PRESSUPOST",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ÀMBIT PRESSUPOST"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-17T09:42:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/STG_PRESSUPOST')]",
				"[concat(variables('factoryId'), '/pipelines/ODS_PRESSUPOST')]",
				"[concat(variables('factoryId'), '/pipelines/DM_PRESSUPOST')]",
				"[concat(variables('factoryId'), '/pipelines/HIST_PRESSUPOST')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_INVERSIONS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DIM_PROJECTES",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DIM_PROJECTE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGPresEstOoaaRe": {},
									"SourceDimProjectes": {},
									"STGSeguretatSocial": {},
									"Provincies": {},
									"DimProjectes": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DIM_MINISTERIS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DIM_MINISTERIS",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGPresEstOoaaRe": {},
									"SourceDimMinisteris": {},
									"DimMinisteris": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "STG_DIM_UNITATS_AGE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[DIM_UNITATS_AGE]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "XLSX_DIM_UNITATS_AGE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_DIM_UNITATS_AGE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ODS_DIM_UNITATS_AGE",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "STG_DIM_UNITATS_AGE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS_DIM_UNITATS_AGE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGDimUnitatsAGE": {},
									"ODSDimUnitatsAGE": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DM_DIM_UNITATS_AGE",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ODS_DIM_UNITATS_AGE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_DM].[DIM_UNITATS_AGE]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ODS_DIM_UNITATS_AGE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DM_DIM_UNITATS_AGE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_DIM_ENTITATS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE INV_STG.DIM_ENTITATS",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_DIM_ENTITATS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_DIM_ENTITATS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "ODS_DIM_ENTITATS",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "STG_DIM_ENTITATS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS_DIM_ENTITATS",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGEntitats": {},
									"ODSEntitats": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DM_DIM_ENTITATS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ODS_DIM_ENTITATS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE INV_DM.DIM_ENTITATS",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ODS_DIM_ENTITATS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DM_DIM_ENTITATS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DIM"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-17T09:42:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_DIM_PROJECTE')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]",
				"[concat(variables('factoryId'), '/dataflows/DF_DIM_MINISTERIS')]",
				"[concat(variables('factoryId'), '/datasets/XLSX_DIM_UNITATS_AGE')]",
				"[concat(variables('factoryId'), '/datasets/STG_DIM_UNITATS_AGE')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ODS_DIM_UNITATS_AGE')]",
				"[concat(variables('factoryId'), '/datasets/ODS_DIM_UNITATS_AGE')]",
				"[concat(variables('factoryId'), '/datasets/DM_DIM_UNITATS_AGE')]",
				"[concat(variables('factoryId'), '/datasets/CSV_DIM_ENTITATS')]",
				"[concat(variables('factoryId'), '/datasets/STG_DIM_ENTITATS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ODS_DIM_ENTITATS')]",
				"[concat(variables('factoryId'), '/datasets/ODS_DIM_ENTITATS')]",
				"[concat(variables('factoryId'), '/datasets/DM_DIM_ENTITATS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_EXEC_PRESSUP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DM_EXEC_FACT_AGR_CCAA",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DM_EXEC_FACT_AGR_CCAA",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ODSFactAGRCCAA": {},
									"DMFactAGRCCAA": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DM_EXEC_FACT_DET_SECCIO_ENTITAT",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DM_EXEC_FACT_DET_SECCIO_ENTITAT",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ODSFactDETSeccioEntitat": {},
									"DMFactDETSeccioEntitat": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ÀMBIT EXECUCIÓ PRESSUPOSTARIA"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-17T09:42:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_DM_EXEC_FACT_AGR_CCAA')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]",
				"[concat(variables('factoryId'), '/dataflows/DF_DM_EXEC_FACT_DET_SECCIO_ENTITAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_LIA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DM_LIA_FACT_LICITACIONS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DM_LIA_FACT_LICITACIONS",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ODSLicitacions": {},
									"DMLicitacions": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DM_LIA_FACT_ADJUDICACIONS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DM_LIA_FACT_ADJUDICACIONS",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ODSAdjudicacions": {},
									"DMAdjudicacions": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ÀMBIT LICITACIONS ADJUDICACIONS"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-17T09:42:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_DM_LIA_FACT_LICITACIONS')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]",
				"[concat(variables('factoryId'), '/dataflows/DF_DM_LIA_FACT_ADJUDICACIONS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_PRESSUPOST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DM_PRES_FACT_AGR_RESUMEN_INVERSIONS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DM_PRES_FACT_AGR_RESUMEN_INVERSIONS",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ODSFactAGRResumInvers": {},
									"DMFactAGRResumInvers": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DM_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DM_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ODSFactAGRCCAA": {},
									"DMFactAGRCCAA": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DM_PRES_FACT_AGR_CCAA_SP",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DM_PRES_FACT_AGR_CCAA_SP",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ODSFactAGRCCAA": {},
									"DMFactAGRCCAA": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DM_PRES_FACT_DET_SP",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DM_PRES_FACT_DET_SP",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ODSFactDETSP": {},
									"DMFactDETSP": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DM_PRES_FACT_DET_EST_OOAA_RE",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_DM_PRES_FACT_DET_EST_OOAA_RE",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ODSFactDETEstOOAARE": {},
									"DMFactDETEstOOAARE": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ÀMBIT PRESSUPOST"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-17T09:42:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_DM_PRES_FACT_AGR_RESUMEN_INVERSIONS')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]",
				"[concat(variables('factoryId'), '/dataflows/DF_DM_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE')]",
				"[concat(variables('factoryId'), '/dataflows/DF_DM_PRES_FACT_AGR_CCAA_SP')]",
				"[concat(variables('factoryId'), '/dataflows/DF_DM_PRES_FACT_DET_SP')]",
				"[concat(variables('factoryId'), '/dataflows/DF_DM_PRES_FACT_DET_EST_OOAA_RE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIST_EXEC_PRESSUP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "HIST_EXEC_FACT_DET_AGE",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DELETE_EXEC_FACT_DET_AGE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_HIST_EXEC_FACT_DET_AGE",
								"type": "DataFlowReference",
								"parameters": {
									"Any": {
										"value": "'@{pipeline().parameters.Any}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "HIST_EXEC_FACT_DET_OOAA_RE",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DELETE_EXEC_FACT_DET_OOAA_RE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_HIST_EXEC_FACT_DET_OOAA_RE",
								"type": "DataFlowReference",
								"parameters": {
									"Any": {
										"value": "'@{pipeline().parameters.Any}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "HIST_EXEC_FACT_DET_SP_ADMIN",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DELETE_EXEC_FACT_DET_SP_ADMIN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_HIST_EXEC_FACT_DET_SP_ADMIN",
								"type": "DataFlowReference",
								"parameters": {
									"Any": {
										"value": "'@{pipeline().parameters.Any}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "HIST_EXEC_FACT_DET_SP_EMPR",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DELETE_EXEC_FACT_DET_SP_EMPR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_HIST_EXEC_FACT_DET_SP_EMPR",
								"type": "DataFlowReference",
								"parameters": {
									"Any": {
										"value": "'@{pipeline().parameters.Any}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "HIST_EXEC_FACT_AGR_CCAA_AGE",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DELETE_EXEC_FACT_AGR_CCAA_AGE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_HIST_EXEC_FACT_AGR_CCAA_AGE",
								"type": "DataFlowReference",
								"parameters": {
									"Any": {
										"value": "'@{pipeline().parameters.Any}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "HIST_EXEC_FACT_AGR_CCAA_OOAA_RE",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DELETE_EXEC_FACT_AGR_CCAA_OOAA_RE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_HIST_EXEC_FACT_AGR_CCAA_OOAA_RE",
								"type": "DataFlowReference",
								"parameters": {
									"Any": {
										"value": "'@{pipeline().parameters.Any}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "HIST_EXEC_FACT_AGR_CCAA_SP_ADMIN",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DELETE_EXEC_FACT_AGR_CCAA_SP_ADMIN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_HIST_EXEC_FACT_AGR_CCAA_SP_ADMIN",
								"type": "DataFlowReference",
								"parameters": {
									"Any": {
										"value": "'@{pipeline().parameters.Any}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "HIST_EXEC_FACT_AGR_CCAA_SP_EMPR",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DELETE_EXEC_FACT_AGR_CCAA_SP_EMPR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_HIST_EXEC_FACT_AGR_CCAA_SP_EMPR",
								"type": "DataFlowReference",
								"parameters": {
									"Any": {
										"value": "'@{pipeline().parameters.Any}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DELETE_EXEC_FACT_DET_AGE",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_HIST_ANY]",
							"storedProcedureParameters": {
								"vAny": {
									"value": {
										"value": "@pipeline().parameters.Any",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "INV_HIST",
									"type": "String"
								},
								"vTableName": {
									"value": "EXEC_FACT_DET_AGE",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "BD_INV_ESTAT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DELETE_EXEC_FACT_DET_OOAA_RE",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_HIST_ANY]",
							"storedProcedureParameters": {
								"vAny": {
									"value": {
										"value": "@pipeline().parameters.Any",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "INV_HIST",
									"type": "String"
								},
								"vTableName": {
									"value": "EXEC_FACT_DET_OOAA_RE",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "BD_INV_ESTAT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DELETE_EXEC_FACT_DET_SP_ADMIN",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_HIST_ANY]",
							"storedProcedureParameters": {
								"vAny": {
									"value": {
										"value": "@pipeline().parameters.Any",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "INV_HIST",
									"type": "String"
								},
								"vTableName": {
									"value": "EXEC_FACT_DET_SP_ADMIN",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "BD_INV_ESTAT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DELETE_EXEC_FACT_DET_SP_EMPR",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_HIST_ANY]",
							"storedProcedureParameters": {
								"vAny": {
									"value": {
										"value": "@pipeline().parameters.Any",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "INV_HIST",
									"type": "String"
								},
								"vTableName": {
									"value": "EXEC_FACT_DET_SP_EMPR",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "BD_INV_ESTAT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DELETE_EXEC_FACT_AGR_CCAA_AGE",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_HIST_ANY]",
							"storedProcedureParameters": {
								"vAny": {
									"value": {
										"value": "@pipeline().parameters.Any",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "INV_HIST",
									"type": "String"
								},
								"vTableName": {
									"value": "EXEC_FACT_AGR_CCAA_AGE",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "BD_INV_ESTAT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DELETE_EXEC_FACT_AGR_CCAA_OOAA_RE",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_HIST_ANY]",
							"storedProcedureParameters": {
								"vAny": {
									"value": {
										"value": "@pipeline().parameters.Any",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "INV_HIST",
									"type": "String"
								},
								"vTableName": {
									"value": "EXEC_FACT_AGR_CCAA_OOAA_RE",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "BD_INV_ESTAT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DELETE_EXEC_FACT_AGR_CCAA_SP_EMPR",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_HIST_ANY]",
							"storedProcedureParameters": {
								"vAny": {
									"value": {
										"value": "@pipeline().parameters.Any",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "INV_HIST",
									"type": "String"
								},
								"vTableName": {
									"value": "EXEC_FACT_AGR_CCAA_SP_EMPR",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "BD_INV_ESTAT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DELETE_EXEC_FACT_AGR_CCAA_SP_ADMIN",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_HIST_ANY]",
							"storedProcedureParameters": {
								"vAny": {
									"value": {
										"value": "@pipeline().parameters.Any",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "INV_HIST",
									"type": "String"
								},
								"vTableName": {
									"value": "EXEC_FACT_AGR_CCAA_SP_ADMIN",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "BD_INV_ESTAT",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Any": {
						"type": "string",
						"defaultValue": "2021"
					}
				},
				"folder": {
					"name": "ÀMBIT EXECUCIÓ PRESSUPOSTARIA"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-17T09:42:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_HIST_EXEC_FACT_DET_AGE')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]",
				"[concat(variables('factoryId'), '/dataflows/DF_HIST_EXEC_FACT_DET_OOAA_RE')]",
				"[concat(variables('factoryId'), '/dataflows/DF_HIST_EXEC_FACT_DET_SP_ADMIN')]",
				"[concat(variables('factoryId'), '/dataflows/DF_HIST_EXEC_FACT_DET_SP_EMPR')]",
				"[concat(variables('factoryId'), '/dataflows/DF_HIST_EXEC_FACT_AGR_CCAA_AGE')]",
				"[concat(variables('factoryId'), '/dataflows/DF_HIST_EXEC_FACT_AGR_CCAA_OOAA_RE')]",
				"[concat(variables('factoryId'), '/dataflows/DF_HIST_EXEC_FACT_AGR_CCAA_SP_ADMIN')]",
				"[concat(variables('factoryId'), '/dataflows/DF_HIST_EXEC_FACT_AGR_CCAA_SP_EMPR')]",
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIST_LIA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "HIST_LIA_FACT_LICITACIONS",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DELETE_LIA_FACT_LICITACIONS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_HIST_LIA_FACT_LICITACIONS",
								"type": "DataFlowReference",
								"parameters": {
									"Any": {
										"value": "'@{pipeline().parameters.Any}'",
										"type": "Expression"
									},
									"Mes": {
										"value": "'@{pipeline().parameters.Mes}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "HIST_LIA_FACT_ADJUDICACIONS",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DELETE_LIA_FACT_ADJUDICACIONS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_HIST_LIA_FACT_ADJUDICACIONS",
								"type": "DataFlowReference",
								"parameters": {
									"Any": {
										"value": "'@{pipeline().parameters.Any}'",
										"type": "Expression"
									},
									"Mes": {
										"value": "'@{pipeline().parameters.Mes}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DELETE_LIA_FACT_LICITACIONS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_HIST_ANY_MES]",
							"storedProcedureParameters": {
								"vAnyMes": {
									"value": {
										"value": "@concat(pipeline().parameters.Any,pipeline().parameters.Mes)",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "INV_HIST",
									"type": "String"
								},
								"vTableName": {
									"value": "LIA_FACT_LICITACIONS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "BD_INV_ESTAT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DELETE_LIA_FACT_ADJUDICACIONS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_HIST_ANY_MES]",
							"storedProcedureParameters": {
								"vAnyMes": {
									"value": {
										"value": "@concat(pipeline().parameters.Any,pipeline().parameters.Mes)",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "INV_HIST",
									"type": "String"
								},
								"vTableName": {
									"value": "LIA_FACT_ADJUDICACIONS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "BD_INV_ESTAT",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Any": {
						"type": "string"
					},
					"Mes": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ÀMBIT LICITACIONS ADJUDICACIONS"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-17T09:42:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_HIST_LIA_FACT_LICITACIONS')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]",
				"[concat(variables('factoryId'), '/dataflows/DF_HIST_LIA_FACT_ADJUDICACIONS')]",
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIST_PRESSUPOST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "HIST_PRES_FACT_DET_EST_OOAA_RE",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DELETE_HIST_PRES_FACT_DET_EST_OOAA_RE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_HIST_PRES_FACT_DET_EST_OOAA_RE",
								"type": "DataFlowReference",
								"parameters": {
									"Any": {
										"value": "'@{pipeline().parameters.Any}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "HIST_PRES_FACT_AGR_RESUMEN_INVERSIONS",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DELETE_HIST_PRES_FACT_AGR_RESUMEN_INVERSIONS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_HIST_PRES_FACT_AGR_RESUMEN_INVERSIONS",
								"type": "DataFlowReference",
								"parameters": {
									"Any": {
										"value": "'@{pipeline().parameters.Any}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "HIST_PRES_FACT_AGR_CCAA_SP_ADMIN",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DELETE_HIST_PRES_FACT_AGR_CCAA_SP_ADMIN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_HIST_PRES_FACT_AGR_CCAA_SP_ADMIN",
								"type": "DataFlowReference",
								"parameters": {
									"Any": {
										"value": "'@{pipeline().parameters.Any}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "HIST_PRES_FACT_AGR_CCAA_SP_EMPR",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DELETE_HIST_PRES_FACT_AGR_CCAA_SP_EMPR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_HIST_PRES_FACT_AGR_CCAA_SP_EMPR",
								"type": "DataFlowReference",
								"parameters": {
									"Any": {
										"value": "'@{pipeline().parameters.Any}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "HIST_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DELETE_HIST_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_HIST_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE",
								"type": "DataFlowReference",
								"parameters": {
									"Any": {
										"value": "'@{pipeline().parameters.Any}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "HIST_PRES_FACT_DET_SP_ADMIN",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DELETE_HIST_PRES_FACT_DET_SP_ADMIN",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_HIST_PRES_FACT_DET_SP_ADMIN",
								"type": "DataFlowReference",
								"parameters": {
									"Any": {
										"value": "'@{pipeline().parameters.Any}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "HIST_PRES_FACT_DET_SP_EMPR",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DELETE_PRES_FACT_DET_SP_EMPR",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_HIST_PRES_FACT_DET_SP_EMPR",
								"type": "DataFlowReference",
								"parameters": {
									"Any": {
										"value": "'@{pipeline().parameters.Any}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DELETE_HIST_PRES_FACT_DET_EST_OOAA_RE",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_HIST_ANY]",
							"storedProcedureParameters": {
								"vAny": {
									"value": {
										"value": "@pipeline().parameters.Any",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "INV_HIST",
									"type": "String"
								},
								"vTableName": {
									"value": "PRES_FACT_DET_EST_OOAA_RE",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "BD_INV_ESTAT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DELETE_HIST_PRES_FACT_AGR_RESUMEN_INVERSIONS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_HIST_ANY]",
							"storedProcedureParameters": {
								"vAny": {
									"value": {
										"value": "@pipeline().parameters.Any",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "INV_HIST",
									"type": "String"
								},
								"vTableName": {
									"value": "PRES_FACT_AGR_RESUMEN_INVERSIONS",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "BD_INV_ESTAT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DELETE_HIST_PRES_FACT_AGR_CCAA_SP_ADMIN",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_HIST_ANY]",
							"storedProcedureParameters": {
								"vAny": {
									"value": {
										"value": "@pipeline().parameters.Any",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "INV_HIST",
									"type": "String"
								},
								"vTableName": {
									"value": "PRES_FACT_AGR_CCAA_SP_ADMIN",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "BD_INV_ESTAT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DELETE_HIST_PRES_FACT_AGR_CCAA_SP_EMPR",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_HIST_ANY]",
							"storedProcedureParameters": {
								"vAny": {
									"value": {
										"value": "@pipeline().parameters.Any",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "INV_HIST",
									"type": "String"
								},
								"vTableName": {
									"value": "PRES_FACT_AGR_CCAA_SP_EMPR",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "BD_INV_ESTAT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DELETE_HIST_PRES_FACT_DET_SP_ADMIN",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_HIST_ANY]",
							"storedProcedureParameters": {
								"vAny": {
									"value": {
										"value": "@pipeline().parameters.Any",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "INV_HIST",
									"type": "String"
								},
								"vTableName": {
									"value": "PRES_FACT_DET_SP_ADMIN",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "BD_INV_ESTAT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DELETE_HIST_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_HIST_ANY]",
							"storedProcedureParameters": {
								"vAny": {
									"value": {
										"value": "@pipeline().parameters.Any",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "INV_HIST",
									"type": "String"
								},
								"vTableName": {
									"value": "PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "BD_INV_ESTAT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DELETE_PRES_FACT_DET_SP_EMPR",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_HIST_ANY]",
							"storedProcedureParameters": {
								"vAny": {
									"value": {
										"value": "@pipeline().parameters.Any",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "INV_HIST",
									"type": "String"
								},
								"vTableName": {
									"value": "PRES_FACT_DET_SP_EMPR",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "BD_INV_ESTAT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "HIST_PRES_FACT_DET_SEGURETAT_SOCIAL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "DELETE_HIST_PRES_FACT_DET_SEGURETAT_SOCIAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_HIST_PRES_FACT_DET_SEGURETAT_SOCIAL",
								"type": "DataFlowReference",
								"parameters": {
									"Any": {
										"value": "'@{pipeline().parameters.Any}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "DELETE_HIST_PRES_FACT_DET_SEGURETAT_SOCIAL",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DELETE_ROWS_FROM_HIST_ANY]",
							"storedProcedureParameters": {
								"vAny": {
									"value": {
										"value": "@pipeline().parameters.Any",
										"type": "Expression"
									},
									"type": "String"
								},
								"vSchemaName": {
									"value": "INV_HIST",
									"type": "String"
								},
								"vTableName": {
									"value": "PRES_FACT_DET_SEGURETAT_SOCIAL",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "BD_INV_ESTAT",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Any": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ÀMBIT PRESSUPOST"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-17T09:42:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_HIST_PRES_FACT_DET_EST_OOAA_RE')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]",
				"[concat(variables('factoryId'), '/dataflows/DF_HIST_PRES_FACT_AGR_RESUMEN_INVERSIONS')]",
				"[concat(variables('factoryId'), '/dataflows/DF_HIST_PRES_FACT_AGR_CCAA_SP_ADMIN')]",
				"[concat(variables('factoryId'), '/dataflows/DF_HIST_PRES_FACT_AGR_CCAA_SP_EMPR')]",
				"[concat(variables('factoryId'), '/dataflows/DF_HIST_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE')]",
				"[concat(variables('factoryId'), '/dataflows/DF_HIST_PRES_FACT_DET_SP_ADMIN')]",
				"[concat(variables('factoryId'), '/dataflows/DF_HIST_PRES_FACT_DET_SP_EMPR')]",
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]",
				"[concat(variables('factoryId'), '/dataflows/DF_HIST_PRES_FACT_DET_SEGURETAT_SOCIAL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_EXEC_PRESSUP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ODS_EXEC_FACT_AGR_CCAA",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "ODS_EXEC_FACT_AGR_CCAA_SP",
								"type": "DataFlowReference",
								"parameters": {
									"Any": {
										"value": "'@{pipeline().parameters.Any}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGAdmin": {},
									"STGEmpr": {},
									"STGccaaage": {},
									"STGooaare": {},
									"ODSSectorPublic": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ODS_EXEC_FACT_DET_SECCIO_ENTITAT",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_EXEC_FACT_DET_SECCIO_ENTITAT",
								"type": "DataFlowReference",
								"parameters": {
									"Any": {
										"value": "'@{pipeline().parameters.Any}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGSPAdmin": {},
									"STGSPEmpr": {},
									"STGAge": {},
									"STGOoaaRe": {},
									"ODSDetSeccEntitat": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Any": {
						"type": "string",
						"defaultValue": "2021"
					}
				},
				"folder": {
					"name": "ÀMBIT EXECUCIÓ PRESSUPOSTARIA"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-17T09:42:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/ODS_EXEC_FACT_AGR_CCAA_SP')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]",
				"[concat(variables('factoryId'), '/dataflows/DF_EXEC_FACT_DET_SECCIO_ENTITAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_LIA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ODS_LIA_FACT_LICITACIONS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_LIA_FACT_LICITACIONS",
								"type": "DataFlowReference",
								"parameters": {
									"Any": {
										"value": "'@{pipeline().parameters.Any}'",
										"type": "Expression"
									},
									"Mes": {
										"value": "'@{pipeline().parameters.Mes}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGLicitacions": {},
									"UnitatsAGE": {},
									"ODSLicitacions": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ODS_LIA_FACT_ADJUDICACIONS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_LIA_FACT_ADJUDICACIONS",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGAdjudicacions": {},
									"DMLicitacions": {},
									"ODSAdjudicacions": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Any": {
						"type": "string",
						"defaultValue": "2021"
					},
					"Mes": {
						"type": "string",
						"defaultValue": "01"
					}
				},
				"folder": {
					"name": "ÀMBIT LICITACIONS ADJUDICACIONS"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-17T09:42:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_LIA_FACT_LICITACIONS')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]",
				"[concat(variables('factoryId'), '/dataflows/DF_LIA_FACT_ADJUDICACIONS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_PRESSUPOST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ODS_PRES_FACT_AGR_RESUMEN_INVERSIONS",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS_PRES_FACT_AGR_RESUMEN_INVERSIONS",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGResumInversions": {},
									"DimCCAA": {},
									"ODSResumInversions": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ODS_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE",
								"type": "DataFlowReference",
								"parameters": {
									"Any": {
										"value": "'@{pipeline().parameters.Any}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGRestaEntitats": {},
									"DimCCAA": {},
									"ODSRestaEntitats": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ODS_PRES_FACT_AGR_CCAA_SP",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS_PRES_FACT_AGR_CCAA_SP",
								"type": "DataFlowReference",
								"parameters": {
									"Any": {
										"value": "'@{pipeline().parameters.Any}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGSPAdmin": {},
									"STGSPEmpr": {},
									"ComunitatsAutonomes": {},
									"ODSSP": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ODS_PRES_FACT_DET_SP",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS_PRES_FACT_DET_SP",
								"type": "DataFlowReference",
								"parameters": {
									"Any": {
										"value": "'@{pipeline().parameters.Any}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGSPAdmin": {},
									"STGSPEmpr": {},
									"Provincies": {},
									"ODSSP": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "ODS_PRES_FACT_DET_EST_OOAA_RE",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_ODS_PRES_FACT_DET_EST_OOAA_RE",
								"type": "DataFlowReference",
								"parameters": {
									"Any": {
										"value": "'@{pipeline().parameters.Any}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"STGDetRE": {},
									"STGDetSeguretatSocial": {},
									"Provincies": {},
									"ODSDetRE": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IntegrationRuntimeAzure",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Any": {
						"type": "string",
						"defaultValue": "2021"
					}
				},
				"folder": {
					"name": "ÀMBIT PRESSUPOST"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-17T09:42:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_ODS_PRES_FACT_AGR_RESUMEN_INVERSIONS')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IntegrationRuntimeAzure')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ODS_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ODS_PRES_FACT_AGR_CCAA_SP')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ODS_PRES_FACT_DET_SP')]",
				"[concat(variables('factoryId'), '/dataflows/DF_ODS_PRES_FACT_DET_EST_OOAA_RE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CARREGA_ANUAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "STG_PRESSUPOST",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_PYTHON_ANUAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "STG_PRESSUPOST",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Data_Any_Carrega": {
									"value": "@variables('ANY')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "STG_EXEC_PRESSUP",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_PYTHON_ANUAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "STG_EXEC_PRESSUP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Data_Any_Carrega": {
									"value": "@variables('ANY')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "HIST_PRESSUPOST",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STG_PRESSUPOST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "HIST_PRESSUPOST",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Any": {
									"value": "@variables('ANY')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "HIST_EXEC_PRESSUP",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STG_EXEC_PRESSUP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "HIST_EXEC_PRESSUP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Any": {
									"value": "@variables('ANY')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ODS_PRESSUPOST",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DIM_INVERSIONS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ODS_PRESSUPOST",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Any": {
									"value": "@variables('ANY')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ODS_EXEC_PRESSUP",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STG_EXEC_PRESSUP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ODS_EXEC_PRESSUP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Any": {
									"value": "@variables('ANY')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "DM_EXEC_PRESSUP",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ODS_EXEC_PRESSUP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DM_EXEC_PRESSUP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DM_PRESSUPOST",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ODS_PRESSUPOST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DM_PRESSUPOST",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DIM_INVERSIONS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STG_PRESSUPOST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DIM_INVERSIONS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PL_PYTHON_ANUAL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ANY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PYTHON_ANUAL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ANY",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ANY",
							"value": {
								"value": "@subtractFromTime(utcnow(),1,'year','yyyy')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"ANY": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-04-17T09:42:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/STG_PRESSUPOST')]",
				"[concat(variables('factoryId'), '/pipelines/STG_EXEC_PRESSUP')]",
				"[concat(variables('factoryId'), '/pipelines/HIST_PRESSUPOST')]",
				"[concat(variables('factoryId'), '/pipelines/HIST_EXEC_PRESSUP')]",
				"[concat(variables('factoryId'), '/pipelines/ODS_PRESSUPOST')]",
				"[concat(variables('factoryId'), '/pipelines/ODS_EXEC_PRESSUP')]",
				"[concat(variables('factoryId'), '/pipelines/DM_EXEC_PRESSUP')]",
				"[concat(variables('factoryId'), '/pipelines/DM_PRESSUPOST')]",
				"[concat(variables('factoryId'), '/pipelines/DIM_INVERSIONS')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PYTHON_ANUAL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CARREGA_MENSUAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "STG_LIA",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "PL_PYTHON_MENSUAL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "STG_LIA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Data_Any_Carrega": {
									"value": "@variables('ANY')",
									"type": "Expression"
								},
								"Data_Mes_Carrega": {
									"value": "@variables('MES')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ODS_LIA",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STG_LIA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ODS_LIA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Any": {
									"value": "@variables('ANY')",
									"type": "Expression"
								},
								"Mes": {
									"value": "@variables('MES')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "DM_LIA",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ODS_LIA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DM_LIA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "HIST_LIA",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STG_LIA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "HIST_LIA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Any": {
									"value": "@variables('ANY')",
									"type": "Expression"
								},
								"Mes": {
									"value": "@variables('MES')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "PL_PYTHON_MENSUAL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ANY",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_PYTHON_MENSUAL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ANY",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "MES",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "ANY",
							"value": {
								"value": "@subtractFromTime(utcnow(),0,'year','yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "MES",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "MES",
							"value": {
								"value": "@subtractFromTime(utcnow(),0,'Month','mm')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"ANY": {
						"type": "String"
					},
					"MES": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-04-17T09:42:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/STG_LIA')]",
				"[concat(variables('factoryId'), '/pipelines/ODS_LIA')]",
				"[concat(variables('factoryId'), '/pipelines/DM_LIA')]",
				"[concat(variables('factoryId'), '/pipelines/HIST_LIA')]",
				"[concat(variables('factoryId'), '/pipelines/PL_PYTHON_MENSUAL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PYTHON_ANUAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SS",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Detall_SP_Empresarial",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().globalParameters.AppServiceName,'.azurewebsites.net/SS')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "Start_App",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().globalParameters.AppServiceName,'.azurewebsites.net/')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {
								"Host": {
									"value": "@concat(pipeline().globalParameters.AppServiceName,'.azurewebsites.net')",
									"type": "Expression"
								},
								"Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
								"Connection": "keep-alive",
								"Cache-Control": "max-age=0"
							}
						}
					},
					{
						"name": "Download",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Start_App",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().globalParameters.AppServiceName,'.azurewebsites.net/download')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "CCAA_Ministeris",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Download",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().globalParameters.AppServiceName,'.azurewebsites.net/CCAA_Ministeris')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "Estado_org",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "CCAA_Ministeris",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().globalParameters.AppServiceName,'.azurewebsites.net/Estado_org')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "Resum_inv",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Estado_org",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().globalParameters.AppServiceName,'.azurewebsites.net/Resum_inv')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "Agr_SP_Admin",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Resum_inv",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().globalParameters.AppServiceName,'.azurewebsites.net/Agr_SP_Admin')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "SP_Admin",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Agr_SP_Admin",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().globalParameters.AppServiceName,'.azurewebsites.net/SP_Admin')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "Agr_SP_Empresarial",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SP_Admin",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().globalParameters.AppServiceName,'.azurewebsites.net/Agr_SP_Empresarial')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "Detall_SP_Empresarial",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Agr_SP_Empresarial",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().globalParameters.AppServiceName,'.azurewebsites.net/Detall_SP_Empresarial')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						}
					},
					{
						"name": "Pressupostaria",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "SS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().globalParameters.AppServiceName,'.azurewebsites.net/Pressupostaria')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PYTHONS"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-17T09:42:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PYTHON_MENSUAL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Start_App",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().globalParameters.AppServiceName,'.azurewebsites.net/')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {
								"Host": {
									"value": "@concat(pipeline().globalParameters.AppServiceName,'.azurewebsites.net')",
									"type": "Expression"
								},
								"Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
								"Connection": "keep-alive",
								"Cache-Control": "max-age=0"
							}
						}
					},
					{
						"name": "Monthly Download",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Start_App",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@concat('https://',pipeline().globalParameters.AppServiceName,'.azurewebsites.net/monthly_download')",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PYTHONS"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-17T09:42:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_EXEC_PRESSUP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "STG_EXEC_FACT_DET_AGE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[EXEC_FACT_DET_AGE]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_EXEC_FACT_DET_AGE",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_EXEC_FACT_DET_AGE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_EXEC_FACT_DET_OOAA_RE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[EXEC_FACT_DET_OOAA_RE]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_EXEC_FACT_DET_OOAA_RE",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_EXEC_FACT_DET_OOAA_RE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_EXEC_FACT_DET_SP_ADMIN",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[EXEC_FACT_DET_SP_ADMIN]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_EXEC_FACT_DET_SP_ADMIN",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_EXEC_FACT_DET_SP_ADMIN",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_EXEC_FACT_DET_SP_EMPR",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[EXEC_FACT_DET_SP_EMPR]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_EXEC_FACT_DET_SP_EMPR",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_EXEC_FACT_DET_SP_EMPR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_EXEC_FACT_AGR_CCAA_AGE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[EXEC_FACT_AGR_CCAA_AGE]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_EXEC_FACT_AGR_CCAA_AGE",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_EXEC_FACT_AGR_CCAA_AGE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_EXEC_FACT_AGR_CCAA_OOAA_RE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[EXEC_FACT_AGR_CCAA_OOAA_RE]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_EXEC_FACT_AGR_CCAA_OOAA_RE",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_EXEC_FACT_AGR_CCAA_OOAA_RE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_EXEC_FACT_AGR_CCAA_SP_ADMIN",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[EXEC_FACT_AGR_CCAA_SP_ADMIN]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_EXEC_FACT_AGR_CCAA_SP_ADMIN",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_EXEC_FACT_AGR_CCAA_SP_ADMIN",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_EXEC_FACT_AGR_CCAA_SP_EMPR",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[EXEC_FACT_AGR_CCAA_SP_EMPR]\n",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_EXEC_FACT_AGR_CCAA_SP_EMPR",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_EXEC_FACT_AGR_CCAA_SP_EMPR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Data_Any_Carrega": {
						"type": "string",
						"defaultValue": "2021"
					}
				},
				"folder": {
					"name": "ÀMBIT EXECUCIÓ PRESSUPOSTARIA"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-17T09:42:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CSV_EXEC_FACT_DET_AGE')]",
				"[concat(variables('factoryId'), '/datasets/STG_EXEC_FACT_DET_AGE')]",
				"[concat(variables('factoryId'), '/datasets/CSV_EXEC_FACT_DET_OOAA_RE')]",
				"[concat(variables('factoryId'), '/datasets/STG_EXEC_FACT_DET_OOAA_RE')]",
				"[concat(variables('factoryId'), '/datasets/CSV_EXEC_FACT_DET_SP_ADMIN')]",
				"[concat(variables('factoryId'), '/datasets/STG_EXEC_FACT_DET_SP_ADMIN')]",
				"[concat(variables('factoryId'), '/datasets/CSV_EXEC_FACT_DET_SP_EMPR')]",
				"[concat(variables('factoryId'), '/datasets/STG_EXEC_FACT_DET_SP_EMPR')]",
				"[concat(variables('factoryId'), '/datasets/CSV_EXEC_FACT_AGR_CCAA_AGE')]",
				"[concat(variables('factoryId'), '/datasets/STG_EXEC_FACT_AGR_CCAA_AGE')]",
				"[concat(variables('factoryId'), '/datasets/CSV_EXEC_FACT_AGR_CCAA_OOAA_RE')]",
				"[concat(variables('factoryId'), '/datasets/STG_EXEC_FACT_AGR_CCAA_OOAA_RE')]",
				"[concat(variables('factoryId'), '/datasets/CSV_EXEC_FACT_AGR_CCAA_SP_ADMIN')]",
				"[concat(variables('factoryId'), '/datasets/STG_EXEC_FACT_AGR_CCAA_SP_ADMIN')]",
				"[concat(variables('factoryId'), '/datasets/CSV_EXEC_FACT_AGR_CCAA_SP_EMPR')]",
				"[concat(variables('factoryId'), '/datasets/STG_EXEC_FACT_AGR_CCAA_SP_EMPR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_LIA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "STG_LIA_FACT_LICITACIONS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[LIA_FACT_LICITACIONS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "XLSX_LIA_FACT_LICITACIONS",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									},
									"Mes": {
										"value": "@pipeline().parameters.Data_Mes_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_LIA_FACT_LICITACIONS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_LIA_FACT_ADJUDICACIONS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[LIA_FACT_ADJUDICACIONS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "XLSX_LIA_FACT_ADJUDICACIONS",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									},
									"Mes": {
										"value": "@pipeline().parameters.Data_Mes_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_LIA_FACT_ADJUDICACIONS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Data_Any_Carrega": {
						"type": "string",
						"defaultValue": "2021"
					},
					"Data_Mes_Carrega": {
						"type": "string",
						"defaultValue": "01"
					}
				},
				"folder": {
					"name": "ÀMBIT LICITACIONS ADJUDICACIONS"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-17T09:42:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/XLSX_LIA_FACT_LICITACIONS')]",
				"[concat(variables('factoryId'), '/datasets/STG_LIA_FACT_LICITACIONS')]",
				"[concat(variables('factoryId'), '/datasets/XLSX_LIA_FACT_ADJUDICACIONS')]",
				"[concat(variables('factoryId'), '/datasets/STG_LIA_FACT_ADJUDICACIONS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_PRESSUPOST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "STG_PRES_FACT_DET_EST_OOAA_RE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[PRES_FACT_DET_EST_OOAA_RE]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_PRES_FACT_DET_EST_OOAA_RE",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_PRES_FACT_DET_EST_OOAA_RE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_PRES_FACT_AGR_RESUMEN_INVERSIONS",
						"description": "",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[PRES_FACT_AGR_RESUMEN_INVERSIONS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_PRES_FACT_AGR_RESUMEN_INVERSIONS",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_PRES_FACT_AGR_RESUMEN_INVERSIONS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_PRES_FACT_AGR_CCAA_SP_ADMIN",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[PRES_FACT_AGR_CCAA_SP_ADMIN]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_PRES_FACT_AGR_CCAA_SP_ADMIN",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_PRES_FACT_AGR_CCAA_SP_ADMIN",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_PRES_FACT_AGR_CCAA_SP_EMPR",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[PRES_FACT_AGR_CCAA_SP_EMPR]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_PRES_FACT_AGR_CCAA_SP_EMPR",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_PRES_FACT_AGR_CCAA_SP_EMPR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_PRES_FACT_DET_SP_ADMIN",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[PRES_FACT_DET_SP_ADMIN]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_PRES_FACT_DET_SP_ADMIN",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_PRES_FACT_DET_SP_ADMIN",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_PRES_FACT_DET_SP_EMPR",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[PRES_FACT_DET_SP_EMPR]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_PRES_FACT_DET_SP_EMPR",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_PRES_FACT_DET_SP_EMPR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_PRES_FACT_DET_SEGURETAT_SOCIAL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[PRES_FACT_DET_SEGURETAT_SOCIAL]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_PRES_FACT_DET_SEGURETAT_SOCIAL",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_PRES_FACT_DET_SEGURETAT_SOCIAL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Data_Any_Carrega": {
						"type": "string",
						"defaultValue": "2021"
					}
				},
				"folder": {
					"name": "ÀMBIT PRESSUPOST"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-17T09:42:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CSV_PRES_FACT_DET_EST_OOAA_RE')]",
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_DET_EST_OOAA_RE')]",
				"[concat(variables('factoryId'), '/datasets/CSV_PRES_FACT_AGR_RESUMEN_INVERSIONS')]",
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_AGR_RESUMEN_INVERSIONS')]",
				"[concat(variables('factoryId'), '/datasets/CSV_PRES_FACT_AGR_CCAA_SP_ADMIN')]",
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_AGR_CCAA_SP_ADMIN')]",
				"[concat(variables('factoryId'), '/datasets/CSV_PRES_FACT_AGR_CCAA_SP_EMPR')]",
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_AGR_CCAA_SP_EMPR')]",
				"[concat(variables('factoryId'), '/datasets/CSV_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE')]",
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE')]",
				"[concat(variables('factoryId'), '/datasets/CSV_PRES_FACT_DET_SP_ADMIN')]",
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_DET_SP_ADMIN')]",
				"[concat(variables('factoryId'), '/datasets/CSV_PRES_FACT_DET_SP_EMPR')]",
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_DET_SP_EMPR')]",
				"[concat(variables('factoryId'), '/datasets/CSV_PRES_FACT_DET_SEGURETAT_SOCIAL')]",
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_DET_SEGURETAT_SOCIAL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_DIM_ENTITATS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ORIGEN"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "DIM_DET_SEGURETAT_SOCIAL_ENTITATS.csv",
						"container": "inversionsestat"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_EXEC_FACT_AGR_CCAA_AGE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Any": {
						"type": "string",
						"defaultValue": "2021"
					}
				},
				"folder": {
					"name": "ORIGEN"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(\r\n\r\ndataset().Any,\r\n\r\n'_EXEC_FACT_AGR_CCAA_AGE.csv'\r\n)",
							"type": "Expression"
						},
						"container": "inversionsestat"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "IDCCAA;Cr�dit Inicial;Obligacions Reconegudes;%",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_EXEC_FACT_AGR_CCAA_OOAA_RE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Any": {
						"type": "string",
						"defaultValue": "2021"
					}
				},
				"folder": {
					"name": "ORIGEN"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Any,\n\n'_EXEC_FACT_AGR_CCAA_OOAA_RE.csv'\n)",
							"type": "Expression"
						},
						"container": "inversionsestat"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "IDCCAA;Cr�dit Inicial;Obligacions Reconegudes;%",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_EXEC_FACT_AGR_CCAA_SP_ADMIN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Any": {
						"type": "string",
						"defaultValue": "2021"
					}
				},
				"folder": {
					"name": "ORIGEN"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Any,\n\n'_EXEC_FACT_AGR_CCAA_SP_ADMIN.csv'\n)",
							"type": "Expression"
						},
						"container": "inversionsestat"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "IDCCAA;Inversi� Inicial;Inversi� Real;%",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_EXEC_FACT_AGR_CCAA_SP_EMPR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Any": {
						"type": "string",
						"defaultValue": "2021"
					}
				},
				"folder": {
					"name": "ORIGEN"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Any,\n\n'_EXEC_FACT_AGR_CCAA_SP_EMPR.csv'\n)",
							"type": "Expression"
						},
						"container": "inversionsestat"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "IDCCAA;Inversi� Inicial;Inversi� Real;%",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_EXEC_FACT_DET_AGE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Any": {
						"type": "string",
						"defaultValue": "2021"
					}
				},
				"folder": {
					"name": "ORIGEN"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Any,\n\n'_EXEC_FACT_DET_AGE.csv'\n)",
							"type": "Expression"
						},
						"container": "inversionsestat"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Codi Secci�;Cr�dit Inicial;Obligacions Reconegudes;%",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_EXEC_FACT_DET_OOAA_RE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Any": {
						"type": "string",
						"defaultValue": "2021"
					}
				},
				"folder": {
					"name": "ORIGEN"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Any,\n\n'_EXEC_FACT_DET_OOAA_RE.csv'\n)",
							"type": "Expression"
						},
						"container": "inversionsestat"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Codi Secci�;Cr�dit Inicial;Obligacions Reconegudes;%",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_EXEC_FACT_DET_SP_ADMIN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Any": {
						"type": "string",
						"defaultValue": "2021"
					}
				},
				"folder": {
					"name": "ORIGEN"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Any,\n\n'_EXEC_FACT_DET_SP_ADMIN.csv'\n)",
							"type": "Expression"
						},
						"container": "inversionsestat"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "IDCCAA;Inversi� Inicial;Inversi� Real;%",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_EXEC_FACT_DET_SP_EMPR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Any": {
						"type": "string",
						"defaultValue": "2021"
					}
				},
				"folder": {
					"name": "ORIGEN"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Any,\n\n'_EXEC_FACT_DET_SP_EMPR.csv'\n)",
							"type": "Expression"
						},
						"container": "inversionsestat"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Entitat;Inversi� Inicial;Inversi� Real;%",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Any": {
						"type": "string",
						"defaultValue": "2021"
					}
				},
				"folder": {
					"name": "ORIGEN"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Any,\n\n'_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE.csv'\n)",
							"type": "Expression"
						},
						"container": "inversionsestat"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Secc. 02",
						"type": "String"
					},
					{
						"name": "REGIONALIZABLE",
						"type": "String"
					},
					{
						"name": "7.097,78",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_PRES_FACT_AGR_CCAA_SP_ADMIN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Any": {
						"type": "string",
						"defaultValue": "2021"
					}
				},
				"folder": {
					"name": "ORIGEN"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Any,\n\n'_PRES_FACT_AGR_CCAA_SP_ADMIN.csv'\n)",
							"type": "Expression"
						},
						"container": "inversionsestat"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_PRES_FACT_AGR_CCAA_SP_EMPR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Any": {
						"type": "string",
						"defaultValue": "2021"
					}
				},
				"folder": {
					"name": "ORIGEN"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Any,\n\n'_PRES_FACT_AGR_CCAA_SP_EMPR.csv'\n)",
							"type": "Expression"
						},
						"container": "inversionsestat"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_PRES_FACT_AGR_RESUMEN_INVERSIONS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Any": {
						"type": "string",
						"defaultValue": "2021"
					}
				},
				"folder": {
					"name": "ORIGEN"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Any,\n\n'_PRES_FACT_AGR_RESUMEN_INVERSIONS.csv'\n)",
							"type": "Expression"
						},
						"container": "inversionsestat"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "COMUNITAT_AUTONOMA",
						"type": "String"
					},
					{
						"name": "COST_TOTAL",
						"type": "String"
					},
					{
						"name": "ANY_EXC_PRESUPOSTARI",
						"type": "String"
					},
					{
						"name": "INVERSIO",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_PRES_FACT_DET_EST_OOAA_RE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Any": {
						"type": "string",
						"defaultValue": "2021"
					}
				},
				"folder": {
					"name": "ORIGEN"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Any,\n\n'_PRES_FACT_DET_EST_OOAA_RE.csv'\n)",
							"type": "Expression"
						},
						"container": "inversionsestat"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_PRES_FACT_DET_SEGURETAT_SOCIAL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Any": {
						"type": "string",
						"defaultValue": "2021"
					}
				},
				"folder": {
					"name": "ORIGEN"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(\n\n    dataset().Any,\n\n    '_PRES_FACT_DET_SEGURETAT_SOCIAL.csv'\n)",
							"type": "Expression"
						},
						"container": "inversionsestat"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Organisme;Programa;Article;Centre Tipus;Número;Denominació;Inici;Final;Import Total;ANY;ANY+1;ANY+2;ANY+3;Província;ID Entitat",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_PRES_FACT_DET_SP_ADMIN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Any": {
						"type": "string",
						"defaultValue": "2021"
					}
				},
				"folder": {
					"name": "ORIGEN"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Any,\n\n'_PRES_FACT_DET_SP_ADMIN.csv'\n)",
							"type": "Expression"
						},
						"container": "inversionsestat"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "COMUNITAT_AUTONOMA",
						"type": "String"
					},
					{
						"name": "PROVINCIA",
						"type": "String"
					},
					{
						"name": "ENTITAT",
						"type": "String"
					},
					{
						"name": "CODI PROJECTE",
						"type": "String"
					},
					{
						"name": "DENOMINACIO",
						"type": "String"
					},
					{
						"name": "COST TOTAL",
						"type": "String"
					},
					{
						"name": "INICI",
						"type": "String"
					},
					{
						"name": "FI",
						"type": "String"
					},
					{
						"name": "TIPUS",
						"type": "String"
					},
					{
						"name": "ANY_ANTERIOR",
						"type": "String"
					},
					{
						"name": "ANY_ACTUAL",
						"type": "String"
					},
					{
						"name": "ANY_ACTUAL+1",
						"type": "String"
					},
					{
						"name": "ANY_ACTUAL+2",
						"type": "String"
					},
					{
						"name": "ANY_ACTUAL+3",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV_PRES_FACT_DET_SP_EMPR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Any": {
						"type": "string",
						"defaultValue": "2021"
					}
				},
				"folder": {
					"name": "ORIGEN"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Any,\n\n'_PRES_FACT_DET_SP_EMPR.csv'\n)",
							"type": "Expression"
						},
						"container": "inversionsestat"
					},
					"columnDelimiter": ";",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "COMUNITAT_AUTONOMA,PROVINCIA,ENTITAT,CODI PROJECTE,DENOMINACIO,COST TOTAL,INICI,FI,TIPUS,ANY_ANTERIOR,ANY_ACTUAL,ANY_ACTUAL+1,ANY_ACTUAL+2,ANY_ACTUAL+3",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DIM_PROVINCIES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_PROVINCIA",
						"type": "nvarchar"
					},
					{
						"name": "ID_CCAA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NOM_PROVINCIA",
						"type": "varchar"
					},
					{
						"name": "NOM_PROVINCIA_CAT",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "TER_DM",
					"table": "DIM_PROVINCIES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_DIM_COMUNITATS_AUTONOMES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_CCAA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NOM_CCAA",
						"type": "varchar"
					},
					{
						"name": "NOM_CCAA_CAT",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "TER_DM",
					"table": "DIM_COMUNITATS_AUTONOMES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_DIM_ENTITATS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_ENTITAT",
						"type": "nvarchar"
					},
					{
						"name": "NOM_ENTITAT",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_DM",
					"table": "DIM_ENTITATS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_DIM_MINISTERIS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_MINISTERI",
						"type": "nvarchar"
					},
					{
						"name": "DESC_MINISTERI",
						"type": "nvarchar"
					},
					{
						"name": "DATA_INICI",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "INV_DM",
					"table": "DIM_MINISTERIS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_DIM_PROJECTES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_PROJECTE",
						"type": "nvarchar"
					},
					{
						"name": "NOM_PROJECTE",
						"type": "nvarchar"
					},
					{
						"name": "DESC_COMENTARI",
						"type": "nvarchar"
					},
					{
						"name": "ID_MACROPROJECTE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CODI_PROJECTE_CLAU",
						"type": "nchar"
					}
				],
				"typeProperties": {
					"schema": "INV_DM",
					"table": "DIM_PROJECTES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_DIM_UNITATS_AGE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_UNITAT_ORGANICA",
						"type": "nvarchar"
					},
					{
						"name": "DESC_UNITAT_ORGANICA",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_DM",
					"table": "DIM_UNITATS_AGE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_EXEC_FACT_AGR_CCAA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_CCAA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESC_TIPUS_ORGANISME",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_CREDIT_INICIAL",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "QTY_OBLIGACIONS_RECONEGUDES",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "QTY_PERCENTATGE",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "DATA_CARREGA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "INV_DM",
					"table": "EXEC_FACT_AGR_CCAA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_EXEC_FACT_DET_SECCIO_ENTITAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODI_SECCIO",
						"type": "nvarchar"
					},
					{
						"name": "DESC_ENTITAT",
						"type": "nvarchar"
					},
					{
						"name": "DESC_TIPUS_ORGANISME",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_CREDIT_INICIAL",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "QTY_OBLIGACIONS_RECONEGUDES",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "QTY_PERCENTATGE",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "DATA_CARREGA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "INV_DM",
					"table": "EXEC_FACT_DET_SECCIO_ENTITAT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_LIA_FACT_ADJUDICACIONS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_LICITACIO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_IMPORT_ADJUDICACIO",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "DATA_ACORD_LICITACIO",
						"type": "date"
					},
					{
						"name": "DATA_CARREGA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "INV_DM",
					"table": "LIA_FACT_ADJUDICACIONS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_LIA_FACT_LICITACIONS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_LICITACIO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CODI_PROJECTE_CLAU",
						"type": "nvarchar"
					},
					{
						"name": "DESC_OBJ_CONTRACTE",
						"type": "nvarchar"
					},
					{
						"name": "DESC_ESTAT",
						"type": "nvarchar"
					},
					{
						"name": "QTY_PRESSUPOST",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "DATA_PRIMERA_PUBLICACIO",
						"type": "date"
					},
					{
						"name": "DATA_CARREGA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "INV_DM",
					"table": "LIA_FACT_LICITACIONS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_CCAA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_MINISTERI",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY_EXC_PRESSUPOSTARI",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_COST_TOTAL",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_CARREGA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "INV_DM",
					"table": "PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_PRES_FACT_AGR_CCAA_SP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_CCAA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESC_TIPUS_ORGANISME",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY_ANT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_ANT",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_EXC_PRESSUPOSTARI",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_EXC_PRESSUPOSTARI",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_1",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_2",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_3",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_3",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_CARREGA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "INV_DM",
					"table": "PRES_FACT_AGR_CCAA_SP"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_PRES_FACT_AGR_RESUMEN_INVERSIONS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_CCAA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESC_INVERSIO",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY_EXC_PRESUPOSTARI",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_COST_TOTAL",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_CARREGA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "INV_DM",
					"table": "PRES_FACT_AGR_RESUMEN_INVERSIONS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_PRES_FACT_DET_EST_OOAA_RE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_PROVINCIA",
						"type": "nvarchar"
					},
					{
						"name": "ID_MINISTERI",
						"type": "nvarchar"
					},
					{
						"name": "ID_PROGRAMA",
						"type": "nvarchar"
					},
					{
						"name": "ID_ARTICLE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_PROJECTE",
						"type": "nvarchar"
					},
					{
						"name": "ID_ENTITAT",
						"type": "nvarchar"
					},
					{
						"name": "DESC_PROJECTE",
						"type": "nvarchar"
					},
					{
						"name": "CODI_CENTRE",
						"type": "nvarchar"
					},
					{
						"name": "DESC_CENTRE",
						"type": "nvarchar"
					},
					{
						"name": "ANY_INICI",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ANY_FI",
						"type": "int",
						"precision": 10
					},
					{
						"name": "COD_TIPUS_PROJECTE",
						"type": "nvarchar"
					},
					{
						"name": "QTY_COST_TOTAL",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_ANT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_ANT",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_EXC_PRESSUPOSTARI",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_EXC_PRESSUPOSTARI",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_1",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_2",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_3",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_3",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "FLAG_SEGURETAT_SOCIAL",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_CARREGA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "INV_DM",
					"table": "PRES_FACT_DET_EST_OOAA_RE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DM_PRES_FACT_DET_SP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DM"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_PROVINCIA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESC_TIPUS_ORGANISME",
						"type": "nvarchar"
					},
					{
						"name": "DESC_ENTITAT",
						"type": "nvarchar"
					},
					{
						"name": "COD_PROJECTE",
						"type": "nvarchar"
					},
					{
						"name": "DESC_DENOMINACIO",
						"type": "nvarchar"
					},
					{
						"name": "ANY_INICI",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ANY_FI",
						"type": "int",
						"precision": 10
					},
					{
						"name": "COD_TIPUS",
						"type": "nvarchar"
					},
					{
						"name": "QTY_COST_TOTAL",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_ANT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_ANT",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_EXC_PRESSUPOSTARI",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_EXC_PRESSUPOSTARI",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_1",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_2",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_3",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_3",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_CARREGA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "INV_DM",
					"table": "PRES_FACT_DET_SP"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIST_EXEC_FACT_AGR_CCAA_AGE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HIST"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "IDCCAA",
						"type": "nvarchar"
					},
					{
						"name": "Crèdit Inicial",
						"type": "nvarchar"
					},
					{
						"name": "Obligacions Reconegudes",
						"type": "nvarchar"
					},
					{
						"name": "%",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY_FITXER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_CARREGA",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "INV_HIST",
					"table": "EXEC_FACT_AGR_CCAA_AGE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIST_EXEC_FACT_AGR_CCAA_OOAA_RE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HIST"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "IDCCAA",
						"type": "nvarchar"
					},
					{
						"name": "Crèdit Inicial",
						"type": "nvarchar"
					},
					{
						"name": "Obligacions Reconegudes",
						"type": "nvarchar"
					},
					{
						"name": "%",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY_FITXER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_CARREGA",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "INV_HIST",
					"table": "EXEC_FACT_AGR_CCAA_OOAA_RE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIST_EXEC_FACT_AGR_CCAA_SP_ADMIN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HIST"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "IDCCAA",
						"type": "nvarchar"
					},
					{
						"name": "Inversió Inicial",
						"type": "nvarchar"
					},
					{
						"name": "Inversió Real",
						"type": "nvarchar"
					},
					{
						"name": "%",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY_FITXER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_CARREGA",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "INV_HIST",
					"table": "EXEC_FACT_AGR_CCAA_SP_ADMIN"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIST_EXEC_FACT_AGR_CCAA_SP_EMPR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HIST"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "IDCCAA",
						"type": "nvarchar"
					},
					{
						"name": "Inversió Inicial",
						"type": "nvarchar"
					},
					{
						"name": "Inversió Real",
						"type": "nvarchar"
					},
					{
						"name": "%",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY_FITXER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_CARREGA",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "INV_HIST",
					"table": "EXEC_FACT_AGR_CCAA_SP_EMPR"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIST_EXEC_FACT_DET_AGE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HIST"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Codi Secció",
						"type": "nvarchar"
					},
					{
						"name": "Crèdit Inicial",
						"type": "nvarchar"
					},
					{
						"name": "Obligacions Reconegudes",
						"type": "nvarchar"
					},
					{
						"name": "%",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY_FITXER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_CARREGA",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "INV_HIST",
					"table": "EXEC_FACT_DET_AGE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIST_EXEC_FACT_DET_OOAA_RE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HIST"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Codi Secció",
						"type": "nvarchar"
					},
					{
						"name": "Crèdit Inicial",
						"type": "nvarchar"
					},
					{
						"name": "Obligacions Reconegudes",
						"type": "nvarchar"
					},
					{
						"name": "%",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY_FITXER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_CARREGA",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "INV_HIST",
					"table": "EXEC_FACT_DET_OOAA_RE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIST_EXEC_FACT_DET_SP_ADMIN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HIST"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Entitat",
						"type": "nvarchar"
					},
					{
						"name": "Inversio Inicial",
						"type": "nvarchar"
					},
					{
						"name": "Inversio Real",
						"type": "nvarchar"
					},
					{
						"name": "Percentatge",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY_FITXER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_CARREGA",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "INV_HIST",
					"table": "EXEC_FACT_DET_SP_ADMIN"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIST_EXEC_FACT_DET_SP_EMPR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HIST"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Entitat",
						"type": "nvarchar"
					},
					{
						"name": "Inversió Inicial",
						"type": "nvarchar"
					},
					{
						"name": "Inversió Real",
						"type": "nvarchar"
					},
					{
						"name": "%",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY_FITXER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_CARREGA",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "INV_HIST",
					"table": "EXEC_FACT_DET_SP_EMPR"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIST_LIA_FACT_ADJUDICACIONS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HIST"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Identificador",
						"type": "nvarchar"
					},
					{
						"name": "Link licitación",
						"type": "nvarchar"
					},
					{
						"name": "Fecha actualización",
						"type": "nvarchar"
					},
					{
						"name": "Número de expediente",
						"type": "nvarchar"
					},
					{
						"name": "Lote",
						"type": "nvarchar"
					},
					{
						"name": "Objeto licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Presupuesto base con impuestos licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Presupuesto base sin impuestos licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "CPV licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Lugar ejecución licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Resultado licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Fecha del acuerdo licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Número de ofertas recibidas por licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Precio de la oferta más baja por licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Precio de la oferta más alta por licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Se han excluído ofertas por ser anormalmente bajas por licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Número del contrato licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Fecha formalización del contrato licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Fecha entrada en vigor del contrato de licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Adjudicatario licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Tipo de identificador de adjudicatario por licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Identificador Adjudicatario de la licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "El adjudicatario es o no PYME de la licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Importe adjudicación sin impuestos licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Importe adjudicación con impuestos licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY_MES_FITXER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_CARREGA",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "INV_HIST",
					"table": "LIA_FACT_ADJUDICACIONS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIST_LIA_FACT_LICITACIONS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HIST"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Identificador",
						"type": "nvarchar"
					},
					{
						"name": "Link licitación",
						"type": "nvarchar"
					},
					{
						"name": "Fecha actualización",
						"type": "nvarchar"
					},
					{
						"name": "Vigente/Anulada/Archivada",
						"type": "nvarchar"
					},
					{
						"name": "Primera publicación",
						"type": "nvarchar"
					},
					{
						"name": "Estado",
						"type": "nvarchar"
					},
					{
						"name": "Número de expediente",
						"type": "nvarchar"
					},
					{
						"name": "Objeto del Contrato",
						"type": "nvarchar"
					},
					{
						"name": "Valor estimado del contrato",
						"type": "nvarchar"
					},
					{
						"name": "Presupuesto base sin impuestos",
						"type": "nvarchar"
					},
					{
						"name": "Presupuesto base con impuestos",
						"type": "nvarchar"
					},
					{
						"name": "CPV",
						"type": "nvarchar"
					},
					{
						"name": "Tipo de contrato",
						"type": "nvarchar"
					},
					{
						"name": "Lugar de ejecución",
						"type": "nvarchar"
					},
					{
						"name": "Órgano de Contratación",
						"type": "nvarchar"
					},
					{
						"name": "ID OC en PLACSP",
						"type": "nvarchar"
					},
					{
						"name": "NIF OC",
						"type": "nvarchar"
					},
					{
						"name": "DIR3",
						"type": "nvarchar"
					},
					{
						"name": "Enlace al Perfil de Contratante del OC",
						"type": "nvarchar"
					},
					{
						"name": "Tipo de Administración",
						"type": "nvarchar"
					},
					{
						"name": "Código Postal",
						"type": "nvarchar"
					},
					{
						"name": "Tipo de procedimiento",
						"type": "nvarchar"
					},
					{
						"name": "Sistema de contratación",
						"type": "nvarchar"
					},
					{
						"name": "Tramitación",
						"type": "nvarchar"
					},
					{
						"name": "Forma de presentación de la oferta",
						"type": "nvarchar"
					},
					{
						"name": "Fecha de presentación de ofertas",
						"type": "nvarchar"
					},
					{
						"name": "Fecha de presentación de solicitudes de participacion",
						"type": "nvarchar"
					},
					{
						"name": "Directiva de aplicación",
						"type": "nvarchar"
					},
					{
						"name": "Financiación Europea y fuente",
						"type": "nvarchar"
					},
					{
						"name": "Descripción de la financiación europea",
						"type": "nvarchar"
					},
					{
						"name": "Subcontratación permitida",
						"type": "nvarchar"
					},
					{
						"name": "Subcontratación permitida porcentaje",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY_MES_FITXER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_CARREGA",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "INV_HIST",
					"table": "LIA_FACT_LICITACIONS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIST_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HIST"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "MINISTERI",
						"type": "nvarchar"
					},
					{
						"name": "COMUNIDAD AUTONOMA",
						"type": "nvarchar"
					},
					{
						"name": "COST TOTAL",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY_FITXER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_CARREGA",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "INV_HIST",
					"table": "PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIST_PRES_FACT_AGR_CCAA_SP_ADMIN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HIST"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "COMUNITAT AUTONOMA",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ANTERIOR",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+1",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+2",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+3",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY_FITXER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_CARREGA",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "INV_HIST",
					"table": "PRES_FACT_AGR_CCAA_SP_ADMIN"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIST_PRES_FACT_AGR_CCAA_SP_EMPR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HIST"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "COMUNITATS AUTONOMES",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ANTERIOR",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+1",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+2",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+3",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY_FITXER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_CARREGA",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "INV_HIST",
					"table": "PRES_FACT_AGR_CCAA_SP_EMPR"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIST_PRES_FACT_AGR_RESUMEN_INVERSIONS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HIST"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "COMUNITAT_AUTONOMA",
						"type": "nvarchar"
					},
					{
						"name": "COST_TOTAL",
						"type": "nvarchar"
					},
					{
						"name": "ANY_EXC_PRESUPOSTARI",
						"type": "nvarchar"
					},
					{
						"name": "INVERSIO",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY_FITXER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_CARREGA",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "INV_HIST",
					"table": "PRES_FACT_AGR_RESUMEN_INVERSIONS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIST_PRES_FACT_DET_EST_OOAA_RE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HIST"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_MINISTERI",
						"type": "nvarchar"
					},
					{
						"name": "DESC_MINISTERI",
						"type": "nvarchar"
					},
					{
						"name": "COMUNITAT_AUTONOMA",
						"type": "nvarchar"
					},
					{
						"name": "CODI_CENTRE",
						"type": "nvarchar"
					},
					{
						"name": "ID_PROGRAMA",
						"type": "nvarchar"
					},
					{
						"name": "ID_ARTICLE",
						"type": "nvarchar"
					},
					{
						"name": "DESC_CENTRE",
						"type": "nvarchar"
					},
					{
						"name": "ID_PROJECTE",
						"type": "nvarchar"
					},
					{
						"name": "NOM_PROJECTE",
						"type": "nvarchar"
					},
					{
						"name": "ANY_INICI",
						"type": "nvarchar"
					},
					{
						"name": "ANY_FI",
						"type": "nvarchar"
					},
					{
						"name": "PROVINCIA",
						"type": "nvarchar"
					},
					{
						"name": "TIPUS",
						"type": "nvarchar"
					},
					{
						"name": "COST_TOTAL",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ANTERIOR",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+1",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+2",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+3",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY_FITXER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_CARREGA",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "INV_HIST",
					"table": "PRES_FACT_DET_EST_OOAA_RE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIST_PRES_FACT_DET_SEGURETAT_SOCIAL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HIST"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Organisme",
						"type": "nvarchar"
					},
					{
						"name": "Programa",
						"type": "nvarchar"
					},
					{
						"name": "Article",
						"type": "nvarchar"
					},
					{
						"name": "Centre Tipus",
						"type": "nvarchar"
					},
					{
						"name": "Número",
						"type": "nvarchar"
					},
					{
						"name": "Denominació",
						"type": "nvarchar"
					},
					{
						"name": "Inici",
						"type": "nvarchar"
					},
					{
						"name": "Final",
						"type": "nvarchar"
					},
					{
						"name": "Import Total",
						"type": "nvarchar"
					},
					{
						"name": "ANY",
						"type": "nvarchar"
					},
					{
						"name": "ANY+1",
						"type": "nvarchar"
					},
					{
						"name": "ANY+2",
						"type": "nvarchar"
					},
					{
						"name": "ANY+3",
						"type": "nvarchar"
					},
					{
						"name": "Província",
						"type": "nvarchar"
					},
					{
						"name": "ID Entitat",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY_FITXER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_CARREGA",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "INV_HIST",
					"table": "PRES_FACT_DET_SEGURETAT_SOCIAL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIST_PRES_FACT_DET_SP_ADMIN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HIST"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "COMUNITAT_AUTONOMA",
						"type": "nvarchar"
					},
					{
						"name": "PROVINCIA",
						"type": "nvarchar"
					},
					{
						"name": "ENTITAT",
						"type": "nvarchar"
					},
					{
						"name": "CODI PROJECTE",
						"type": "nvarchar"
					},
					{
						"name": "DENOMINACIO",
						"type": "nvarchar"
					},
					{
						"name": "COST TOTAL",
						"type": "nvarchar"
					},
					{
						"name": "INICI",
						"type": "nvarchar"
					},
					{
						"name": "FI",
						"type": "nvarchar"
					},
					{
						"name": "TIPUS",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ANTERIOR",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+1",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+2",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+3",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY_FITXER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_CARREGA",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "INV_HIST",
					"table": "PRES_FACT_DET_SP_ADMIN"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HIST_PRES_FACT_DET_SP_EMPR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "HIST"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "COMUNITAT_AUTONOMA,PROVINCIA",
						"type": "nvarchar"
					},
					{
						"name": "ENTITAT",
						"type": "nvarchar"
					},
					{
						"name": "CODI PROJECTE",
						"type": "nvarchar"
					},
					{
						"name": "DENOMINACIO",
						"type": "nvarchar"
					},
					{
						"name": "COST TOTAL",
						"type": "nvarchar"
					},
					{
						"name": "INICI",
						"type": "nvarchar"
					},
					{
						"name": "FI",
						"type": "nvarchar"
					},
					{
						"name": "TIPUS",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ANTERIOR",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+1",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+2",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+3",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY_FITXER",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_CARREGA",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "INV_HIST",
					"table": "PRES_FACT_DET_SP_EMPR"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_DIM_ENTITATS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_ENTITAT",
						"type": "nvarchar"
					},
					{
						"name": "NOM_ENTITAT",
						"type": "nvarchar"
					},
					{
						"name": "DATA_CARREGA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "INV_ODS",
					"table": "DIM_ENTITATS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_DIM_UNITATS_AGE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_UNITAT_ORGANICA",
						"type": "nvarchar"
					},
					{
						"name": "DESC_UNITAT_ORGANICA",
						"type": "nvarchar"
					},
					{
						"name": "DATA_CARREGA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "INV_ODS",
					"table": "DIM_UNITATS_AGE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_EXEC_FACT_AGR_CCAA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_CCAA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESC_TIPUS_ORGANISME",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_CREDIT_INICIAL",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "QTY_OBLIGACIONS_RECONEGUDES",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "QTY_PERCENTATGE",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "DATA_CARREGA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "INV_ODS",
					"table": "EXEC_FACT_AGR_CCAA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_EXEC_FACT_DET_SECCIO_ENTITAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CODI_SECCIO",
						"type": "nvarchar"
					},
					{
						"name": "DESC_ENTITAT",
						"type": "nvarchar"
					},
					{
						"name": "DESC_TIPUS_ORGANISME",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_CREDIT_INICIAL",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "QTY_OBLIGACIONS_RECONEGUDES",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "QTY_PERCENTATGE",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "DATA_CARREGA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "INV_ODS",
					"table": "EXEC_FACT_DET_SECCIO_ENTITAT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_LIA_FACT_ADJUDICACIONS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_LICITACIO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_IMPORT_ADJUDICACIO",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "DATA_ACORD_LICITACIO",
						"type": "date"
					},
					{
						"name": "DATA_CARREGA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "INV_ODS",
					"table": "LIA_FACT_ADJUDICACIONS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_LIA_FACT_LICITACIONS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_LICITACIO",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CODI_PROJECTE_CLAU",
						"type": "nvarchar"
					},
					{
						"name": "DESC_OBJ_CONTRACTE",
						"type": "nvarchar"
					},
					{
						"name": "DESC_ESTAT",
						"type": "nvarchar"
					},
					{
						"name": "QTY_PRESSUPOST",
						"type": "decimal",
						"precision": 15,
						"scale": 2
					},
					{
						"name": "DATA_PRIMERA_PUBLICACIO",
						"type": "date"
					},
					{
						"name": "DATA_CARREGA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "INV_ODS",
					"table": "LIA_FACT_LICITACIONS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_CCAA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_MINISTERI",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY_EXC_PRESSUPOSTARI",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_COST_TOTAL",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_CARREGA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "INV_ODS",
					"table": "PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_PRES_FACT_AGR_CCAA_SP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_CCAA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESC_TIPUS_ORGANISME",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY_ANT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_ANT",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_EXC_PRESSUPOSTARI",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_EXC_PRESSUPOSTARI",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_1",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_2",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_3",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_3",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_CARREGA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "INV_ODS",
					"table": "PRES_FACT_AGR_CCAA_SP"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_PRES_FACT_AGR_RESUMEN_INVERSIONS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_CCAA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESC_INVERSIO",
						"type": "nvarchar"
					},
					{
						"name": "DATA_ANY_EXC_PRESUPOSTARI",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_COST_TOTAL",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_CARREGA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "INV_ODS",
					"table": "PRES_FACT_AGR_RESUMEN_INVERSIONS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_PRES_FACT_DET_EST_OOAA_RE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_PROVINCIA",
						"type": "nvarchar"
					},
					{
						"name": "ID_MINISTERI",
						"type": "nvarchar"
					},
					{
						"name": "ID_PROGRAMA",
						"type": "nvarchar"
					},
					{
						"name": "ID_ARTICLE",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ID_PROJECTE",
						"type": "nvarchar"
					},
					{
						"name": "ID_ENTITAT",
						"type": "nvarchar"
					},
					{
						"name": "DESC_PROJECTE",
						"type": "nvarchar"
					},
					{
						"name": "CODI_CENTRE",
						"type": "nvarchar"
					},
					{
						"name": "DESC_CENTRE",
						"type": "nvarchar"
					},
					{
						"name": "ANY_INICI",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ANY_FI",
						"type": "int",
						"precision": 10
					},
					{
						"name": "COD_TIPUS_PROJECTE",
						"type": "nvarchar"
					},
					{
						"name": "QTY_COST_TOTAL",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_ANT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_ANT",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_EXC_PRESSUPOSTARI",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_EXC_PRESSUPOSTARI",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_1",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_2",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_3",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_3",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "FLAG_SEGURETAT_SOCIAL",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DATA_CARREGA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "INV_ODS",
					"table": "PRES_FACT_DET_EST_OOAA_RE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_PRES_FACT_DET_SP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ODS"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_PROVINCIA",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DESC_TIPUS_ORGANISME",
						"type": "nvarchar"
					},
					{
						"name": "DESC_ENTITAT",
						"type": "nvarchar"
					},
					{
						"name": "COD_PROJECTE",
						"type": "nvarchar"
					},
					{
						"name": "DESC_DENOMINACIO",
						"type": "nvarchar"
					},
					{
						"name": "ANY_INICI",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ANY_FI",
						"type": "int",
						"precision": 10
					},
					{
						"name": "COD_TIPUS",
						"type": "nvarchar"
					},
					{
						"name": "QTY_COST_TOTAL",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_ANT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_ANT",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_EXC_PRESSUPOSTARI",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_EXC_PRESSUPOSTARI",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_1",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_1",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_2",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_2",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_ANY_3",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QTY_ANY_3",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "DATA_CARREGA",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "INV_ODS",
					"table": "PRES_FACT_DET_SP"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_DIM_ENTITATS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID Entitat",
						"type": "nvarchar"
					},
					{
						"name": "Entitat",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "DIM_ENTITATS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_DIM_UNITATS_AGE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "C_ID_UD_ORGANICA",
						"type": "nvarchar"
					},
					{
						"name": "C_DNM_UD_ORGANICA",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "DIM_UNITATS_AGE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_EXEC_FACT_AGR_CCAA_AGE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "IDCCAA",
						"type": "nvarchar"
					},
					{
						"name": "Crèdit Inicial",
						"type": "nvarchar"
					},
					{
						"name": "Obligacions Reconegudes",
						"type": "nvarchar"
					},
					{
						"name": "%",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "EXEC_FACT_AGR_CCAA_AGE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_EXEC_FACT_AGR_CCAA_OOAA_RE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "IDCCAA",
						"type": "nvarchar"
					},
					{
						"name": "Crèdit Inicial",
						"type": "nvarchar"
					},
					{
						"name": "Obligacions Reconegudes",
						"type": "nvarchar"
					},
					{
						"name": "%",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "EXEC_FACT_AGR_CCAA_OOAA_RE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_EXEC_FACT_AGR_CCAA_SP_ADMIN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "IDCCAA",
						"type": "nvarchar"
					},
					{
						"name": "Inversió Inicial",
						"type": "nvarchar"
					},
					{
						"name": "Inversió Real",
						"type": "nvarchar"
					},
					{
						"name": "%",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "EXEC_FACT_AGR_CCAA_SP_ADMIN"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_EXEC_FACT_AGR_CCAA_SP_EMPR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "IDCCAA",
						"type": "nvarchar"
					},
					{
						"name": "Inversió Inicial",
						"type": "nvarchar"
					},
					{
						"name": "Inversió Real",
						"type": "nvarchar"
					},
					{
						"name": "%",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "EXEC_FACT_AGR_CCAA_SP_EMPR"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_EXEC_FACT_DET_AGE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Codi Secció",
						"type": "nvarchar"
					},
					{
						"name": "Crèdit Inicial",
						"type": "nvarchar"
					},
					{
						"name": "Obligacions Reconegudes",
						"type": "nvarchar"
					},
					{
						"name": "%",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "EXEC_FACT_DET_AGE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_EXEC_FACT_DET_OOAA_RE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Codi Secció",
						"type": "nvarchar"
					},
					{
						"name": "Crèdit Inicial",
						"type": "nvarchar"
					},
					{
						"name": "Obligacions Reconegudes",
						"type": "nvarchar"
					},
					{
						"name": "%",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "EXEC_FACT_DET_OOAA_RE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_EXEC_FACT_DET_SP_ADMIN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Entitat",
						"type": "nvarchar"
					},
					{
						"name": "Inversio Inicial",
						"type": "nvarchar"
					},
					{
						"name": "Inversio Real",
						"type": "nvarchar"
					},
					{
						"name": "Percentatge",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "EXEC_FACT_DET_SP_ADMIN"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_EXEC_FACT_DET_SP_EMPR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Entitat",
						"type": "nvarchar"
					},
					{
						"name": "Inversió Inicial",
						"type": "nvarchar"
					},
					{
						"name": "Inversió Real",
						"type": "nvarchar"
					},
					{
						"name": "%",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "EXEC_FACT_DET_SP_EMPR"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_LIA_FACT_ADJUDICACIONS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Identificador",
						"type": "nvarchar"
					},
					{
						"name": "Link licitación",
						"type": "nvarchar"
					},
					{
						"name": "Fecha actualización",
						"type": "nvarchar"
					},
					{
						"name": "Número de expediente",
						"type": "nvarchar"
					},
					{
						"name": "Lote",
						"type": "nvarchar"
					},
					{
						"name": "Objeto licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Presupuesto base con impuestos licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Presupuesto base sin impuestos licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "CPV licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Lugar ejecución licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Resultado licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Fecha del acuerdo licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Número de ofertas recibidas por licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Precio de la oferta más baja por licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Precio de la oferta más alta por licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Se han excluído ofertas por ser anormalmente bajas por licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Número del contrato licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Fecha formalización del contrato licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Fecha entrada en vigor del contrato de licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Adjudicatario licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Tipo de identificador de adjudicatario por licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Identificador Adjudicatario de la licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "El adjudicatario es o no PYME de la licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Importe adjudicación sin impuestos licitación/lote",
						"type": "nvarchar"
					},
					{
						"name": "Importe adjudicación con impuestos licitación/lote",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "LIA_FACT_ADJUDICACIONS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_LIA_FACT_LICITACIONS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Identificador",
						"type": "nvarchar"
					},
					{
						"name": "Link licitación",
						"type": "nvarchar"
					},
					{
						"name": "Fecha actualización",
						"type": "nvarchar"
					},
					{
						"name": "Vigente/Anulada/Archivada",
						"type": "nvarchar"
					},
					{
						"name": "Primera publicación",
						"type": "nvarchar"
					},
					{
						"name": "Estado",
						"type": "nvarchar"
					},
					{
						"name": "Número de expediente",
						"type": "nvarchar"
					},
					{
						"name": "Objeto del Contrato",
						"type": "nvarchar"
					},
					{
						"name": "Valor estimado del contrato",
						"type": "nvarchar"
					},
					{
						"name": "Presupuesto base sin impuestos",
						"type": "nvarchar"
					},
					{
						"name": "Presupuesto base con impuestos",
						"type": "nvarchar"
					},
					{
						"name": "CPV",
						"type": "nvarchar"
					},
					{
						"name": "Tipo de contrato",
						"type": "nvarchar"
					},
					{
						"name": "Lugar de ejecución",
						"type": "nvarchar"
					},
					{
						"name": "Órgano de Contratación",
						"type": "nvarchar"
					},
					{
						"name": "ID OC en PLACSP",
						"type": "nvarchar"
					},
					{
						"name": "NIF OC",
						"type": "nvarchar"
					},
					{
						"name": "DIR3",
						"type": "nvarchar"
					},
					{
						"name": "Enlace al Perfil de Contratante del OC",
						"type": "nvarchar"
					},
					{
						"name": "Tipo de Administración",
						"type": "nvarchar"
					},
					{
						"name": "Código Postal",
						"type": "nvarchar"
					},
					{
						"name": "Tipo de procedimiento",
						"type": "nvarchar"
					},
					{
						"name": "Sistema de contratación",
						"type": "nvarchar"
					},
					{
						"name": "Tramitación",
						"type": "nvarchar"
					},
					{
						"name": "Forma de presentación de la oferta",
						"type": "nvarchar"
					},
					{
						"name": "Fecha de presentación de ofertas",
						"type": "nvarchar"
					},
					{
						"name": "Fecha de presentación de solicitudes de participacion",
						"type": "nvarchar"
					},
					{
						"name": "Directiva de aplicación",
						"type": "nvarchar"
					},
					{
						"name": "Financiación Europea y fuente",
						"type": "nvarchar"
					},
					{
						"name": "Descripción de la financiación europea",
						"type": "nvarchar"
					},
					{
						"name": "Subcontratación permitida",
						"type": "nvarchar"
					},
					{
						"name": "Subcontratación permitida porcentaje",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "LIA_FACT_LICITACIONS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "MINISTERI",
						"type": "nvarchar"
					},
					{
						"name": "COMUNIDAD AUTONOMA",
						"type": "nvarchar"
					},
					{
						"name": "COST TOTAL",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_PRES_FACT_AGR_CCAA_SP_ADMIN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "COMUNITAT AUTONOMA",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ANTERIOR",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+1",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+2",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+3",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "PRES_FACT_AGR_CCAA_SP_ADMIN"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_PRES_FACT_AGR_CCAA_SP_EMPR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "COMUNITATS AUTONOMES",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ANTERIOR",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+1",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+2",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+3",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "PRES_FACT_AGR_CCAA_SP_EMPR"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_PRES_FACT_AGR_RESUMEN_INVERSIONS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "COMUNITAT_AUTONOMA",
						"type": "nvarchar"
					},
					{
						"name": "COST_TOTAL",
						"type": "nvarchar"
					},
					{
						"name": "ANY_EXC_PRESUPOSTARI",
						"type": "nvarchar"
					},
					{
						"name": "INVERSIO",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "PRES_FACT_AGR_RESUMEN_INVERSIONS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_PRES_FACT_DET_EST_OOAA_RE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_MINISTERI",
						"type": "nvarchar"
					},
					{
						"name": "DESC_MINISTERI",
						"type": "nvarchar"
					},
					{
						"name": "COMUNITAT_AUTONOMA",
						"type": "nvarchar"
					},
					{
						"name": "CODI_CENTRE",
						"type": "nvarchar"
					},
					{
						"name": "ID_PROGRAMA",
						"type": "nvarchar"
					},
					{
						"name": "ID_ARTICLE",
						"type": "nvarchar"
					},
					{
						"name": "DESC_CENTRE",
						"type": "nvarchar"
					},
					{
						"name": "ID_PROJECTE",
						"type": "nvarchar"
					},
					{
						"name": "NOM_PROJECTE",
						"type": "nvarchar"
					},
					{
						"name": "ANY_INICI",
						"type": "nvarchar"
					},
					{
						"name": "ANY_FI",
						"type": "nvarchar"
					},
					{
						"name": "PROVINCIA",
						"type": "nvarchar"
					},
					{
						"name": "TIPUS",
						"type": "nvarchar"
					},
					{
						"name": "COST_TOTAL",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ANTERIOR",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+1",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+2",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+3",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "PRES_FACT_DET_EST_OOAA_RE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_PRES_FACT_DET_SEGURETAT_SOCIAL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Organisme",
						"type": "nvarchar"
					},
					{
						"name": "Programa",
						"type": "nvarchar"
					},
					{
						"name": "Article",
						"type": "nvarchar"
					},
					{
						"name": "Centre Tipus",
						"type": "nvarchar"
					},
					{
						"name": "Número",
						"type": "nvarchar"
					},
					{
						"name": "Denominació",
						"type": "nvarchar"
					},
					{
						"name": "Inici",
						"type": "nvarchar"
					},
					{
						"name": "Final",
						"type": "nvarchar"
					},
					{
						"name": "Import Total",
						"type": "nvarchar"
					},
					{
						"name": "ANY",
						"type": "nvarchar"
					},
					{
						"name": "ANY+1",
						"type": "nvarchar"
					},
					{
						"name": "ANY+2",
						"type": "nvarchar"
					},
					{
						"name": "ANY+3",
						"type": "nvarchar"
					},
					{
						"name": "Província",
						"type": "nvarchar"
					},
					{
						"name": "ID Entitat",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "PRES_FACT_DET_SEGURETAT_SOCIAL"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_PRES_FACT_DET_SP_ADMIN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "COMUNITAT_AUTONOMA",
						"type": "nvarchar"
					},
					{
						"name": "PROVINCIA",
						"type": "nvarchar"
					},
					{
						"name": "ENTITAT",
						"type": "nvarchar"
					},
					{
						"name": "CODI PROJECTE",
						"type": "nvarchar"
					},
					{
						"name": "DENOMINACIO",
						"type": "nvarchar"
					},
					{
						"name": "COST TOTAL",
						"type": "nvarchar"
					},
					{
						"name": "INICI",
						"type": "nvarchar"
					},
					{
						"name": "FI",
						"type": "nvarchar"
					},
					{
						"name": "TIPUS",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ANTERIOR",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+1",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+2",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+3",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "PRES_FACT_DET_SP_ADMIN"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_PRES_FACT_DET_SP_EMPR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "COMUNITAT_AUTONOMA",
						"type": "nvarchar"
					},
					{
						"name": "PROVINCIA",
						"type": "nvarchar"
					},
					{
						"name": "ENTITAT",
						"type": "nvarchar"
					},
					{
						"name": "CODI PROJECTE",
						"type": "nvarchar"
					},
					{
						"name": "DENOMINACIO",
						"type": "nvarchar"
					},
					{
						"name": "COST TOTAL",
						"type": "nvarchar"
					},
					{
						"name": "INICI",
						"type": "nvarchar"
					},
					{
						"name": "FI",
						"type": "nvarchar"
					},
					{
						"name": "TIPUS",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ANTERIOR",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+1",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+2",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+3",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "PRES_FACT_DET_SP_EMPR"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BD_INV_ESTAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/XLSX_DIM_UNITATS_AGE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ORIGEN"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Unidades AGE V+T",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Listado Unidades AGE.xlsx",
						"container": "inversionsestat"
					},
					"range": "B2:C99999",
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/XLSX_LIA_FACT_ADJUDICACIONS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Any": {
						"type": "string",
						"defaultValue": "2021"
					},
					"Mes": {
						"type": "string",
						"defaultValue": "01"
					}
				},
				"folder": {
					"name": "ORIGEN"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Resultados",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Any,\n\n'_',\n\ndataset().Mes,\n\n'_LIA_FACT.xlsx'\n)",
							"type": "Expression"
						},
						"container": "inversionsestat"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Identificador",
						"type": "String"
					},
					{
						"name": "Link licitación",
						"type": "String"
					},
					{
						"name": "Fecha actualización",
						"type": "String"
					},
					{
						"name": "Número de expediente",
						"type": "String"
					},
					{
						"name": "Lote",
						"type": "String"
					},
					{
						"name": "Objeto licitación/lote",
						"type": "String"
					},
					{
						"name": "Presupuesto base con impuestos licitación/lote",
						"type": "String"
					},
					{
						"name": "Presupuesto base sin impuestos licitación/lote",
						"type": "String"
					},
					{
						"name": "CPV licitación/lote",
						"type": "String"
					},
					{
						"name": "Lugar ejecución licitación/lote",
						"type": "String"
					},
					{
						"name": "Resultado licitación/lote",
						"type": "String"
					},
					{
						"name": "Fecha del acuerdo licitación/lote",
						"type": "String"
					},
					{
						"name": "Número de ofertas recibidas por licitación/lote",
						"type": "String"
					},
					{
						"name": "Precio de la oferta más baja por licitación/lote",
						"type": "String"
					},
					{
						"name": "Precio de la oferta más alta por licitación/lote",
						"type": "String"
					},
					{
						"name": "Se han excluído ofertas por ser anormalmente bajas por licitación/lote",
						"type": "String"
					},
					{
						"name": "Número del contrato licitación/lote",
						"type": "String"
					},
					{
						"name": "Fecha formalización del contrato licitación/lote",
						"type": "String"
					},
					{
						"name": "Fecha entrada en vigor del contrato de licitación/lote",
						"type": "String"
					},
					{
						"name": "Adjudicatario licitación/lote",
						"type": "String"
					},
					{
						"name": "Tipo de identificador de adjudicatario por licitación/lote",
						"type": "String"
					},
					{
						"name": "Identificador Adjudicatario de la licitación/lote",
						"type": "String"
					},
					{
						"name": "El adjudicatario es o no PYME de la licitación/lote",
						"type": "String"
					},
					{
						"name": "Importe adjudicación sin impuestos licitación/lote",
						"type": "String"
					},
					{
						"name": "Importe adjudicación con impuestos licitación/lote",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/XLSX_LIA_FACT_LICITACIONS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Any": {
						"type": "string",
						"defaultValue": "2021"
					},
					"Mes": {
						"type": "string",
						"defaultValue": "01"
					}
				},
				"folder": {
					"name": "ORIGEN"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Licitaciones",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Any,\n\n'_',\n\ndataset().Mes,\n\n'_LIA_FACT.xlsx'\n)",
							"type": "Expression"
						},
						"container": "inversionsestat"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Identificador",
						"type": "String"
					},
					{
						"name": "Link licitación",
						"type": "String"
					},
					{
						"name": "Fecha actualización",
						"type": "String"
					},
					{
						"name": "Vigente/Anulada/Archivada",
						"type": "String"
					},
					{
						"name": "Primera publicación",
						"type": "String"
					},
					{
						"name": "Estado",
						"type": "String"
					},
					{
						"name": "Número de expediente",
						"type": "String"
					},
					{
						"name": "Objeto del Contrato",
						"type": "String"
					},
					{
						"name": "Valor estimado del contrato",
						"type": "String"
					},
					{
						"name": "Presupuesto base sin impuestos",
						"type": "String"
					},
					{
						"name": "Presupuesto base con impuestos",
						"type": "String"
					},
					{
						"name": "CPV",
						"type": "String"
					},
					{
						"name": "Tipo de contrato",
						"type": "String"
					},
					{
						"name": "Lugar de ejecución",
						"type": "String"
					},
					{
						"name": "Órgano de Contratación",
						"type": "String"
					},
					{
						"name": "ID OC en PLACSP",
						"type": "String"
					},
					{
						"name": "NIF OC",
						"type": "String"
					},
					{
						"name": "DIR3",
						"type": "String"
					},
					{
						"name": "Enlace al Perfil de Contratante del OC",
						"type": "String"
					},
					{
						"name": "Tipo de Administración",
						"type": "String"
					},
					{
						"name": "Código Postal",
						"type": "String"
					},
					{
						"name": "Tipo de procedimiento",
						"type": "String"
					},
					{
						"name": "Sistema de contratación",
						"type": "String"
					},
					{
						"name": "Tramitación",
						"type": "String"
					},
					{
						"name": "Forma de presentación de la oferta",
						"type": "String"
					},
					{
						"name": "Fecha de presentación de ofertas",
						"type": "String"
					},
					{
						"name": "Fecha de presentación de solicitudes de participacion",
						"type": "String"
					},
					{
						"name": "Directiva de aplicación",
						"type": "String"
					},
					{
						"name": "Financiación Europea y fuente",
						"type": "String"
					},
					{
						"name": "Descripción de la financiación europea",
						"type": "String"
					},
					{
						"name": "Subcontratación permitida",
						"type": "String"
					},
					{
						"name": "Subcontratación permitida porcentaje",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BD_INV_ESTAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('BD_INV_ESTAT_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('BlobStorage_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IntegrationRuntimeAzure')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "West Europe",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DIM_MINISTERIS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_PRES_FACT_DET_EST_OOAA_RE",
								"type": "DatasetReference"
							},
							"name": "STGPresEstOoaaRe"
						},
						{
							"dataset": {
								"referenceName": "DM_DIM_MINISTERIS",
								"type": "DatasetReference"
							},
							"name": "SourceDimMinisteris"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_DIM_MINISTERIS",
								"type": "DatasetReference"
							},
							"name": "DimMinisteris"
						}
					],
					"transformations": [
						{
							"name": "Distinct"
						},
						{
							"name": "Select"
						},
						{
							"name": "LeftJoin"
						},
						{
							"name": "FitroRepetidos"
						},
						{
							"name": "DataInici"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID_MINISTERI as string,",
						"          DESC_MINISTERI as string,",
						"          COMUNITAT_AUTONOMA as string,",
						"          CODI_CENTRE as string,",
						"          ID_PROGRAMA as string,",
						"          ID_ARTICLE as string,",
						"          DESC_CENTRE as string,",
						"          ID_PROJECTE as string,",
						"          NOM_PROJECTE as string,",
						"          ANY_INICI as string,",
						"          ANY_FI as string,",
						"          PROVINCIA as string,",
						"          TIPUS as string,",
						"          COST_TOTAL as string,",
						"          ANY_ANTERIOR as string,",
						"          ANY_ACTUAL as string,",
						"          {ANY_ACTUAL+1} as string,",
						"          {ANY_ACTUAL+2} as string,",
						"          {ANY_ACTUAL+3} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGPresEstOoaaRe",
						"source(output(",
						"          ID_MINISTERI as string,",
						"          DESC_MINISTERI as string,",
						"          DATA_INICI as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> SourceDimMinisteris",
						"STGPresEstOoaaRe aggregate(groupBy(ID_MINISTERI,",
						"          DESC_MINISTERI),",
						"     Count = count(1)) ~> Distinct",
						"DataInici select(mapColumn(",
						"          ID_MINISTERI = Distinct@ID_MINISTERI,",
						"          DESC_MINISTERI = Distinct@DESC_MINISTERI,",
						"          DATA_INICI",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Select",
						"Distinct, SourceDimMinisteris join(Distinct@DESC_MINISTERI == SourceDimMinisteris@DESC_MINISTERI,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> LeftJoin",
						"LeftJoin filter(isNull(SourceDimMinisteris@ID_MINISTERI)) ~> FitroRepetidos",
						"FitroRepetidos derive(DATA_INICI = year(currentDate())) ~> DataInici",
						"Select sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_MINISTERI as string,",
						"          DESC_MINISTERI as string,",
						"          DATA_INICI as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DimMinisteris"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_DET_EST_OOAA_RE')]",
				"[concat(variables('factoryId'), '/datasets/DM_DIM_MINISTERIS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DIM_PROJECTE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_PRES_FACT_DET_EST_OOAA_RE",
								"type": "DatasetReference"
							},
							"name": "STGPresEstOoaaRe"
						},
						{
							"dataset": {
								"referenceName": "DM_DIM_PROJECTES",
								"type": "DatasetReference"
							},
							"name": "SourceDimProjectes"
						},
						{
							"dataset": {
								"referenceName": "STG_PRES_FACT_DET_SEGURETAT_SOCIAL",
								"type": "DatasetReference"
							},
							"name": "STGSeguretatSocial"
						},
						{
							"dataset": {
								"referenceName": "DIM_PROVINCIES",
								"type": "DatasetReference"
							},
							"name": "Provincies"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_DIM_PROJECTES",
								"type": "DatasetReference"
							},
							"name": "DimProjectes"
						}
					],
					"transformations": [
						{
							"name": "Distinct"
						},
						{
							"name": "LeftJoin"
						},
						{
							"name": "FitroRepetidos"
						},
						{
							"name": "DistinctSS"
						},
						{
							"name": "ObtenerIDProjecte"
						},
						{
							"name": "JoinProvincies"
						},
						{
							"name": "SelectSS"
						},
						{
							"name": "Union"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID_MINISTERI as string,",
						"          DESC_MINISTERI as string,",
						"          COMUNITAT_AUTONOMA as string,",
						"          CODI_CENTRE as string,",
						"          ID_PROGRAMA as string,",
						"          ID_ARTICLE as string,",
						"          DESC_CENTRE as string,",
						"          ID_PROJECTE as string,",
						"          NOM_PROJECTE as string,",
						"          ANY_INICI as string,",
						"          ANY_FI as string,",
						"          PROVINCIA as string,",
						"          TIPUS as string,",
						"          COST_TOTAL as string,",
						"          ANY_ANTERIOR as string,",
						"          ANY_ACTUAL as string,",
						"          {ANY_ACTUAL+1} as string,",
						"          {ANY_ACTUAL+2} as string,",
						"          {ANY_ACTUAL+3} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGPresEstOoaaRe",
						"source(output(",
						"          ID_PROJECTE as string,",
						"          NOM_PROJECTE as string,",
						"          DESC_COMENTARI as string,",
						"          ID_MACROPROJECTE as integer,",
						"          CODI_PROJECTE_CLAU as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> SourceDimProjectes",
						"source(output(",
						"          Organisme as string,",
						"          Programa as string,",
						"          Article as string,",
						"          {Centre Tipus} as string,",
						"          {Número} as string,",
						"          {Denominació} as string,",
						"          Inici as string,",
						"          Final as string,",
						"          {Import Total} as string,",
						"          ANY as string,",
						"          {ANY+1} as string,",
						"          {ANY+2} as string,",
						"          {ANY+3} as string,",
						"          {Província} as string,",
						"          {ID Entitat} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGSeguretatSocial",
						"source(output(",
						"          ID_PROVINCIA as string,",
						"          ID_CCAA as integer,",
						"          NOM_PROVINCIA as string,",
						"          NOM_PROVINCIA_CAT as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Provincies",
						"STGPresEstOoaaRe aggregate(groupBy(ID_PROJECTE,",
						"          NOM_PROJECTE),",
						"     count = count(1)) ~> Distinct",
						"Union, SourceDimProjectes join(Union@ID_PROJECTE == SourceDimProjectes@ID_PROJECTE,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> LeftJoin",
						"LeftJoin filter(isNull(SourceDimProjectes@ID_PROJECTE)) ~> FitroRepetidos",
						"ObtenerIDProjecte aggregate(groupBy({Denominació},",
						"          ID_PROJECTE),",
						"     count = count(1)) ~> DistinctSS",
						"JoinProvincies derive(ID_PROJECTE = concat(ID_PROVINCIA,' ',Organisme, ' ', Programa, ' ', Article,' ' ,{Centre Tipus}, ' ', {Número})) ~> ObtenerIDProjecte",
						"STGSeguretatSocial, Provincies join(lower({Província}) == lower(NOM_PROVINCIA),",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> JoinProvincies",
						"DistinctSS select(mapColumn(",
						"          NOM_PROJECTE = {Denominació},",
						"          ID_PROJECTE,",
						"          count",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectSS",
						"Distinct, SelectSS union(byName: true)~> Union",
						"FitroRepetidos select(mapColumn(",
						"          ID_PROJECTE = Union@ID_PROJECTE,",
						"          NOM_PROJECTE = Union@NOM_PROJECTE",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_PROJECTE as string,",
						"          NOM_PROJECTE as string,",
						"          DESC_COMENTARI as string,",
						"          ID_MACROPROJECTE as integer,",
						"          CODI_PROJECTE_CLAU as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID_PROJECTE,",
						"          NOM_PROJECTE",
						"     )) ~> DimProjectes"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_DET_EST_OOAA_RE')]",
				"[concat(variables('factoryId'), '/datasets/DM_DIM_PROJECTES')]",
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_DET_SEGURETAT_SOCIAL')]",
				"[concat(variables('factoryId'), '/datasets/DIM_PROVINCIES')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_EXEC_FACT_AGR_CCAA')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS_EXEC_FACT_AGR_CCAA",
								"type": "DatasetReference"
							},
							"name": "ODSFactAGRCCAA"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_EXEC_FACT_AGR_CCAA",
								"type": "DatasetReference"
							},
							"name": "DMFactAGRCCAA"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID_CCAA as integer,",
						"          DESC_TIPUS_ORGANISME as string,",
						"          DATA_ANY as integer,",
						"          QTY_CREDIT_INICIAL as decimal(15,2),",
						"          QTY_OBLIGACIONS_RECONEGUDES as decimal(15,2),",
						"          QTY_PERCENTATGE as decimal(15,2),",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ODSFactAGRCCAA",
						"ODSFactAGRCCAA alterRow(upsertIf(true())) ~> AlterRow1",
						"AlterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_CCAA as integer,",
						"          DESC_TIPUS_ORGANISME as string,",
						"          DATA_ANY as integer,",
						"          QTY_CREDIT_INICIAL as decimal(15,2),",
						"          QTY_OBLIGACIONS_RECONEGUDES as decimal(15,2),",
						"          QTY_PERCENTATGE as decimal(15,2),",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['ID_CCAA','DATA_ANY','DESC_TIPUS_ORGANISME'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMFactAGRCCAA"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ODS_EXEC_FACT_AGR_CCAA')]",
				"[concat(variables('factoryId'), '/datasets/DM_EXEC_FACT_AGR_CCAA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_EXEC_FACT_DET_SECCIO_ENTITAT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS_EXEC_FACT_DET_SECCIO_ENTITAT",
								"type": "DatasetReference"
							},
							"name": "ODSFactDETSeccioEntitat"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_EXEC_FACT_DET_SECCIO_ENTITAT",
								"type": "DatasetReference"
							},
							"name": "DMFactDETSeccioEntitat"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CODI_SECCIO as string,",
						"          DESC_ENTITAT as string,",
						"          DESC_TIPUS_ORGANISME as string,",
						"          DATA_ANY as integer,",
						"          QTY_CREDIT_INICIAL as decimal(15,2),",
						"          QTY_OBLIGACIONS_RECONEGUDES as decimal(15,2),",
						"          QTY_PERCENTATGE as decimal(15,2),",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ODSFactDETSeccioEntitat",
						"ODSFactDETSeccioEntitat alterRow(upsertIf(true())) ~> AlterRow1",
						"AlterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CODI_SECCIO as string,",
						"          DESC_ENTITAT as string,",
						"          DESC_TIPUS_ORGANISME as string,",
						"          DATA_ANY as integer,",
						"          QTY_CREDIT_INICIAL as decimal(15,2),",
						"          QTY_OBLIGACIONS_RECONEGUDES as decimal(15,2),",
						"          QTY_PERCENTATGE as decimal(15,2),",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['CODI_SECCIO','DATA_ANY','DESC_TIPUS_ORGANISME'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMFactDETSeccioEntitat"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ODS_EXEC_FACT_DET_SECCIO_ENTITAT')]",
				"[concat(variables('factoryId'), '/datasets/DM_EXEC_FACT_DET_SECCIO_ENTITAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_LIA_FACT_ADJUDICACIONS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS_LIA_FACT_ADJUDICACIONS",
								"type": "DatasetReference"
							},
							"name": "ODSAdjudicacions"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_LIA_FACT_ADJUDICACIONS",
								"type": "DatasetReference"
							},
							"name": "DMAdjudicacions"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          ID_LICITACIO as integer,",
						"          QTY_IMPORT_ADJUDICACIO as decimal(15,2),",
						"          DATA_ACORD_LICITACIO as date,",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ODSAdjudicacions",
						"ODSAdjudicacions sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_LICITACIO as integer,",
						"          QTY_IMPORT_ADJUDICACIO as decimal(15,2),",
						"          DATA_ACORD_LICITACIO as date,",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMAdjudicacions"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ODS_LIA_FACT_ADJUDICACIONS')]",
				"[concat(variables('factoryId'), '/datasets/DM_LIA_FACT_ADJUDICACIONS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_LIA_FACT_LICITACIONS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS_LIA_FACT_LICITACIONS",
								"type": "DatasetReference"
							},
							"name": "ODSLicitacions"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_LIA_FACT_LICITACIONS",
								"type": "DatasetReference"
							},
							"name": "DMLicitacions"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID_LICITACIO as integer,",
						"          CODI_PROJECTE_CLAU as string,",
						"          DESC_OBJ_CONTRACTE as string,",
						"          DESC_ESTAT as string,",
						"          QTY_PRESSUPOST as decimal(15,2),",
						"          DATA_PRIMERA_PUBLICACIO as date,",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ODSLicitacions",
						"ODSLicitacions alterRow(upsertIf(true())) ~> AlterRow1",
						"AlterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_LICITACIO as integer,",
						"          CODI_PROJECTE_CLAU as string,",
						"          DESC_OBJ_CONTRACTE as string,",
						"          DESC_ESTAT as string,",
						"          QTY_PRESSUPOST as decimal(15,2),",
						"          DATA_PRIMERA_PUBLICACIO as date,",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['ID_LICITACIO'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID_LICITACIO,",
						"          DESC_OBJ_CONTRACTE,",
						"          DESC_ESTAT,",
						"          QTY_PRESSUPOST,",
						"          DATA_PRIMERA_PUBLICACIO,",
						"          DATA_CARREGA",
						"     )) ~> DMLicitacions"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ODS_LIA_FACT_LICITACIONS')]",
				"[concat(variables('factoryId'), '/datasets/DM_LIA_FACT_LICITACIONS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE",
								"type": "DatasetReference"
							},
							"name": "ODSFactAGRCCAA"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE",
								"type": "DatasetReference"
							},
							"name": "DMFactAGRCCAA"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID_CCAA as integer,",
						"          ID_MINISTERI as string,",
						"          DATA_ANY_EXC_PRESSUPOSTARI as integer,",
						"          QTY_COST_TOTAL as decimal(10,2),",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ODSFactAGRCCAA",
						"ODSFactAGRCCAA alterRow(upsertIf(true())) ~> AlterRow1",
						"AlterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_CCAA as integer,",
						"          ID_MINISTERI as string,",
						"          DATA_ANY_EXC_PRESSUPOSTARI as integer,",
						"          QTY_COST_TOTAL as decimal(10,2),",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['ID_CCAA','ID_MINISTERI','DATA_ANY_EXC_PRESSUPOSTARI'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMFactAGRCCAA"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ODS_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE')]",
				"[concat(variables('factoryId'), '/datasets/DM_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_PRES_FACT_AGR_CCAA_SP')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS_PRES_FACT_AGR_CCAA_SP",
								"type": "DatasetReference"
							},
							"name": "ODSFactAGRCCAA"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_PRES_FACT_AGR_CCAA_SP",
								"type": "DatasetReference"
							},
							"name": "DMFactAGRCCAA"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID_CCAA as integer,",
						"          DESC_TIPUS_ORGANISME as string,",
						"          DATA_ANY_ANT as integer,",
						"          QTY_ANY_ANT as decimal(10,2),",
						"          DATA_ANY_EXC_PRESSUPOSTARI as integer,",
						"          QTY_ANY_EXC_PRESSUPOSTARI as decimal(10,2),",
						"          DATA_ANY_1 as integer,",
						"          QTY_ANY_1 as decimal(10,2),",
						"          DATA_ANY_2 as integer,",
						"          QTY_ANY_2 as decimal(10,2),",
						"          DATA_ANY_3 as integer,",
						"          QTY_ANY_3 as decimal(10,2),",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ODSFactAGRCCAA",
						"ODSFactAGRCCAA alterRow(upsertIf(true())) ~> AlterRow1",
						"AlterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_CCAA as integer,",
						"          DESC_TIPUS_ORGANISME as string,",
						"          DATA_ANY_ANT as integer,",
						"          QTY_ANY_ANT as decimal(10,2),",
						"          DATA_ANY_EXC_PRESSUPOSTARI as integer,",
						"          QTY_ANY_EXC_PRESSUPOSTARI as decimal(10,2),",
						"          DATA_ANY_1 as integer,",
						"          QTY_ANY_1 as decimal(10,2),",
						"          DATA_ANY_2 as integer,",
						"          QTY_ANY_2 as decimal(10,2),",
						"          DATA_ANY_3 as integer,",
						"          QTY_ANY_3 as decimal(10,2),",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['ID_CCAA','DESC_TIPUS_ORGANISME','DATA_ANY_EXC_PRESSUPOSTARI'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMFactAGRCCAA"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ODS_PRES_FACT_AGR_CCAA_SP')]",
				"[concat(variables('factoryId'), '/datasets/DM_PRES_FACT_AGR_CCAA_SP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_PRES_FACT_AGR_RESUMEN_INVERSIONS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS_PRES_FACT_AGR_RESUMEN_INVERSIONS",
								"type": "DatasetReference"
							},
							"name": "ODSFactAGRResumInvers"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_PRES_FACT_AGR_RESUMEN_INVERSIONS",
								"type": "DatasetReference"
							},
							"name": "DMFactAGRResumInvers"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID_CCAA as integer,",
						"          DESC_INVERSIO as string,",
						"          DATA_ANY_EXC_PRESUPOSTARI as integer,",
						"          QTY_COST_TOTAL as decimal(10,2),",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ODSFactAGRResumInvers",
						"ODSFactAGRResumInvers alterRow(upsertIf(true())) ~> AlterRow1",
						"AlterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_CCAA as integer,",
						"          DESC_INVERSIO as string,",
						"          DATA_ANY_EXC_PRESUPOSTARI as integer,",
						"          QTY_COST_TOTAL as decimal(10,2),",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['ID_CCAA','DATA_ANY_EXC_PRESUPOSTARI','DESC_INVERSIO'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMFactAGRResumInvers"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ODS_PRES_FACT_AGR_RESUMEN_INVERSIONS')]",
				"[concat(variables('factoryId'), '/datasets/DM_PRES_FACT_AGR_RESUMEN_INVERSIONS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_PRES_FACT_DET_EST_OOAA_RE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS_PRES_FACT_DET_EST_OOAA_RE",
								"type": "DatasetReference"
							},
							"name": "ODSFactDETEstOOAARE"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_PRES_FACT_DET_EST_OOAA_RE",
								"type": "DatasetReference"
							},
							"name": "DMFactDETEstOOAARE"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID_PROVINCIA as string,",
						"          ID_MINISTERI as string,",
						"          ID_PROGRAMA as string,",
						"          ID_ARTICLE as integer,",
						"          ID_PROJECTE as string,",
						"          ID_ENTITAT as string,",
						"          DESC_PROJECTE as string,",
						"          CODI_CENTRE as string,",
						"          DESC_CENTRE as string,",
						"          ANY_INICI as integer,",
						"          ANY_FI as integer,",
						"          COD_TIPUS_PROJECTE as string,",
						"          QTY_COST_TOTAL as decimal(10,2),",
						"          DATA_ANY_ANT as integer,",
						"          QTY_ANY_ANT as decimal(10,2),",
						"          DATA_ANY_EXC_PRESSUPOSTARI as integer,",
						"          QTY_ANY_EXC_PRESSUPOSTARI as decimal(10,2),",
						"          DATA_ANY_1 as integer,",
						"          QTY_ANY_1 as decimal(10,2),",
						"          DATA_ANY_2 as integer,",
						"          QTY_ANY_2 as decimal(10,2),",
						"          DATA_ANY_3 as integer,",
						"          QTY_ANY_3 as decimal(10,2),",
						"          FLAG_SEGURETAT_SOCIAL as integer,",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ODSFactDETEstOOAARE",
						"ODSFactDETEstOOAARE alterRow(upsertIf(true())) ~> AlterRow1",
						"AlterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_PROVINCIA as string,",
						"          ID_MINISTERI as string,",
						"          ID_PROGRAMA as string,",
						"          ID_ARTICLE as integer,",
						"          ID_PROJECTE as string,",
						"          ID_ENTITAT as string,",
						"          DESC_PROJECTE as string,",
						"          CODI_CENTRE as string,",
						"          DESC_CENTRE as string,",
						"          ANY_INICI as integer,",
						"          ANY_FI as integer,",
						"          COD_TIPUS_PROJECTE as string,",
						"          QTY_COST_TOTAL as decimal(10,2),",
						"          DATA_ANY_ANT as integer,",
						"          QTY_ANY_ANT as decimal(10,2),",
						"          DATA_ANY_EXC_PRESSUPOSTARI as integer,",
						"          QTY_ANY_EXC_PRESSUPOSTARI as decimal(10,2),",
						"          DATA_ANY_1 as integer,",
						"          QTY_ANY_1 as decimal(10,2),",
						"          DATA_ANY_2 as integer,",
						"          QTY_ANY_2 as decimal(10,2),",
						"          DATA_ANY_3 as integer,",
						"          QTY_ANY_3 as decimal(10,2),",
						"          FLAG_SEGURETAT_SOCIAL as integer,",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['ID_PROVINCIA','ID_PROJECTE','DATA_ANY_EXC_PRESSUPOSTARI'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMFactDETEstOOAARE"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ODS_PRES_FACT_DET_EST_OOAA_RE')]",
				"[concat(variables('factoryId'), '/datasets/DM_PRES_FACT_DET_EST_OOAA_RE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_PRES_FACT_DET_SP')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS_PRES_FACT_DET_SP",
								"type": "DatasetReference"
							},
							"name": "ODSFactDETSP"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_PRES_FACT_DET_SP",
								"type": "DatasetReference"
							},
							"name": "DMFactDETSP"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID_PROVINCIA as integer,",
						"          DESC_TIPUS_ORGANISME as string,",
						"          DESC_ENTITAT as string,",
						"          COD_PROJECTE as string,",
						"          DESC_DENOMINACIO as string,",
						"          ANY_INICI as integer,",
						"          ANY_FI as integer,",
						"          COD_TIPUS as string,",
						"          QTY_COST_TOTAL as decimal(10,2),",
						"          DATA_ANY_ANT as integer,",
						"          QTY_ANY_ANT as decimal(10,2),",
						"          DATA_ANY_EXC_PRESSUPOSTARI as integer,",
						"          QTY_ANY_EXC_PRESSUPOSTARI as decimal(10,2),",
						"          DATA_ANY_1 as integer,",
						"          QTY_ANY_1 as decimal(10,2),",
						"          DATA_ANY_2 as integer,",
						"          QTY_ANY_2 as decimal(10,2),",
						"          DATA_ANY_3 as integer,",
						"          QTY_ANY_3 as decimal(10,2),",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ODSFactDETSP",
						"ODSFactDETSP alterRow(upsertIf(true())) ~> AlterRow1",
						"AlterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_PROVINCIA as integer,",
						"          DESC_TIPUS_ORGANISME as string,",
						"          DESC_ENTITAT as string,",
						"          COD_PROJECTE as string,",
						"          DESC_DENOMINACIO as string,",
						"          ANY_INICI as integer,",
						"          ANY_FI as integer,",
						"          COD_TIPUS as string,",
						"          QTY_COST_TOTAL as decimal(10,2),",
						"          DATA_ANY_ANT as integer,",
						"          QTY_ANY_ANT as decimal(10,2),",
						"          DATA_ANY_EXC_PRESSUPOSTARI as integer,",
						"          QTY_ANY_EXC_PRESSUPOSTARI as decimal(10,2),",
						"          DATA_ANY_1 as integer,",
						"          QTY_ANY_1 as decimal(10,2),",
						"          DATA_ANY_2 as integer,",
						"          QTY_ANY_2 as decimal(10,2),",
						"          DATA_ANY_3 as integer,",
						"          QTY_ANY_3 as decimal(10,2),",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['ID_PROVINCIA','DATA_ANY_EXC_PRESSUPOSTARI','COD_PROJECTE'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMFactDETSP"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ODS_PRES_FACT_DET_SP')]",
				"[concat(variables('factoryId'), '/datasets/DM_PRES_FACT_DET_SP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_EXEC_FACT_DET_SECCIO_ENTITAT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_EXEC_FACT_DET_SP_ADMIN",
								"type": "DatasetReference"
							},
							"name": "STGSPAdmin"
						},
						{
							"dataset": {
								"referenceName": "STG_EXEC_FACT_DET_SP_EMPR",
								"type": "DatasetReference"
							},
							"name": "STGSPEmpr"
						},
						{
							"dataset": {
								"referenceName": "STG_EXEC_FACT_DET_AGE",
								"type": "DatasetReference"
							},
							"name": "STGAge"
						},
						{
							"dataset": {
								"referenceName": "STG_EXEC_FACT_DET_OOAA_RE",
								"type": "DatasetReference"
							},
							"name": "STGOoaaRe"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS_EXEC_FACT_DET_SECCIO_ENTITAT",
								"type": "DatasetReference"
							},
							"name": "ODSDetSeccEntitat"
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "select2"
						},
						{
							"name": "TipusAdmin"
						},
						{
							"name": "TipusEmpres"
						},
						{
							"name": "union1"
						},
						{
							"name": "CambiaTipos"
						},
						{
							"name": "select4"
						},
						{
							"name": "select5"
						},
						{
							"name": "TipusAge"
						},
						{
							"name": "TipusRestaEntitats"
						},
						{
							"name": "OrdenaCampos"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Any as string ('2021')",
						"}",
						"source(output(",
						"          Entitat as string,",
						"          {Inversio Inicial} as string,",
						"          {Inversio Real} as string,",
						"          Percentatge as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGSPAdmin",
						"source(output(",
						"          Entitat as string,",
						"          {Inversió Inicial} as string,",
						"          {Inversió Real} as string,",
						"          {%} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGSPEmpr",
						"source(output(",
						"          {Codi Secció} as string,",
						"          {Crèdit Inicial} as string,",
						"          {Obligacions Reconegudes} as string,",
						"          {%} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGAge",
						"source(output(",
						"          {Codi Secció} as string,",
						"          {Crèdit Inicial} as string,",
						"          {Obligacions Reconegudes} as string,",
						"          {%} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGOoaaRe",
						"STGSPAdmin select(mapColumn(",
						"          DESC_ENTITAT = Entitat,",
						"          QTY_CREDIT_INICIAL = {Inversio Inicial},",
						"          QTY_OBLIGACIONS_RECONEGUDES = {Inversio Real},",
						"          QTY_PERCENTATGE = Percentatge",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"STGSPEmpr select(mapColumn(",
						"          DESC_ENTITAT = Entitat,",
						"          QTY_CREDIT_INICIAL = {Inversió Inicial},",
						"          QTY_OBLIGACIONS_RECONEGUDES = {Inversió Real},",
						"          QTY_PERCENTATGE = {%}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"select1 derive(DESC_TIPUS_ORGANISME = 'Admin',",
						"          CODI_SECCIO = DESC_ENTITAT) ~> TipusAdmin",
						"select2 derive(DESC_TIPUS_ORGANISME = 'Empres',",
						"          CODI_SECCIO = DESC_ENTITAT) ~> TipusEmpres",
						"TipusAdmin, TipusEmpres, TipusAge, TipusRestaEntitats union(byName: true)~> union1",
						"union1 derive(DATA_ANY = toInteger($Any),",
						"          QTY_CREDIT_INICIAL = toDecimal(QTY_CREDIT_INICIAL,15,2),",
						"          QTY_OBLIGACIONS_RECONEGUDES = toDecimal(QTY_OBLIGACIONS_RECONEGUDES,15,2),",
						"          QTY_PERCENTATGE = toDecimal(QTY_PERCENTATGE,15,2)) ~> CambiaTipos",
						"STGAge select(mapColumn(",
						"          CODI_SECCIO = {Codi Secció},",
						"          QTY_CREDIT_INICIAL = {Crèdit Inicial},",
						"          QTY_OBLIGACIONS_RECONEGUDES = {Obligacions Reconegudes},",
						"          QTY_PERCENTATGE = {%}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select4",
						"STGOoaaRe select(mapColumn(",
						"          CODI_SECCIO = {Codi Secció},",
						"          QTY_CREDIT_INICIAL = {Crèdit Inicial},",
						"          QTY_OBLIGACIONS_RECONEGUDES = {Obligacions Reconegudes},",
						"          QTY_PERCENTATGE = {%}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select5",
						"select4 derive(DESC_TIPUS_ORGANISME = 'Age') ~> TipusAge",
						"select5 derive(DESC_TIPUS_ORGANISME = 'Resta Entitats') ~> TipusRestaEntitats",
						"CambiaTipos select(mapColumn(",
						"          CODI_SECCIO,",
						"          DESC_ENTITAT,",
						"          DESC_TIPUS_ORGANISME,",
						"          DATA_ANY,",
						"          QTY_CREDIT_INICIAL,",
						"          QTY_OBLIGACIONS_RECONEGUDES,",
						"          QTY_PERCENTATGE",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> OrdenaCampos",
						"OrdenaCampos sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CODI_SECCIO as string,",
						"          DESC_ENTITAT as string,",
						"          DESC_TIPUS_ORGANISME as string,",
						"          DATA_ANY as integer,",
						"          QTY_CREDIT_INICIAL as decimal(15,2),",
						"          QTY_OBLIGACIONS_RECONEGUDES as decimal(15,2),",
						"          QTY_PERCENTATGE as decimal(15,2),",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> ODSDetSeccEntitat"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_EXEC_FACT_DET_SP_ADMIN')]",
				"[concat(variables('factoryId'), '/datasets/STG_EXEC_FACT_DET_SP_EMPR')]",
				"[concat(variables('factoryId'), '/datasets/STG_EXEC_FACT_DET_AGE')]",
				"[concat(variables('factoryId'), '/datasets/STG_EXEC_FACT_DET_OOAA_RE')]",
				"[concat(variables('factoryId'), '/datasets/ODS_EXEC_FACT_DET_SECCIO_ENTITAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_HIST_EXEC_FACT_AGR_CCAA_AGE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_EXEC_FACT_AGR_CCAA_AGE",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HIST_EXEC_FACT_AGR_CCAA_AGE",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Any as string",
						"}",
						"source(output(",
						"          IDCCAA as string,",
						"          {Crèdit Inicial} as string,",
						"          {Obligacions Reconegudes} as string,",
						"          {%} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 derive(DATA_CARREGA = currentDate(),",
						"          DATA_ANY_FITXER = toInteger($Any)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          IDCCAA as string,",
						"          {Crèdit Inicial} as string,",
						"          {Obligacions Reconegudes} as string,",
						"          {%} as string,",
						"          DATA_ANY_FITXER as integer,",
						"          DATA_CARREGA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_EXEC_FACT_AGR_CCAA_AGE')]",
				"[concat(variables('factoryId'), '/datasets/HIST_EXEC_FACT_AGR_CCAA_AGE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_HIST_EXEC_FACT_AGR_CCAA_OOAA_RE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_EXEC_FACT_AGR_CCAA_OOAA_RE",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HIST_EXEC_FACT_AGR_CCAA_OOAA_RE",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Any as string",
						"}",
						"source(output(",
						"          IDCCAA as string,",
						"          {Crèdit Inicial} as string,",
						"          {Obligacions Reconegudes} as string,",
						"          {%} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 derive(DATA_CARREGA = currentDate(),",
						"          DATA_ANY_FITXER = toInteger($Any)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          IDCCAA as string,",
						"          {Crèdit Inicial} as string,",
						"          {Obligacions Reconegudes} as string,",
						"          {%} as string,",
						"          DATA_ANY_FITXER as integer,",
						"          DATA_CARREGA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_EXEC_FACT_AGR_CCAA_OOAA_RE')]",
				"[concat(variables('factoryId'), '/datasets/HIST_EXEC_FACT_AGR_CCAA_OOAA_RE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_HIST_EXEC_FACT_AGR_CCAA_SP_ADMIN')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_EXEC_FACT_AGR_CCAA_SP_ADMIN",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HIST_EXEC_FACT_AGR_CCAA_SP_ADMIN",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Any as string",
						"}",
						"source(output(",
						"          IDCCAA as string,",
						"          {Inversió Inicial} as string,",
						"          {Inversió Real} as string,",
						"          {%} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 derive(DATA_CARREGA = currentDate(),",
						"          DATA_ANY_FITXER = toInteger($Any)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          IDCCAA as string,",
						"          {Inversió Inicial} as string,",
						"          {Inversió Real} as string,",
						"          {%} as string,",
						"          DATA_ANY_FITXER as integer,",
						"          DATA_CARREGA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_EXEC_FACT_AGR_CCAA_SP_ADMIN')]",
				"[concat(variables('factoryId'), '/datasets/HIST_EXEC_FACT_AGR_CCAA_SP_ADMIN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_HIST_EXEC_FACT_AGR_CCAA_SP_EMPR')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_EXEC_FACT_AGR_CCAA_SP_EMPR",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HIST_EXEC_FACT_AGR_CCAA_SP_EMPR",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Any as string",
						"}",
						"source(output(",
						"          IDCCAA as string,",
						"          {Inversió Inicial} as string,",
						"          {Inversió Real} as string,",
						"          {%} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 derive(DATA_CARREGA = currentDate(),",
						"          DATA_ANY_FITXER = toInteger($Any)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          IDCCAA as string,",
						"          {Inversió Inicial} as string,",
						"          {Inversió Real} as string,",
						"          {%} as string,",
						"          DATA_ANY_FITXER as integer,",
						"          DATA_CARREGA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_EXEC_FACT_AGR_CCAA_SP_EMPR')]",
				"[concat(variables('factoryId'), '/datasets/HIST_EXEC_FACT_AGR_CCAA_SP_EMPR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_HIST_EXEC_FACT_DET_AGE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_EXEC_FACT_DET_AGE",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HIST_EXEC_FACT_DET_AGE",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Any as string",
						"}",
						"source(output(",
						"          {Codi Secció} as string,",
						"          {Crèdit Inicial} as string,",
						"          {Obligacions Reconegudes} as string,",
						"          {%} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 derive(DATA_CARREGA = currentDate(),",
						"          DATA_ANY_FITXER = toInteger($Any)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Codi Secció} as string,",
						"          {Crèdit Inicial} as string,",
						"          {Obligacions Reconegudes} as string,",
						"          {%} as string,",
						"          DATA_ANY_FITXER as integer,",
						"          DATA_CARREGA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_EXEC_FACT_DET_AGE')]",
				"[concat(variables('factoryId'), '/datasets/HIST_EXEC_FACT_DET_AGE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_HIST_EXEC_FACT_DET_OOAA_RE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_EXEC_FACT_DET_OOAA_RE",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HIST_EXEC_FACT_DET_OOAA_RE",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Any as string",
						"}",
						"source(output(",
						"          {Codi Secció} as string,",
						"          {Crèdit Inicial} as string,",
						"          {Obligacions Reconegudes} as string,",
						"          {%} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 derive(DATA_CARREGA = currentDate(),",
						"          DATA_ANY_FITXER = toInteger($Any)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {Codi Secció} as string,",
						"          {Crèdit Inicial} as string,",
						"          {Obligacions Reconegudes} as string,",
						"          {%} as string,",
						"          DATA_ANY_FITXER as integer,",
						"          DATA_CARREGA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_EXEC_FACT_DET_OOAA_RE')]",
				"[concat(variables('factoryId'), '/datasets/HIST_EXEC_FACT_DET_OOAA_RE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_HIST_EXEC_FACT_DET_SP_ADMIN')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_EXEC_FACT_DET_SP_ADMIN",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HIST_EXEC_FACT_DET_SP_ADMIN",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Any as string",
						"}",
						"source(output(",
						"          Entitat as string,",
						"          {Inversio Inicial} as string,",
						"          {Inversio Real} as string,",
						"          Percentatge as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 derive(DATA_CARREGA = currentDate(),",
						"          DATA_ANY_FITXER = toInteger($Any)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Entitat as string,",
						"          {Inversio Inicial} as string,",
						"          {Inversio Real} as string,",
						"          Percentatge as string,",
						"          DATA_ANY_FITXER as integer,",
						"          DATA_CARREGA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_EXEC_FACT_DET_SP_ADMIN')]",
				"[concat(variables('factoryId'), '/datasets/HIST_EXEC_FACT_DET_SP_ADMIN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_HIST_EXEC_FACT_DET_SP_EMPR')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_EXEC_FACT_DET_SP_EMPR",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HIST_EXEC_FACT_DET_SP_EMPR",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Any as string",
						"}",
						"source(output(",
						"          Entitat as string,",
						"          {Inversió Inicial} as string,",
						"          {Inversió Real} as string,",
						"          {%} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 derive(DATA_CARREGA = currentDate(),",
						"          DATA_ANY_FITXER = toInteger($Any)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Entitat as string,",
						"          {Inversió Inicial} as string,",
						"          {Inversió Real} as string,",
						"          {%} as string,",
						"          DATA_ANY_FITXER as integer,",
						"          DATA_CARREGA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_EXEC_FACT_DET_SP_EMPR')]",
				"[concat(variables('factoryId'), '/datasets/HIST_EXEC_FACT_DET_SP_EMPR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_HIST_LIA_FACT_ADJUDICACIONS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_LIA_FACT_ADJUDICACIONS",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HIST_LIA_FACT_ADJUDICACIONS",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Any as string ('2021'),",
						"     Mes as string ('01')",
						"}",
						"source(output(",
						"          Identificador as string,",
						"          {Link licitación} as string,",
						"          {Fecha actualización} as string,",
						"          {Número de expediente} as string,",
						"          Lote as string,",
						"          {Objeto licitación/lote} as string,",
						"          {Presupuesto base con impuestos licitación/lote} as string,",
						"          {Presupuesto base sin impuestos licitación/lote} as string,",
						"          {CPV licitación/lote} as string,",
						"          {Lugar ejecución licitación/lote} as string,",
						"          {Resultado licitación/lote} as string,",
						"          {Fecha del acuerdo licitación/lote} as string,",
						"          {Número de ofertas recibidas por licitación/lote} as string,",
						"          {Precio de la oferta más baja por licitación/lote} as string,",
						"          {Precio de la oferta más alta por licitación/lote} as string,",
						"          {Se han excluído ofertas por ser anormalmente bajas por licitación/lote} as string,",
						"          {Número del contrato licitación/lote} as string,",
						"          {Fecha formalización del contrato licitación/lote} as string,",
						"          {Fecha entrada en vigor del contrato de licitación/lote} as string,",
						"          {Adjudicatario licitación/lote} as string,",
						"          {Tipo de identificador de adjudicatario por licitación/lote} as string,",
						"          {Identificador Adjudicatario de la licitación/lote} as string,",
						"          {El adjudicatario es o no PYME de la licitación/lote} as string,",
						"          {Importe adjudicación sin impuestos licitación/lote} as string,",
						"          {Importe adjudicación con impuestos licitación/lote} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 derive(DATA_CARREGA = currentDate(),",
						"          DATA_ANY_MES_FITXER = concat($Any,$Mes)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Identificador as string,",
						"          {Link licitación} as string,",
						"          {Fecha actualización} as string,",
						"          {Número de expediente} as string,",
						"          Lote as string,",
						"          {Objeto licitación/lote} as string,",
						"          {Presupuesto base con impuestos licitación/lote} as string,",
						"          {Presupuesto base sin impuestos licitación/lote} as string,",
						"          {CPV licitación/lote} as string,",
						"          {Lugar ejecución licitación/lote} as string,",
						"          {Resultado licitación/lote} as string,",
						"          {Fecha del acuerdo licitación/lote} as string,",
						"          {Número de ofertas recibidas por licitación/lote} as string,",
						"          {Precio de la oferta más baja por licitación/lote} as string,",
						"          {Precio de la oferta más alta por licitación/lote} as string,",
						"          {Se han excluído ofertas por ser anormalmente bajas por licitación/lote} as string,",
						"          {Número del contrato licitación/lote} as string,",
						"          {Fecha formalización del contrato licitación/lote} as string,",
						"          {Fecha entrada en vigor del contrato de licitación/lote} as string,",
						"          {Adjudicatario licitación/lote} as string,",
						"          {Tipo de identificador de adjudicatario por licitación/lote} as string,",
						"          {Identificador Adjudicatario de la licitación/lote} as string,",
						"          {El adjudicatario es o no PYME de la licitación/lote} as string,",
						"          {Importe adjudicación sin impuestos licitación/lote} as string,",
						"          {Importe adjudicación con impuestos licitación/lote} as string,",
						"          DATA_ANY_MES_FITXER as integer,",
						"          DATA_CARREGA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Identificador,",
						"          {Link licitación},",
						"          {Fecha actualización},",
						"          {Número de expediente},",
						"          Lote,",
						"          {Objeto licitación/lote},",
						"          {Presupuesto base con impuestos licitación/lote},",
						"          {Presupuesto base sin impuestos licitación/lote},",
						"          {CPV licitación/lote},",
						"          {Lugar ejecución licitación/lote},",
						"          {Resultado licitación/lote},",
						"          {Fecha del acuerdo licitación/lote},",
						"          {Número de ofertas recibidas por licitación/lote},",
						"          {Precio de la oferta más baja por licitación/lote},",
						"          {Precio de la oferta más alta por licitación/lote},",
						"          {Se han excluído ofertas por ser anormalmente bajas por licitación/lote},",
						"          {Número del contrato licitación/lote},",
						"          {Fecha formalización del contrato licitación/lote},",
						"          {Fecha entrada en vigor del contrato de licitación/lote},",
						"          {Adjudicatario licitación/lote},",
						"          {Tipo de identificador de adjudicatario por licitación/lote},",
						"          {Identificador Adjudicatario de la licitación/lote},",
						"          {El adjudicatario es o no PYME de la licitación/lote},",
						"          {Importe adjudicación sin impuestos licitación/lote},",
						"          {Importe adjudicación con impuestos licitación/lote},",
						"          DATA_ANY_MES_FITXER,",
						"          DATA_CARREGA",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_LIA_FACT_ADJUDICACIONS')]",
				"[concat(variables('factoryId'), '/datasets/HIST_LIA_FACT_ADJUDICACIONS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_HIST_LIA_FACT_LICITACIONS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_LIA_FACT_LICITACIONS",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HIST_LIA_FACT_LICITACIONS",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Any as string ('2021'),",
						"     Mes as string ('01')",
						"}",
						"source(output(",
						"          Identificador as string,",
						"          {Link licitación} as string,",
						"          {Fecha actualización} as string,",
						"          {Vigente/Anulada/Archivada} as string,",
						"          {Primera publicación} as string,",
						"          Estado as string,",
						"          {Número de expediente} as string,",
						"          {Objeto del Contrato} as string,",
						"          {Valor estimado del contrato} as string,",
						"          {Presupuesto base sin impuestos} as string,",
						"          {Presupuesto base con impuestos} as string,",
						"          CPV as string,",
						"          {Tipo de contrato} as string,",
						"          {Lugar de ejecución} as string,",
						"          {Órgano de Contratación} as string,",
						"          {ID OC en PLACSP} as string,",
						"          {NIF OC} as string,",
						"          DIR3 as string,",
						"          {Enlace al Perfil de Contratante del OC} as string,",
						"          {Tipo de Administración} as string,",
						"          {Código Postal} as string,",
						"          {Tipo de procedimiento} as string,",
						"          {Sistema de contratación} as string,",
						"          {Tramitación} as string,",
						"          {Forma de presentación de la oferta} as string,",
						"          {Fecha de presentación de ofertas} as string,",
						"          {Fecha de presentación de solicitudes de participacion} as string,",
						"          {Directiva de aplicación} as string,",
						"          {Financiación Europea y fuente} as string,",
						"          {Descripción de la financiación europea} as string,",
						"          {Subcontratación permitida} as string,",
						"          {Subcontratación permitida porcentaje} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 derive(DATA_CARREGA = currentDate(),",
						"          DATA_ANY_MES_FITXER = concat($Any,$Mes)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Identificador as string,",
						"          {Link licitación} as string,",
						"          {Fecha actualización} as string,",
						"          {Vigente/Anulada/Archivada} as string,",
						"          {Primera publicación} as string,",
						"          Estado as string,",
						"          {Número de expediente} as string,",
						"          {Objeto del Contrato} as string,",
						"          {Valor estimado del contrato} as string,",
						"          {Presupuesto base sin impuestos} as string,",
						"          {Presupuesto base con impuestos} as string,",
						"          CPV as string,",
						"          {Tipo de contrato} as string,",
						"          {Lugar de ejecución} as string,",
						"          {Órgano de Contratación} as string,",
						"          {ID OC en PLACSP} as string,",
						"          {NIF OC} as string,",
						"          DIR3 as string,",
						"          {Enlace al Perfil de Contratante del OC} as string,",
						"          {Tipo de Administración} as string,",
						"          {Código Postal} as string,",
						"          {Tipo de procedimiento} as string,",
						"          {Sistema de contratación} as string,",
						"          {Tramitación} as string,",
						"          {Forma de presentación de la oferta} as string,",
						"          {Fecha de presentación de ofertas} as string,",
						"          {Fecha de presentación de solicitudes de participacion} as string,",
						"          {Directiva de aplicación} as string,",
						"          {Financiación Europea y fuente} as string,",
						"          {Descripción de la financiación europea} as string,",
						"          {Subcontratación permitida} as string,",
						"          {Subcontratación permitida porcentaje} as string,",
						"          DATA_ANY_MES_FITXER as integer,",
						"          DATA_CARREGA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Identificador,",
						"          {Link licitación},",
						"          {Fecha actualización},",
						"          {Vigente/Anulada/Archivada},",
						"          {Primera publicación},",
						"          Estado,",
						"          {Número de expediente},",
						"          {Objeto del Contrato},",
						"          {Valor estimado del contrato},",
						"          {Presupuesto base sin impuestos},",
						"          {Presupuesto base con impuestos},",
						"          CPV,",
						"          {Tipo de contrato},",
						"          {Lugar de ejecución},",
						"          {Órgano de Contratación},",
						"          {ID OC en PLACSP},",
						"          {NIF OC},",
						"          DIR3,",
						"          {Enlace al Perfil de Contratante del OC},",
						"          {Tipo de Administración},",
						"          {Código Postal},",
						"          {Tipo de procedimiento},",
						"          {Sistema de contratación},",
						"          {Tramitación},",
						"          {Forma de presentación de la oferta},",
						"          {Fecha de presentación de ofertas},",
						"          {Fecha de presentación de solicitudes de participacion},",
						"          {Directiva de aplicación},",
						"          {Financiación Europea y fuente},",
						"          {Descripción de la financiación europea},",
						"          {Subcontratación permitida},",
						"          {Subcontratación permitida porcentaje},",
						"          DATA_ANY_MES_FITXER,",
						"          DATA_CARREGA",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_LIA_FACT_LICITACIONS')]",
				"[concat(variables('factoryId'), '/datasets/HIST_LIA_FACT_LICITACIONS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_HIST_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HIST_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Any as string",
						"}",
						"source(output(",
						"          MINISTERI as string,",
						"          {COMUNIDAD AUTONOMA} as string,",
						"          {COST TOTAL} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 derive(DATA_CARREGA = currentDate(),",
						"          DATA_ANY_FITXER = toInteger($Any)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          MINISTERI as string,",
						"          {COMUNIDAD AUTONOMA} as string,",
						"          {COST TOTAL} as string,",
						"          DATA_ANY_FITXER as integer,",
						"          DATA_CARREGA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE')]",
				"[concat(variables('factoryId'), '/datasets/HIST_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_HIST_PRES_FACT_AGR_CCAA_SP_ADMIN')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_PRES_FACT_AGR_CCAA_SP_ADMIN",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HIST_PRES_FACT_AGR_CCAA_SP_ADMIN",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Any as string",
						"}",
						"source(output(",
						"          {COMUNITAT AUTONOMA} as string,",
						"          ANY_ANTERIOR as string,",
						"          ANY_ACTUAL as string,",
						"          {ANY_ACTUAL+1} as string,",
						"          {ANY_ACTUAL+2} as string,",
						"          {ANY_ACTUAL+3} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 derive(DATA_CARREGA = currentDate(),",
						"          DATA_ANY_FITXER = toInteger($Any)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {COMUNITAT AUTONOMA} as string,",
						"          ANY_ANTERIOR as string,",
						"          ANY_ACTUAL as string,",
						"          {ANY_ACTUAL+1} as string,",
						"          {ANY_ACTUAL+2} as string,",
						"          {ANY_ACTUAL+3} as string,",
						"          DATA_ANY_FITXER as integer,",
						"          DATA_CARREGA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_AGR_CCAA_SP_ADMIN')]",
				"[concat(variables('factoryId'), '/datasets/HIST_PRES_FACT_AGR_CCAA_SP_ADMIN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_HIST_PRES_FACT_AGR_CCAA_SP_EMPR')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_PRES_FACT_AGR_CCAA_SP_EMPR",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HIST_PRES_FACT_AGR_CCAA_SP_EMPR",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Any as string",
						"}",
						"source(output(",
						"          {COMUNITATS AUTONOMES} as string,",
						"          ANY_ANTERIOR as string,",
						"          ANY_ACTUAL as string,",
						"          {ANY_ACTUAL+1} as string,",
						"          {ANY_ACTUAL+2} as string,",
						"          {ANY_ACTUAL+3} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 derive(DATA_CARREGA = currentDate(),",
						"          DATA_ANY_FITXER = toInteger($Any)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {COMUNITATS AUTONOMES} as string,",
						"          ANY_ANTERIOR as string,",
						"          ANY_ACTUAL as string,",
						"          {ANY_ACTUAL+1} as string,",
						"          {ANY_ACTUAL+2} as string,",
						"          {ANY_ACTUAL+3} as string,",
						"          DATA_ANY_FITXER as integer,",
						"          DATA_CARREGA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_AGR_CCAA_SP_EMPR')]",
				"[concat(variables('factoryId'), '/datasets/HIST_PRES_FACT_AGR_CCAA_SP_EMPR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_HIST_PRES_FACT_AGR_RESUMEN_INVERSIONS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_PRES_FACT_AGR_RESUMEN_INVERSIONS",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HIST_PRES_FACT_AGR_RESUMEN_INVERSIONS",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Any as string",
						"}",
						"source(output(",
						"          COMUNITAT_AUTONOMA as string,",
						"          COST_TOTAL as string,",
						"          ANY_EXC_PRESUPOSTARI as string,",
						"          INVERSIO as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 derive(DATA_CARREGA = currentDate(),",
						"          DATA_ANY_FITXER = toInteger($Any)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          COMUNITAT_AUTONOMA as string,",
						"          COST_TOTAL as string,",
						"          ANY_EXC_PRESUPOSTARI as string,",
						"          INVERSIO as string,",
						"          DATA_ANY_FITXER as integer,",
						"          DATA_CARREGA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_AGR_RESUMEN_INVERSIONS')]",
				"[concat(variables('factoryId'), '/datasets/HIST_PRES_FACT_AGR_RESUMEN_INVERSIONS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_HIST_PRES_FACT_DET_EST_OOAA_RE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_PRES_FACT_DET_EST_OOAA_RE",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HIST_PRES_FACT_DET_EST_OOAA_RE",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Any as string",
						"}",
						"source(output(",
						"          ID_MINISTERI as string,",
						"          DESC_MINISTERI as string,",
						"          COMUNITAT_AUTONOMA as string,",
						"          CODI_CENTRE as string,",
						"          ID_PROGRAMA as string,",
						"          ID_ARTICLE as string,",
						"          DESC_CENTRE as string,",
						"          ID_PROJECTE as string,",
						"          NOM_PROJECTE as string,",
						"          ANY_INICI as string,",
						"          ANY_FI as string,",
						"          PROVINCIA as string,",
						"          TIPUS as string,",
						"          COST_TOTAL as string,",
						"          ANY_ANTERIOR as string,",
						"          ANY_ACTUAL as string,",
						"          {ANY_ACTUAL+1} as string,",
						"          {ANY_ACTUAL+2} as string,",
						"          {ANY_ACTUAL+3} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 derive(DATA_CARREGA = currentDate(),",
						"          DATA_ANY_FITXER = toInteger($Any)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_MINISTERI as string,",
						"          DESC_MINISTERI as string,",
						"          COMUNITAT_AUTONOMA as string,",
						"          CODI_CENTRE as string,",
						"          ID_PROGRAMA as string,",
						"          ID_ARTICLE as string,",
						"          DESC_CENTRE as string,",
						"          ID_PROJECTE as string,",
						"          NOM_PROJECTE as string,",
						"          ANY_INICI as string,",
						"          ANY_FI as string,",
						"          PROVINCIA as string,",
						"          TIPUS as string,",
						"          COST_TOTAL as string,",
						"          ANY_ANTERIOR as string,",
						"          ANY_ACTUAL as string,",
						"          {ANY_ACTUAL+1} as string,",
						"          {ANY_ACTUAL+2} as string,",
						"          {ANY_ACTUAL+3} as string,",
						"          DATA_ANY_FITXER as integer,",
						"          DATA_CARREGA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_DET_EST_OOAA_RE')]",
				"[concat(variables('factoryId'), '/datasets/HIST_PRES_FACT_DET_EST_OOAA_RE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_HIST_PRES_FACT_DET_SEGURETAT_SOCIAL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_PRES_FACT_DET_SEGURETAT_SOCIAL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HIST_PRES_FACT_DET_SEGURETAT_SOCIAL",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Any as string",
						"}",
						"source(output(",
						"          Organisme as string,",
						"          Programa as string,",
						"          Article as string,",
						"          {Centre Tipus} as string,",
						"          {Número} as string,",
						"          {Denominació} as string,",
						"          Inici as string,",
						"          Final as string,",
						"          {Import Total} as string,",
						"          ANY as string,",
						"          {ANY+1} as string,",
						"          {ANY+2} as string,",
						"          {ANY+3} as string,",
						"          {Província} as string,",
						"          {ID Entitat} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 derive(DATA_ANY_FITXER = toInteger($Any),",
						"          DATA_CARREGA = currentDate()) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Organisme as string,",
						"          Programa as string,",
						"          Article as string,",
						"          {Centre Tipus} as string,",
						"          {Número} as string,",
						"          {Denominació} as string,",
						"          Inici as string,",
						"          Final as string,",
						"          {Import Total} as string,",
						"          ANY as string,",
						"          {ANY+1} as string,",
						"          {ANY+2} as string,",
						"          {ANY+3} as string,",
						"          {Província} as string,",
						"          {ID Entitat} as string,",
						"          DATA_ANY_FITXER as integer,",
						"          DATA_CARREGA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_DET_SEGURETAT_SOCIAL')]",
				"[concat(variables('factoryId'), '/datasets/HIST_PRES_FACT_DET_SEGURETAT_SOCIAL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_HIST_PRES_FACT_DET_SP_ADMIN')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_PRES_FACT_DET_SP_ADMIN",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HIST_PRES_FACT_DET_SP_ADMIN",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Any as string",
						"}",
						"source(output(",
						"          COMUNITAT_AUTONOMA as string,",
						"          PROVINCIA as string,",
						"          ENTITAT as string,",
						"          {CODI PROJECTE} as string,",
						"          DENOMINACIO as string,",
						"          {COST TOTAL} as string,",
						"          INICI as string,",
						"          FI as string,",
						"          TIPUS as string,",
						"          ANY_ANTERIOR as string,",
						"          ANY_ACTUAL as string,",
						"          {ANY_ACTUAL+1} as string,",
						"          {ANY_ACTUAL+2} as string,",
						"          {ANY_ACTUAL+3} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 derive(DATA_CARREGA = currentDate(),",
						"          DATA_ANY_FITXER = toInteger($Any)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          COMUNITAT_AUTONOMA as string,",
						"          PROVINCIA as string,",
						"          ENTITAT as string,",
						"          {CODI PROJECTE} as string,",
						"          DENOMINACIO as string,",
						"          {COST TOTAL} as string,",
						"          INICI as string,",
						"          FI as string,",
						"          TIPUS as string,",
						"          ANY_ANTERIOR as string,",
						"          ANY_ACTUAL as string,",
						"          {ANY_ACTUAL+1} as string,",
						"          {ANY_ACTUAL+2} as string,",
						"          {ANY_ACTUAL+3} as string,",
						"          DATA_ANY_FITXER as integer,",
						"          DATA_CARREGA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_DET_SP_ADMIN')]",
				"[concat(variables('factoryId'), '/datasets/HIST_PRES_FACT_DET_SP_ADMIN')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_HIST_PRES_FACT_DET_SP_EMPR')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_PRES_FACT_DET_SP_EMPR",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HIST_PRES_FACT_DET_SP_EMPR",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Any as string",
						"}",
						"source(output(",
						"          COMUNITAT_AUTONOMA as string,",
						"          PROVINCIA as string,",
						"          ENTITAT as string,",
						"          {CODI PROJECTE} as string,",
						"          DENOMINACIO as string,",
						"          {COST TOTAL} as string,",
						"          INICI as string,",
						"          FI as string,",
						"          TIPUS as string,",
						"          ANY_ANTERIOR as string,",
						"          ANY_ACTUAL as string,",
						"          {ANY_ACTUAL+1} as string,",
						"          {ANY_ACTUAL+2} as string,",
						"          {ANY_ACTUAL+3} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 derive(DATA_CARREGA = currentDate(),",
						"          DATA_ANY_FITXER = toInteger($Any)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          {COMUNITAT_AUTONOMA,PROVINCIA} as string,",
						"          ENTITAT as string,",
						"          {CODI PROJECTE} as string,",
						"          DENOMINACIO as string,",
						"          {COST TOTAL} as string,",
						"          INICI as string,",
						"          FI as string,",
						"          TIPUS as string,",
						"          ANY_ANTERIOR as string,",
						"          ANY_ACTUAL as string,",
						"          {ANY_ACTUAL+1} as string,",
						"          {ANY_ACTUAL+2} as string,",
						"          {ANY_ACTUAL+3} as string,",
						"          DATA_ANY_FITXER as integer,",
						"          DATA_CARREGA as date",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_DET_SP_EMPR')]",
				"[concat(variables('factoryId'), '/datasets/HIST_PRES_FACT_DET_SP_EMPR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_LIA_FACT_ADJUDICACIONS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_LIA_FACT_ADJUDICACIONS",
								"type": "DatasetReference"
							},
							"name": "STGAdjudicacions"
						},
						{
							"dataset": {
								"referenceName": "DM_LIA_FACT_LICITACIONS",
								"type": "DatasetReference"
							},
							"name": "DMLicitacions"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS_LIA_FACT_ADJUDICACIONS",
								"type": "DatasetReference"
							},
							"name": "ODSAdjudicacions"
						}
					],
					"transformations": [
						{
							"name": "Select"
						},
						{
							"name": "CambioTipos"
						},
						{
							"name": "Join"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Identificador as string,",
						"          {Link licitación} as string,",
						"          {Fecha actualización} as string,",
						"          {Número de expediente} as string,",
						"          Lote as string,",
						"          {Objeto licitación/lote} as string,",
						"          {Presupuesto base con impuestos licitación/lote} as string,",
						"          {Presupuesto base sin impuestos licitación/lote} as string,",
						"          {CPV licitación/lote} as string,",
						"          {Lugar ejecución licitación/lote} as string,",
						"          {Resultado licitación/lote} as string,",
						"          {Fecha del acuerdo licitación/lote} as string,",
						"          {Número de ofertas recibidas por licitación/lote} as string,",
						"          {Precio de la oferta más baja por licitación/lote} as string,",
						"          {Precio de la oferta más alta por licitación/lote} as string,",
						"          {Se han excluído ofertas por ser anormalmente bajas por licitación/lote} as string,",
						"          {Número del contrato licitación/lote} as string,",
						"          {Fecha formalización del contrato licitación/lote} as string,",
						"          {Fecha entrada en vigor del contrato de licitación/lote} as string,",
						"          {Adjudicatario licitación/lote} as string,",
						"          {Tipo de identificador de adjudicatario por licitación/lote} as string,",
						"          {Identificador Adjudicatario de la licitación/lote} as string,",
						"          {El adjudicatario es o no PYME de la licitación/lote} as string,",
						"          {Importe adjudicación sin impuestos licitación/lote} as string,",
						"          {Importe adjudicación con impuestos licitación/lote} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGAdjudicacions",
						"source(output(",
						"          ID_LICITACIO as integer,",
						"          CODI_PROJECTE_CLAU as string,",
						"          DESC_OBJ_CONTRACTE as string,",
						"          DESC_ESTAT as string,",
						"          QTY_PRESSUPOST as decimal(15,2),",
						"          DATA_PRIMERA_PUBLICACIO as date,",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DMLicitacions",
						"STGAdjudicacions select(mapColumn(",
						"          ID_LICITACIO = Identificador,",
						"          QTY_IMPORT_ADJUDICACIO = {Importe adjudicación sin impuestos licitación/lote},",
						"          DATA_ACORD_LICITACIO = {Fecha del acuerdo licitación/lote}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Select",
						"Select derive(ID_LICITACIO = toInteger(ID_LICITACIO),",
						"          DATA_ACORD_LICITACIO = toDate(DATA_ACORD_LICITACIO),",
						"          QTY_IMPORT_ADJUDICACIO = toDecimal(replace(replace(QTY_IMPORT_ADJUDICACIO,'.',''),',','.'),15,2)) ~> CambioTipos",
						"CambioTipos, DMLicitacions join(CambioTipos@ID_LICITACIO == DMLicitacions@ID_LICITACIO,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> Join",
						"Join sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_LICITACIO as integer,",
						"          QTY_IMPORT_ADJUDICACIO as decimal(15,2),",
						"          DATA_ACORD_LICITACIO as date,",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> ODSAdjudicacions"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_LIA_FACT_ADJUDICACIONS')]",
				"[concat(variables('factoryId'), '/datasets/DM_LIA_FACT_LICITACIONS')]",
				"[concat(variables('factoryId'), '/datasets/ODS_LIA_FACT_ADJUDICACIONS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_LIA_FACT_LICITACIONS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_LIA_FACT_LICITACIONS",
								"type": "DatasetReference"
							},
							"name": "STGLicitacions"
						},
						{
							"dataset": {
								"referenceName": "DM_DIM_UNITATS_AGE",
								"type": "DatasetReference"
							},
							"name": "UnitatsAGE"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS_LIA_FACT_LICITACIONS",
								"type": "DatasetReference"
							},
							"name": "ODSLicitacions"
						}
					],
					"transformations": [
						{
							"name": "Select"
						},
						{
							"name": "CambioTipos"
						},
						{
							"name": "Filtro"
						},
						{
							"name": "Filtro2"
						},
						{
							"name": "Join"
						},
						{
							"name": "Union"
						},
						{
							"name": "FiltreCatalunya"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Any as string,",
						"     Mes as string",
						"}",
						"source(output(",
						"          Identificador as string,",
						"          {Link licitación} as string,",
						"          {Fecha actualización} as string,",
						"          {Vigente/Anulada/Archivada} as string,",
						"          {Primera publicación} as string,",
						"          Estado as string,",
						"          {Número de expediente} as string,",
						"          {Objeto del Contrato} as string,",
						"          {Valor estimado del contrato} as string,",
						"          {Presupuesto base sin impuestos} as string,",
						"          {Presupuesto base con impuestos} as string,",
						"          CPV as string,",
						"          {Tipo de contrato} as string,",
						"          {Lugar de ejecución} as string,",
						"          {Órgano de Contratación} as string,",
						"          {ID OC en PLACSP} as string,",
						"          {NIF OC} as string,",
						"          DIR3 as string,",
						"          {Enlace al Perfil de Contratante del OC} as string,",
						"          {Tipo de Administración} as string,",
						"          {Código Postal} as string,",
						"          {Tipo de procedimiento} as string,",
						"          {Sistema de contratación} as string,",
						"          {Tramitación} as string,",
						"          {Forma de presentación de la oferta} as string,",
						"          {Fecha de presentación de ofertas} as string,",
						"          {Fecha de presentación de solicitudes de participacion} as string,",
						"          {Directiva de aplicación} as string,",
						"          {Financiación Europea y fuente} as string,",
						"          {Descripción de la financiación europea} as string,",
						"          {Subcontratación permitida} as string,",
						"          {Subcontratación permitida porcentaje} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGLicitacions",
						"source(output(",
						"          ID_UNITAT_ORGANICA as string,",
						"          DESC_UNITAT_ORGANICA as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> UnitatsAGE",
						"Union select(mapColumn(",
						"          ID_LICITACIO = Identificador,",
						"          DESC_OBJ_CONTRACTE = {Objeto del Contrato},",
						"          DESC_ESTAT = Estado,",
						"          QTY_PRESSUPOST = {Presupuesto base sin impuestos},",
						"          DATA_PRIMERA_PUBLICACIO = {Primera publicación}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Select",
						"Select derive(ID_LICITACIO = toInteger(ID_LICITACIO),",
						"          DATA_PRIMERA_PUBLICACIO = toDate(DATA_PRIMERA_PUBLICACIO),",
						"          QTY_PRESSUPOST = toDecimal(replace(replace(QTY_PRESSUPOST,'.',''),',','.'),15,2),",
						"          CODI_PROJECTE_CLAU = '-1') ~> CambioTipos",
						"FiltreCatalunya filter({Tipo de Administración} == 'Administración General del Estado') ~> Filtro",
						"FiltreCatalunya filter({Tipo de Administración} != 'Comunidad Autónoma' && {Tipo de Administración} !='Administración Local' && {Tipo de Administración} !='Administración General del Estado') ~> Filtro2",
						"Filtro2, UnitatsAGE join(DIR3 == ID_UNITAT_ORGANICA,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> Join",
						"Filtro, Join union(byName: true)~> Union",
						"STGLicitacions filter(in(['ES51 - Cataluña',\r",
						"'ES511 - Barcelona',\r",
						"'ES512 - Girona',\r",
						"'ES513 - Lleida',\r",
						"'ES514 - Tarragona'],{Lugar de ejecución})) ~> FiltreCatalunya",
						"CambioTipos sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_LICITACIO as integer,",
						"          CODI_PROJECTE_CLAU as string,",
						"          DESC_OBJ_CONTRACTE as string,",
						"          DESC_ESTAT as string,",
						"          QTY_PRESSUPOST as decimal(15,2),",
						"          DATA_PRIMERA_PUBLICACIO as date,",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> ODSLicitacions"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_LIA_FACT_LICITACIONS')]",
				"[concat(variables('factoryId'), '/datasets/DM_DIM_UNITATS_AGE')]",
				"[concat(variables('factoryId'), '/datasets/ODS_LIA_FACT_LICITACIONS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS_DIM_ENTITATS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_DIM_ENTITATS",
								"type": "DatasetReference"
							},
							"name": "STGEntitats"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS_DIM_ENTITATS",
								"type": "DatasetReference"
							},
							"name": "ODSEntitats"
						}
					],
					"transformations": [
						{
							"name": "CambiaNombres"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {ID Entitat} as string,",
						"          Entitat as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGEntitats",
						"STGEntitats select(mapColumn(",
						"          ID_ENTITAT = {ID Entitat},",
						"          NOM_ENTITAT = Entitat",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> CambiaNombres",
						"CambiaNombres sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_ENTITAT as string,",
						"          NOM_ENTITAT as string,",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> ODSEntitats"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_DIM_ENTITATS')]",
				"[concat(variables('factoryId'), '/datasets/ODS_DIM_ENTITATS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS_DIM_UNITATS_AGE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_DIM_UNITATS_AGE",
								"type": "DatasetReference"
							},
							"name": "STGDimUnitatsAGE"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS_DIM_UNITATS_AGE",
								"type": "DatasetReference"
							},
							"name": "ODSDimUnitatsAGE"
						}
					],
					"transformations": [
						{
							"name": "CambiaNombres"
						}
					],
					"scriptLines": [
						"source(output(",
						"          C_ID_UD_ORGANICA as string,",
						"          C_DNM_UD_ORGANICA as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGDimUnitatsAGE",
						"STGDimUnitatsAGE select(mapColumn(",
						"          ID_UNITAT_ORGANICA = C_ID_UD_ORGANICA,",
						"          DESC_UNITAT_ORGANICA = C_DNM_UD_ORGANICA",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> CambiaNombres",
						"CambiaNombres sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_UNITAT_ORGANICA as string,",
						"          DESC_UNITAT_ORGANICA as string,",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> ODSDimUnitatsAGE"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_DIM_UNITATS_AGE')]",
				"[concat(variables('factoryId'), '/datasets/ODS_DIM_UNITATS_AGE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE",
								"type": "DatasetReference"
							},
							"name": "STGRestaEntitats"
						},
						{
							"dataset": {
								"referenceName": "DM_DIM_COMUNITATS_AUTONOMES",
								"type": "DatasetReference"
							},
							"name": "DimCCAA"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE",
								"type": "DatasetReference"
							},
							"name": "ODSRestaEntitats"
						}
					],
					"transformations": [
						{
							"name": "join"
						},
						{
							"name": "Tipos"
						},
						{
							"name": "Campos"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Any as string",
						"}",
						"source(output(",
						"          MINISTERI as string,",
						"          {COMUNIDAD AUTONOMA} as string,",
						"          {COST TOTAL} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGRestaEntitats",
						"source(output(",
						"          ID_CCAA as integer,",
						"          NOM_CCAA as string,",
						"          NOM_CCAA_CAT as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DimCCAA",
						"STGRestaEntitats, DimCCAA join(right(lower(trim({COMUNIDAD AUTONOMA})),6) == right(lower(trim(NOM_CCAA)),6),",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join",
						"join derive({COST TOTAL} = toDecimal(replace(replace({COST TOTAL},'.',''),',','.'))*1000,",
						"          DATA_ANY_EXC_PRESSUPOSTARI = toInteger($Any),",
						"          MINISTERI = right(MINISTERI,2)) ~> Tipos",
						"Tipos select(mapColumn(",
						"          ID_CCAA,",
						"          ID_MINISTERI = MINISTERI,",
						"          DATA_ANY_EXC_PRESSUPOSTARI,",
						"          QTY_COST_TOTAL = {COST TOTAL}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Campos",
						"Campos sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_CCAA as integer,",
						"          ID_MINISTERI as string,",
						"          DATA_ANY_EXC_PRESSUPOSTARI as integer,",
						"          QTY_COST_TOTAL as decimal(10,2),",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> ODSRestaEntitats"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE')]",
				"[concat(variables('factoryId'), '/datasets/DM_DIM_COMUNITATS_AUTONOMES')]",
				"[concat(variables('factoryId'), '/datasets/ODS_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS_PRES_FACT_AGR_CCAA_SP')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_PRES_FACT_AGR_CCAA_SP_ADMIN",
								"type": "DatasetReference"
							},
							"name": "STGSPAdmin"
						},
						{
							"dataset": {
								"referenceName": "STG_PRES_FACT_AGR_CCAA_SP_EMPR",
								"type": "DatasetReference"
							},
							"name": "STGSPEmpr"
						},
						{
							"dataset": {
								"referenceName": "DM_DIM_COMUNITATS_AUTONOMES",
								"type": "DatasetReference"
							},
							"name": "ComunitatsAutonomes"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS_PRES_FACT_AGR_CCAA_SP",
								"type": "DatasetReference"
							},
							"name": "ODSSP"
						}
					],
					"transformations": [
						{
							"name": "ColumnaFlagAdmin"
						},
						{
							"name": "ColumnaFlagEmpr"
						},
						{
							"name": "Union"
						},
						{
							"name": "Join"
						},
						{
							"name": "Anys"
						},
						{
							"name": "SelectColumns"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Any as string",
						"}",
						"source(output(",
						"          {COMUNITAT AUTONOMA} as string,",
						"          ANY_ANTERIOR as string,",
						"          ANY_ACTUAL as string,",
						"          {ANY_ACTUAL+1} as string,",
						"          {ANY_ACTUAL+2} as string,",
						"          {ANY_ACTUAL+3} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGSPAdmin",
						"source(output(",
						"          {COMUNITATS AUTONOMES} as string,",
						"          ANY_ANTERIOR as string,",
						"          ANY_ACTUAL as string,",
						"          {ANY_ACTUAL+1} as string,",
						"          {ANY_ACTUAL+2} as string,",
						"          {ANY_ACTUAL+3} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGSPEmpr",
						"source(output(",
						"          ID_CCAA as integer,",
						"          NOM_CCAA as string,",
						"          NOM_CCAA_CAT as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ComunitatsAutonomes",
						"STGSPAdmin derive(DESC_TIPUS_ORGANISME = \"Admin\") ~> ColumnaFlagAdmin",
						"select1 derive(DESC_TIPUS_ORGANISME = \"Empr\") ~> ColumnaFlagEmpr",
						"ColumnaFlagAdmin, ColumnaFlagEmpr union(byName: true)~> Union",
						"Union, ComunitatsAutonomes join(right(lower(trim({COMUNITAT AUTONOMA})),6) == right(lower(trim(NOM_CCAA)),6),",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> Join",
						"Join derive(DATA_ANY_ANT = toInteger($Any)-1,",
						"          DATA_ANY_EXC_PRESSUPOSTARI = toInteger($Any),",
						"          DATA_ANY_1 = toInteger($Any)+1,",
						"          DATA_ANY_2 = toInteger($Any)+2,",
						"          DATA_ANY_3 = toInteger($Any)+3,",
						"          ANY_ANTERIOR = toDecimal(replace(replace(ANY_ANTERIOR,'.',''),',','.'))*1000,",
						"          ANY_ACTUAL = toDecimal(replace(replace(ANY_ACTUAL,'.',''),',','.'))*1000,",
						"          {ANY_ACTUAL+1} = toDecimal(replace(replace({ANY_ACTUAL+1},'.',''),',','.'))*1000,",
						"          {ANY_ACTUAL+2} = toDecimal(replace(replace({ANY_ACTUAL+2},'.',''),',','.'))*1000,",
						"          {ANY_ACTUAL+3} = toDecimal(replace(replace({ANY_ACTUAL+3},'.',''),',','.'))*1000) ~> Anys",
						"Anys select(mapColumn(",
						"          ID_CCAA,",
						"          DESC_TIPUS_ORGANISME,",
						"          DATA_ANY_ANT,",
						"          QTY_ANY_ANT = ANY_ANTERIOR,",
						"          DATA_ANY_EXC_PRESSUPOSTARI,",
						"          QTY_ANY_EXC_PRESSUPOSTARI = ANY_ACTUAL,",
						"          DATA_ANY_1,",
						"          QTY_ANY_1 = {ANY_ACTUAL+1},",
						"          DATA_ANY_2,",
						"          QTY_ANY_2 = {ANY_ACTUAL+2},",
						"          DATA_ANY_3,",
						"          QTY_ANY_3 = {ANY_ACTUAL+3}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectColumns",
						"STGSPEmpr select(mapColumn(",
						"          {COMUNITAT AUTONOMA} = {COMUNITATS AUTONOMES},",
						"          ANY_ANTERIOR,",
						"          ANY_ACTUAL,",
						"          {ANY_ACTUAL+1},",
						"          {ANY_ACTUAL+2},",
						"          {ANY_ACTUAL+3}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"SelectColumns sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_CCAA as integer,",
						"          DESC_TIPUS_ORGANISME as string,",
						"          DATA_ANY_ANT as integer,",
						"          QTY_ANY_ANT as decimal(10,2),",
						"          DATA_ANY_EXC_PRESSUPOSTARI as integer,",
						"          QTY_ANY_EXC_PRESSUPOSTARI as decimal(10,2),",
						"          DATA_ANY_1 as integer,",
						"          QTY_ANY_1 as decimal(10,2),",
						"          DATA_ANY_2 as integer,",
						"          QTY_ANY_2 as decimal(10,2),",
						"          DATA_ANY_3 as integer,",
						"          QTY_ANY_3 as decimal(10,2),",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> ODSSP"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_AGR_CCAA_SP_ADMIN')]",
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_AGR_CCAA_SP_EMPR')]",
				"[concat(variables('factoryId'), '/datasets/DM_DIM_COMUNITATS_AUTONOMES')]",
				"[concat(variables('factoryId'), '/datasets/ODS_PRES_FACT_AGR_CCAA_SP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS_PRES_FACT_AGR_RESUMEN_INVERSIONS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_PRES_FACT_AGR_RESUMEN_INVERSIONS",
								"type": "DatasetReference"
							},
							"name": "STGResumInversions"
						},
						{
							"dataset": {
								"referenceName": "DM_DIM_COMUNITATS_AUTONOMES",
								"type": "DatasetReference"
							},
							"name": "DimCCAA"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS_PRES_FACT_AGR_RESUMEN_INVERSIONS",
								"type": "DatasetReference"
							},
							"name": "ODSResumInversions"
						}
					],
					"transformations": [
						{
							"name": "join"
						},
						{
							"name": "Campos"
						},
						{
							"name": "Tipos"
						}
					],
					"scriptLines": [
						"source(output(",
						"          COMUNITAT_AUTONOMA as string,",
						"          COST_TOTAL as string,",
						"          ANY_EXC_PRESUPOSTARI as string,",
						"          INVERSIO as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGResumInversions",
						"source(output(",
						"          ID_CCAA as integer,",
						"          NOM_CCAA as string,",
						"          NOM_CCAA_CAT as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DimCCAA",
						"STGResumInversions, DimCCAA join(right(lower(trim(COMUNITAT_AUTONOMA)),5) == right(lower(trim(NOM_CCAA)),5),",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join",
						"Tipos select(mapColumn(",
						"          ID_CCAA,",
						"          DESC_INVERSIO = INVERSIO,",
						"          DATA_ANY_EXC_PRESUPOSTARI = ANY_EXC_PRESUPOSTARI,",
						"          QTY_COST_TOTAL = COST_TOTAL",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Campos",
						"join derive(COST_TOTAL = toDecimal(replace(replace({COST_TOTAL},'.',''),',','.'))*1000,",
						"          ANY_EXC_PRESUPOSTARI = toInteger(ANY_EXC_PRESUPOSTARI)) ~> Tipos",
						"Campos sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_CCAA as integer,",
						"          DESC_INVERSIO as string,",
						"          DATA_ANY_EXC_PRESUPOSTARI as integer,",
						"          QTY_COST_TOTAL as decimal(10,2),",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> ODSResumInversions"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_AGR_RESUMEN_INVERSIONS')]",
				"[concat(variables('factoryId'), '/datasets/DM_DIM_COMUNITATS_AUTONOMES')]",
				"[concat(variables('factoryId'), '/datasets/ODS_PRES_FACT_AGR_RESUMEN_INVERSIONS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS_PRES_FACT_DET_EST_OOAA_RE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_PRES_FACT_DET_EST_OOAA_RE",
								"type": "DatasetReference"
							},
							"name": "STGDetRE"
						},
						{
							"dataset": {
								"referenceName": "STG_PRES_FACT_DET_SEGURETAT_SOCIAL",
								"type": "DatasetReference"
							},
							"name": "STGDetSeguretatSocial"
						},
						{
							"dataset": {
								"referenceName": "DIM_PROVINCIES",
								"type": "DatasetReference"
							},
							"name": "Provincies"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS_PRES_FACT_DET_EST_OOAA_RE",
								"type": "DatasetReference"
							},
							"name": "ODSDetRE"
						}
					],
					"transformations": [
						{
							"name": "Select"
						},
						{
							"name": "Anys"
						},
						{
							"name": "AnysSS"
						},
						{
							"name": "SelectSS"
						},
						{
							"name": "Union"
						},
						{
							"name": "join1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Any as string",
						"}",
						"source(output(",
						"          ID_MINISTERI as string,",
						"          DESC_MINISTERI as string,",
						"          COMUNITAT_AUTONOMA as string,",
						"          CODI_CENTRE as string,",
						"          ID_PROGRAMA as string,",
						"          ID_ARTICLE as string,",
						"          DESC_CENTRE as string,",
						"          ID_PROJECTE as string,",
						"          NOM_PROJECTE as string,",
						"          ANY_INICI as string,",
						"          ANY_FI as string,",
						"          PROVINCIA as string,",
						"          TIPUS as string,",
						"          COST_TOTAL as string,",
						"          ANY_ANTERIOR as string,",
						"          ANY_ACTUAL as string,",
						"          {ANY_ACTUAL+1} as string,",
						"          {ANY_ACTUAL+2} as string,",
						"          {ANY_ACTUAL+3} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGDetRE",
						"source(output(",
						"          Organisme as string,",
						"          Programa as string,",
						"          Article as string,",
						"          {Centre Tipus} as string,",
						"          {Número} as string,",
						"          {Denominació} as string,",
						"          Inici as string,",
						"          Final as string,",
						"          {Import Total} as string,",
						"          ANY as string,",
						"          {ANY+1} as string,",
						"          {ANY+2} as string,",
						"          {ANY+3} as string,",
						"          {Província} as string,",
						"          {ID Entitat} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGDetSeguretatSocial",
						"source(output(",
						"          ID_PROVINCIA as string,",
						"          ID_CCAA as integer,",
						"          NOM_PROVINCIA as string,",
						"          NOM_PROVINCIA_CAT as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Provincies",
						"Anys select(mapColumn(",
						"          ID_PROVINCIA = PROVINCIA,",
						"          ID_MINISTERI,",
						"          ID_PROGRAMA,",
						"          ID_ARTICLE,",
						"          ID_PROJECTE,",
						"          CODI_CENTRE,",
						"          DESC_CENTRE,",
						"          ANY_INICI,",
						"          ANY_FI,",
						"          COD_TIPUS_PROJECTE = TIPUS,",
						"          QTY_COST_TOTAL = COST_TOTAL,",
						"          QTY_ANY_ANT = ANY_ANTERIOR,",
						"          QTY_ANY_EXC_PRESSUPOSTARI = ANY_ACTUAL,",
						"          QTY_ANY_1 = {ANY_ACTUAL+1},",
						"          QTY_ANY_2 = {ANY_ACTUAL+2},",
						"          QTY_ANY_3 = {ANY_ACTUAL+3},",
						"          DATA_ANY_ANT,",
						"          DATA_ANY_EXC_PRESSUPOSTARI,",
						"          DATA_ANY_1,",
						"          DATA_ANY_2,",
						"          DATA_ANY_3,",
						"          FLAG_SEGURETAT_SOCIAL,",
						"          DESC_PROJECTE = NOM_PROJECTE",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Select",
						"STGDetRE derive(DATA_ANY_ANT = toInteger($Any)-1,",
						"          DATA_ANY_EXC_PRESSUPOSTARI = toInteger($Any),",
						"          DATA_ANY_1 = toInteger($Any)+1,",
						"          DATA_ANY_2 = toInteger($Any)+2,",
						"          DATA_ANY_3 = toInteger($Any)+3,",
						"          ANY_ANTERIOR = toDecimal(replace(replace(ANY_ANTERIOR,'.',''),',','.'))*1000,",
						"          ANY_ACTUAL = toDecimal(replace(replace(ANY_ACTUAL,'.',''),',','.'))*1000,",
						"          {ANY_ACTUAL+1} = toDecimal(replace(replace({ANY_ACTUAL+1},'.',''),',','.'))*1000,",
						"          {ANY_ACTUAL+2} = toDecimal(replace(replace({ANY_ACTUAL+2},'.',''),',','.'))*1000,",
						"          {ANY_ACTUAL+3} = toDecimal(replace(replace({ANY_ACTUAL+3},'.',''),',','.'))*1000,",
						"          COST_TOTAL = toDecimal(replace(replace(COST_TOTAL,'.',''),',','.'))*1000,",
						"          FLAG_SEGURETAT_SOCIAL = 0) ~> Anys",
						"join1 derive(DATA_ANY_EXC_PRESSUPOSTARI = toInteger($Any),",
						"          DATA_ANY_1 = toInteger($Any)+1,",
						"          DATA_ANY_2 = toInteger($Any)+2,",
						"          DATA_ANY_3 = toInteger($Any)+3,",
						"          ANY = toDecimal(replace(replace(ANY,'.',''),',','.'))*1000,",
						"          {ANY+1} = toDecimal(replace(replace({ANY+1},'.',''),',','.'))*1000,",
						"          {ANY+2} = toDecimal(replace(replace({ANY+2},'.',''),',','.'))*1000,",
						"          {ANY+3} = toDecimal(replace(replace({ANY+3},'.',''),',','.'))*1000,",
						"          {Import Total} = toDecimal(replace(replace({Import Total},'.',''),',','.'))*1000,",
						"          FLAG_SEGURETAT_SOCIAL = 1,",
						"          ID_PROJECTE = concat(ID_PROVINCIA,' ',Organisme, ' ', Programa, ' ', Article,' ' ,{Centre Tipus}, ' ', {Número})) ~> AnysSS",
						"AnysSS select(mapColumn(",
						"          ID_PROVINCIA,",
						"          CODI_CENTRE = {Centre Tipus},",
						"          DESC_PROJECTE = {Denominació},",
						"          ANY_INICI = Inici,",
						"          ANY_FI = Final,",
						"          QTY_COST_TOTAL = {Import Total},",
						"          QTY_ANY_EXC_PRESSUPOSTARI = ANY,",
						"          QTY_ANY_1 = {ANY+1},",
						"          QTY_ANY_2 = {ANY+2},",
						"          QTY_ANY_3 = {ANY+3},",
						"          ID_ENTITAT = {ID Entitat},",
						"          DATA_ANY_EXC_PRESSUPOSTARI,",
						"          DATA_ANY_1,",
						"          DATA_ANY_2,",
						"          DATA_ANY_3,",
						"          FLAG_SEGURETAT_SOCIAL,",
						"          ID_PROJECTE,",
						"          ID_PROGRAMA = Programa,",
						"          ID_ARTICLE = Article,",
						"          ID_MINISTERI = Organisme",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectSS",
						"Select, SelectSS union(byName: true)~> Union",
						"STGDetSeguretatSocial, Provincies join(lower({Província}) == lower(NOM_PROVINCIA),",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"Union sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_PROVINCIA as string,",
						"          ID_MINISTERI as string,",
						"          ID_PROGRAMA as string,",
						"          ID_ARTICLE as integer,",
						"          ID_PROJECTE as string,",
						"          ID_ENTITAT as string,",
						"          DESC_PROJECTE as string,",
						"          CODI_CENTRE as string,",
						"          DESC_CENTRE as string,",
						"          ANY_INICI as integer,",
						"          ANY_FI as integer,",
						"          COD_TIPUS_PROJECTE as string,",
						"          QTY_COST_TOTAL as decimal(10,2),",
						"          DATA_ANY_ANT as integer,",
						"          QTY_ANY_ANT as decimal(10,2),",
						"          DATA_ANY_EXC_PRESSUPOSTARI as integer,",
						"          QTY_ANY_EXC_PRESSUPOSTARI as decimal(10,2),",
						"          DATA_ANY_1 as integer,",
						"          QTY_ANY_1 as decimal(10,2),",
						"          DATA_ANY_2 as integer,",
						"          QTY_ANY_2 as decimal(10,2),",
						"          DATA_ANY_3 as integer,",
						"          QTY_ANY_3 as decimal(10,2),",
						"          FLAG_SEGURETAT_SOCIAL as integer,",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID_PROVINCIA,",
						"          ID_MINISTERI,",
						"          ID_PROGRAMA,",
						"          ID_ARTICLE,",
						"          ID_PROJECTE,",
						"          ID_ENTITAT,",
						"          DESC_PROJECTE,",
						"          CODI_CENTRE,",
						"          DESC_CENTRE,",
						"          ANY_INICI,",
						"          ANY_FI,",
						"          COD_TIPUS_PROJECTE,",
						"          QTY_COST_TOTAL,",
						"          DATA_ANY_ANT,",
						"          QTY_ANY_ANT,",
						"          DATA_ANY_EXC_PRESSUPOSTARI,",
						"          QTY_ANY_EXC_PRESSUPOSTARI,",
						"          DATA_ANY_1,",
						"          QTY_ANY_1,",
						"          DATA_ANY_2,",
						"          QTY_ANY_2,",
						"          DATA_ANY_3,",
						"          QTY_ANY_3,",
						"          FLAG_SEGURETAT_SOCIAL",
						"     )) ~> ODSDetRE"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_DET_EST_OOAA_RE')]",
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_DET_SEGURETAT_SOCIAL')]",
				"[concat(variables('factoryId'), '/datasets/DIM_PROVINCIES')]",
				"[concat(variables('factoryId'), '/datasets/ODS_PRES_FACT_DET_EST_OOAA_RE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_ODS_PRES_FACT_DET_SP')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_PRES_FACT_DET_SP_ADMIN",
								"type": "DatasetReference"
							},
							"name": "STGSPAdmin"
						},
						{
							"dataset": {
								"referenceName": "STG_PRES_FACT_DET_SP_EMPR",
								"type": "DatasetReference"
							},
							"name": "STGSPEmpr"
						},
						{
							"dataset": {
								"referenceName": "DIM_PROVINCIES",
								"type": "DatasetReference"
							},
							"name": "Provincies"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS_PRES_FACT_DET_SP",
								"type": "DatasetReference"
							},
							"name": "ODSSP"
						}
					],
					"transformations": [
						{
							"name": "ColumnaFlagAdmin"
						},
						{
							"name": "ColumnaFlagEmpr"
						},
						{
							"name": "Union"
						},
						{
							"name": "Anys"
						},
						{
							"name": "SelectColumns"
						},
						{
							"name": "Join"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Any as string",
						"}",
						"source(output(",
						"          COMUNITAT_AUTONOMA as string,",
						"          PROVINCIA as string,",
						"          ENTITAT as string,",
						"          {CODI PROJECTE} as string,",
						"          DENOMINACIO as string,",
						"          {COST TOTAL} as string,",
						"          INICI as string,",
						"          FI as string,",
						"          TIPUS as string,",
						"          ANY_ANTERIOR as string,",
						"          ANY_ACTUAL as string,",
						"          {ANY_ACTUAL+1} as string,",
						"          {ANY_ACTUAL+2} as string,",
						"          {ANY_ACTUAL+3} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGSPAdmin",
						"source(output(",
						"          COMUNITAT_AUTONOMA as string,",
						"          PROVINCIA as string,",
						"          ENTITAT as string,",
						"          {CODI PROJECTE} as string,",
						"          DENOMINACIO as string,",
						"          {COST TOTAL} as string,",
						"          INICI as string,",
						"          FI as string,",
						"          TIPUS as string,",
						"          ANY_ANTERIOR as string,",
						"          ANY_ACTUAL as string,",
						"          {ANY_ACTUAL+1} as string,",
						"          {ANY_ACTUAL+2} as string,",
						"          {ANY_ACTUAL+3} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGSPEmpr",
						"source(output(",
						"          ID_PROVINCIA as string,",
						"          ID_CCAA as integer,",
						"          NOM_PROVINCIA as string,",
						"          NOM_PROVINCIA_CAT as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Provincies",
						"STGSPAdmin derive(DESC_TIPUS_ORGANISME = \"Admin\") ~> ColumnaFlagAdmin",
						"STGSPEmpr derive(DESC_TIPUS_ORGANISME = \"Empr\") ~> ColumnaFlagEmpr",
						"ColumnaFlagAdmin, ColumnaFlagEmpr union(byName: true)~> Union",
						"Join derive(DATA_ANY_ANT = toInteger($Any)-1,",
						"          DATA_ANY_EXC_PRESSUPOSTARI = toInteger($Any),",
						"          DATA_ANY_1 = toInteger($Any)+1,",
						"          DATA_ANY_2 = toInteger($Any)+2,",
						"          DATA_ANY_3 = toInteger($Any)+3,",
						"          ANY_ANTERIOR = toDecimal(replace(replace({ANY_ANTERIOR},'.',''),',','.'))*1000,",
						"          ANY_ACTUAL = toDecimal(replace(replace({ANY_ACTUAL},'.',''),',','.'))*1000,",
						"          {ANY_ACTUAL+1} = toDecimal(replace(replace({ANY_ACTUAL+1},'.',''),',','.'))*1000,",
						"          {ANY_ACTUAL+2} = toDecimal(replace(replace({ANY_ACTUAL+2},'.',''),',','.'))*1000,",
						"          {ANY_ACTUAL+3} = toDecimal(replace(replace({ANY_ACTUAL+3},'.',''),',','.'))*1000,",
						"          INICI = replace(INICI,'.',''),",
						"          FI = replace(FI,'.',''),",
						"          {COST TOTAL} = toDecimal(replace(replace({COST TOTAL},'.',''),',','.'))*1000) ~> Anys",
						"Anys select(mapColumn(",
						"          ID_PROVINCIA,",
						"          DESC_TIPUS_ORGANISME,",
						"          DESC_ENTITAT = ENTITAT,",
						"          COD_PROJECTE = {CODI PROJECTE},",
						"          DESC_DENOMINACIO = DENOMINACIO,",
						"          ANY_INICI = INICI,",
						"          ANY_FI = FI,",
						"          COD_TIPUS = TIPUS,",
						"          QTY_COST_TOTAL = {COST TOTAL},",
						"          DATA_ANY_ANT,",
						"          QTY_ANY_ANT = ANY_ANTERIOR,",
						"          DATA_ANY_EXC_PRESSUPOSTARI,",
						"          QTY_ANY_EXC_PRESSUPOSTARI = ANY_ACTUAL,",
						"          DATA_ANY_1,",
						"          QTY_ANY_1 = {ANY_ACTUAL+1},",
						"          DATA_ANY_2,",
						"          QTY_ANY_2 = {ANY_ACTUAL+2},",
						"          DATA_ANY_3,",
						"          QTY_ANY_3 = {ANY_ACTUAL+3}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectColumns",
						"Union, Provincies join(lower(trim({PROVINCIA})) == lower(trim({NOM_PROVINCIA})),",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> Join",
						"SelectColumns sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_PROVINCIA as integer,",
						"          DESC_TIPUS_ORGANISME as string,",
						"          DESC_ENTITAT as string,",
						"          COD_PROJECTE as string,",
						"          DESC_DENOMINACIO as string,",
						"          ANY_INICI as integer,",
						"          ANY_FI as integer,",
						"          COD_TIPUS as string,",
						"          QTY_COST_TOTAL as decimal(10,2),",
						"          DATA_ANY_ANT as integer,",
						"          QTY_ANY_ANT as decimal(10,2),",
						"          DATA_ANY_EXC_PRESSUPOSTARI as integer,",
						"          QTY_ANY_EXC_PRESSUPOSTARI as decimal(10,2),",
						"          DATA_ANY_1 as integer,",
						"          QTY_ANY_1 as decimal(10,2),",
						"          DATA_ANY_2 as integer,",
						"          QTY_ANY_2 as decimal(10,2),",
						"          DATA_ANY_3 as integer,",
						"          QTY_ANY_3 as decimal(10,2),",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> ODSSP"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_DET_SP_ADMIN')]",
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_DET_SP_EMPR')]",
				"[concat(variables('factoryId'), '/datasets/DIM_PROVINCIES')]",
				"[concat(variables('factoryId'), '/datasets/ODS_PRES_FACT_DET_SP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS_EXEC_FACT_AGR_CCAA_SP')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_EXEC_FACT_AGR_CCAA_SP_ADMIN",
								"type": "DatasetReference"
							},
							"name": "STGAdmin"
						},
						{
							"dataset": {
								"referenceName": "STG_EXEC_FACT_AGR_CCAA_SP_EMPR",
								"type": "DatasetReference"
							},
							"name": "STGEmpr"
						},
						{
							"dataset": {
								"referenceName": "STG_EXEC_FACT_AGR_CCAA_OOAA_RE",
								"type": "DatasetReference"
							},
							"name": "STGccaaage"
						},
						{
							"dataset": {
								"referenceName": "STG_EXEC_FACT_AGR_CCAA_AGE",
								"type": "DatasetReference"
							},
							"name": "STGooaare"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ODS_EXEC_FACT_AGR_CCAA",
								"type": "DatasetReference"
							},
							"name": "ODSSectorPublic"
						}
					],
					"transformations": [
						{
							"name": "ColumnaTipusAdmin"
						},
						{
							"name": "ColumnaTipusEmpr"
						},
						{
							"name": "Union"
						},
						{
							"name": "Tipus"
						},
						{
							"name": "ColumnaTipusAge"
						},
						{
							"name": "ColumnaTipusMinisteris"
						},
						{
							"name": "select1"
						},
						{
							"name": "select2"
						},
						{
							"name": "select3"
						},
						{
							"name": "select4"
						},
						{
							"name": "select5"
						}
					],
					"scriptLines": [
						"parameters{",
						"     Any as string ('2021')",
						"}",
						"source(output(",
						"          IDCCAA as string,",
						"          {Inversió Inicial} as string,",
						"          {Inversió Real} as string,",
						"          {%} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGAdmin",
						"source(output(",
						"          IDCCAA as string,",
						"          {Inversió Inicial} as string,",
						"          {Inversió Real} as string,",
						"          {%} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGEmpr",
						"source(output(",
						"          IDCCAA as string,",
						"          {Crèdit Inicial} as string,",
						"          {Obligacions Reconegudes} as string,",
						"          {%} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGccaaage",
						"source(output(",
						"          IDCCAA as string,",
						"          {Crèdit Inicial} as string,",
						"          {Obligacions Reconegudes} as string,",
						"          {%} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGooaare",
						"select4 derive(DESC_TIPUS_SECTOR = 'Admin') ~> ColumnaTipusAdmin",
						"select2 derive(DESC_TIPUS_SECTOR = 'Empresa') ~> ColumnaTipusEmpr",
						"ColumnaTipusAdmin, ColumnaTipusEmpr, ColumnaTipusAge, ColumnaTipusMinisteris union(byName: true)~> Union",
						"Union derive(IDCCAA = toInteger(IDCCAA),",
						"          QTY_CREDIT_INICIAL = toDecimal(QTY_CREDIT_INICIAL,15,2),",
						"          QTY_OBLIGACIONS_RECONEGUDES = toDecimal(QTY_OBLIGACIONS_RECONEGUDES,15,2),",
						"          {%} = toDecimal({%},15,2),",
						"          DATA_ANY = toInteger($Any)) ~> Tipus",
						"select1 derive(DESC_TIPUS_SECTOR = 'Age') ~> ColumnaTipusAge",
						"select3 derive(DESC_TIPUS_SECTOR = 'Ministeris') ~> ColumnaTipusMinisteris",
						"STGccaaage select(mapColumn(",
						"          IDCCAA,",
						"          QTY_CREDIT_INICIAL = {Crèdit Inicial},",
						"          QTY_OBLIGACIONS_RECONEGUDES = {Obligacions Reconegudes},",
						"          {%}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"STGEmpr select(mapColumn(",
						"          IDCCAA,",
						"          QTY_CREDIT_INICIAL = {Inversió Inicial},",
						"          QTY_OBLIGACIONS_RECONEGUDES = {Inversió Real},",
						"          {%}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"STGooaare select(mapColumn(",
						"          IDCCAA,",
						"          QTY_CREDIT_INICIAL = {Crèdit Inicial},",
						"          QTY_OBLIGACIONS_RECONEGUDES = {Obligacions Reconegudes},",
						"          {%}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select3",
						"STGAdmin select(mapColumn(",
						"          IDCCAA,",
						"          QTY_CREDIT_INICIAL = {Inversió Inicial},",
						"          QTY_OBLIGACIONS_RECONEGUDES = {Inversió Real},",
						"          {%}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select4",
						"Tipus select(mapColumn(",
						"          ID_CCAA = IDCCAA,",
						"          DESC_TIPUS_ORGANISME = DESC_TIPUS_SECTOR,",
						"          QTY_CREDIT_INICIAL,",
						"          QTY_OBLIGACIONS_RECONEGUDES,",
						"          QTY_PERCENTATGE = {%},",
						"          DATA_ANY",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select5",
						"select5 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_CCAA as integer,",
						"          DESC_TIPUS_ORGANISME as string,",
						"          DATA_ANY as integer,",
						"          QTY_CREDIT_INICIAL as decimal(15,2),",
						"          QTY_OBLIGACIONS_RECONEGUDES as decimal(15,2),",
						"          QTY_PERCENTATGE as decimal(15,2),",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> ODSSectorPublic"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_EXEC_FACT_AGR_CCAA_SP_ADMIN')]",
				"[concat(variables('factoryId'), '/datasets/STG_EXEC_FACT_AGR_CCAA_SP_EMPR')]",
				"[concat(variables('factoryId'), '/datasets/STG_EXEC_FACT_AGR_CCAA_OOAA_RE')]",
				"[concat(variables('factoryId'), '/datasets/STG_EXEC_FACT_AGR_CCAA_AGE')]",
				"[concat(variables('factoryId'), '/datasets/ODS_EXEC_FACT_AGR_CCAA')]"
			]
		}
	]
}