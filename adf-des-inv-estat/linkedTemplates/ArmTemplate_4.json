{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-des-inv-estat"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/STG_PRES_FACT_AGR_CCAA_SP_ADMIN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "COMUNITAT AUTONOMA",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ANTERIOR",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+1",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+2",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+3",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "PRES_FACT_AGR_CCAA_SP_ADMIN"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_PRES_FACT_AGR_CCAA_SP_EMPR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "COMUNITATS AUTONOMES",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ANTERIOR",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+1",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+2",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+3",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "PRES_FACT_AGR_CCAA_SP_EMPR"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_PRES_FACT_AGR_RESUMEN_INVERSIONS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "COMUNITAT_AUTONOMA",
						"type": "nvarchar"
					},
					{
						"name": "COST_TOTAL",
						"type": "nvarchar"
					},
					{
						"name": "ANY_EXC_PRESUPOSTARI",
						"type": "nvarchar"
					},
					{
						"name": "INVERSIO",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "PRES_FACT_AGR_RESUMEN_INVERSIONS"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_PRES_FACT_DET_EST_OOAA_RE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID_MINISTERI",
						"type": "nvarchar"
					},
					{
						"name": "DESC_MINISTERI",
						"type": "nvarchar"
					},
					{
						"name": "COMUNITAT_AUTONOMA",
						"type": "nvarchar"
					},
					{
						"name": "CODI_CENTRE",
						"type": "nvarchar"
					},
					{
						"name": "ID_PROGRAMA",
						"type": "nvarchar"
					},
					{
						"name": "ID_ARTICLE",
						"type": "nvarchar"
					},
					{
						"name": "DESC_CENTRE",
						"type": "nvarchar"
					},
					{
						"name": "ID_PROJECTE",
						"type": "nvarchar"
					},
					{
						"name": "NOM_PROJECTE",
						"type": "nvarchar"
					},
					{
						"name": "ANY_INICI",
						"type": "nvarchar"
					},
					{
						"name": "ANY_FI",
						"type": "nvarchar"
					},
					{
						"name": "PROVINCIA",
						"type": "nvarchar"
					},
					{
						"name": "TIPUS",
						"type": "nvarchar"
					},
					{
						"name": "COST_TOTAL",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ANTERIOR",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+1",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+2",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+3",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "PRES_FACT_DET_EST_OOAA_RE"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_PRES_FACT_DET_SEGURETAT_SOCIAL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Organisme",
						"type": "nvarchar"
					},
					{
						"name": "Programa",
						"type": "nvarchar"
					},
					{
						"name": "Article",
						"type": "nvarchar"
					},
					{
						"name": "Centre Tipus",
						"type": "nvarchar"
					},
					{
						"name": "Número",
						"type": "nvarchar"
					},
					{
						"name": "Denominació",
						"type": "nvarchar"
					},
					{
						"name": "Inici",
						"type": "nvarchar"
					},
					{
						"name": "Final",
						"type": "nvarchar"
					},
					{
						"name": "Import Total",
						"type": "nvarchar"
					},
					{
						"name": "ANY",
						"type": "nvarchar"
					},
					{
						"name": "ANY+1",
						"type": "nvarchar"
					},
					{
						"name": "ANY+2",
						"type": "nvarchar"
					},
					{
						"name": "ANY+3",
						"type": "nvarchar"
					},
					{
						"name": "Província",
						"type": "nvarchar"
					},
					{
						"name": "ID Entitat",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "PRES_FACT_DET_SEGURETAT_SOCIAL"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_PRES_FACT_DET_SP_ADMIN')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "COMUNITAT_AUTONOMA",
						"type": "nvarchar"
					},
					{
						"name": "PROVINCIA",
						"type": "nvarchar"
					},
					{
						"name": "ENTITAT",
						"type": "nvarchar"
					},
					{
						"name": "CODI PROJECTE",
						"type": "nvarchar"
					},
					{
						"name": "DENOMINACIO",
						"type": "nvarchar"
					},
					{
						"name": "COST TOTAL",
						"type": "nvarchar"
					},
					{
						"name": "INICI",
						"type": "nvarchar"
					},
					{
						"name": "FI",
						"type": "nvarchar"
					},
					{
						"name": "TIPUS",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ANTERIOR",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+1",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+2",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+3",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "PRES_FACT_DET_SP_ADMIN"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_PRES_FACT_DET_SP_EMPR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BD_INV_ESTAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "STG"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "COMUNITAT_AUTONOMA",
						"type": "nvarchar"
					},
					{
						"name": "PROVINCIA",
						"type": "nvarchar"
					},
					{
						"name": "ENTITAT",
						"type": "nvarchar"
					},
					{
						"name": "CODI PROJECTE",
						"type": "nvarchar"
					},
					{
						"name": "DENOMINACIO",
						"type": "nvarchar"
					},
					{
						"name": "COST TOTAL",
						"type": "nvarchar"
					},
					{
						"name": "INICI",
						"type": "nvarchar"
					},
					{
						"name": "FI",
						"type": "nvarchar"
					},
					{
						"name": "TIPUS",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ANTERIOR",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+1",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+2",
						"type": "nvarchar"
					},
					{
						"name": "ANY_ACTUAL+3",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "INV_STG",
					"table": "PRES_FACT_DET_SP_EMPR"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/XLSX_DIM_UNITATS_AGE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ORIGEN"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Unidades AGE V+T",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Listado Unidades AGE.xlsx",
						"container": "inversionsestat"
					},
					"range": "B2:C99999",
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/XLSX_LIA_FACT_ADJUDICACIONS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Any": {
						"type": "string",
						"defaultValue": "2021"
					},
					"Mes": {
						"type": "string",
						"defaultValue": "01"
					}
				},
				"folder": {
					"name": "ORIGEN"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Resultados",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Any,\n\n'_',\n\ndataset().Mes,\n\n'_LIA_FACT.xlsx'\n)",
							"type": "Expression"
						},
						"container": "inversionsestat"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Identificador",
						"type": "String"
					},
					{
						"name": "Link licitación",
						"type": "String"
					},
					{
						"name": "Fecha actualización",
						"type": "String"
					},
					{
						"name": "Número de expediente",
						"type": "String"
					},
					{
						"name": "Lote",
						"type": "String"
					},
					{
						"name": "Objeto licitación/lote",
						"type": "String"
					},
					{
						"name": "Presupuesto base con impuestos licitación/lote",
						"type": "String"
					},
					{
						"name": "Presupuesto base sin impuestos licitación/lote",
						"type": "String"
					},
					{
						"name": "CPV licitación/lote",
						"type": "String"
					},
					{
						"name": "Lugar ejecución licitación/lote",
						"type": "String"
					},
					{
						"name": "Resultado licitación/lote",
						"type": "String"
					},
					{
						"name": "Fecha del acuerdo licitación/lote",
						"type": "String"
					},
					{
						"name": "Número de ofertas recibidas por licitación/lote",
						"type": "String"
					},
					{
						"name": "Precio de la oferta más baja por licitación/lote",
						"type": "String"
					},
					{
						"name": "Precio de la oferta más alta por licitación/lote",
						"type": "String"
					},
					{
						"name": "Se han excluído ofertas por ser anormalmente bajas por licitación/lote",
						"type": "String"
					},
					{
						"name": "Número del contrato licitación/lote",
						"type": "String"
					},
					{
						"name": "Fecha formalización del contrato licitación/lote",
						"type": "String"
					},
					{
						"name": "Fecha entrada en vigor del contrato de licitación/lote",
						"type": "String"
					},
					{
						"name": "Adjudicatario licitación/lote",
						"type": "String"
					},
					{
						"name": "Tipo de identificador de adjudicatario por licitación/lote",
						"type": "String"
					},
					{
						"name": "Identificador Adjudicatario de la licitación/lote",
						"type": "String"
					},
					{
						"name": "El adjudicatario es o no PYME de la licitación/lote",
						"type": "String"
					},
					{
						"name": "Importe adjudicación sin impuestos licitación/lote",
						"type": "String"
					},
					{
						"name": "Importe adjudicación con impuestos licitación/lote",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/XLSX_LIA_FACT_LICITACIONS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Any": {
						"type": "string",
						"defaultValue": "2021"
					},
					"Mes": {
						"type": "string",
						"defaultValue": "01"
					}
				},
				"folder": {
					"name": "ORIGEN"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Licitaciones",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(\n\ndataset().Any,\n\n'_',\n\ndataset().Mes,\n\n'_LIA_FACT.xlsx'\n)",
							"type": "Expression"
						},
						"container": "inversionsestat"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Identificador",
						"type": "String"
					},
					{
						"name": "Link licitación",
						"type": "String"
					},
					{
						"name": "Fecha actualización",
						"type": "String"
					},
					{
						"name": "Vigente/Anulada/Archivada",
						"type": "String"
					},
					{
						"name": "Primera publicación",
						"type": "String"
					},
					{
						"name": "Estado",
						"type": "String"
					},
					{
						"name": "Número de expediente",
						"type": "String"
					},
					{
						"name": "Objeto del Contrato",
						"type": "String"
					},
					{
						"name": "Valor estimado del contrato",
						"type": "String"
					},
					{
						"name": "Presupuesto base sin impuestos",
						"type": "String"
					},
					{
						"name": "Presupuesto base con impuestos",
						"type": "String"
					},
					{
						"name": "CPV",
						"type": "String"
					},
					{
						"name": "Tipo de contrato",
						"type": "String"
					},
					{
						"name": "Lugar de ejecución",
						"type": "String"
					},
					{
						"name": "Órgano de Contratación",
						"type": "String"
					},
					{
						"name": "ID OC en PLACSP",
						"type": "String"
					},
					{
						"name": "NIF OC",
						"type": "String"
					},
					{
						"name": "DIR3",
						"type": "String"
					},
					{
						"name": "Enlace al Perfil de Contratante del OC",
						"type": "String"
					},
					{
						"name": "Tipo de Administración",
						"type": "String"
					},
					{
						"name": "Código Postal",
						"type": "String"
					},
					{
						"name": "Tipo de procedimiento",
						"type": "String"
					},
					{
						"name": "Sistema de contratación",
						"type": "String"
					},
					{
						"name": "Tramitación",
						"type": "String"
					},
					{
						"name": "Forma de presentación de la oferta",
						"type": "String"
					},
					{
						"name": "Fecha de presentación de ofertas",
						"type": "String"
					},
					{
						"name": "Fecha de presentación de solicitudes de participacion",
						"type": "String"
					},
					{
						"name": "Directiva de aplicación",
						"type": "String"
					},
					{
						"name": "Financiación Europea y fuente",
						"type": "String"
					},
					{
						"name": "Descripción de la financiación europea",
						"type": "String"
					},
					{
						"name": "Subcontratación permitida",
						"type": "String"
					},
					{
						"name": "Subcontratación permitida porcentaje",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_EXEC_PRESSUP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "STG_EXEC_FACT_DET_AGE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[EXEC_FACT_DET_AGE]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_EXEC_FACT_DET_AGE",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_EXEC_FACT_DET_AGE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_EXEC_FACT_DET_OOAA_RE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[EXEC_FACT_DET_OOAA_RE]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_EXEC_FACT_DET_OOAA_RE",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_EXEC_FACT_DET_OOAA_RE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_EXEC_FACT_DET_SP_ADMIN",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[EXEC_FACT_DET_SP_ADMIN]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_EXEC_FACT_DET_SP_ADMIN",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_EXEC_FACT_DET_SP_ADMIN",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_EXEC_FACT_DET_SP_EMPR",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[EXEC_FACT_DET_SP_EMPR]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_EXEC_FACT_DET_SP_EMPR",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_EXEC_FACT_DET_SP_EMPR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_EXEC_FACT_AGR_CCAA_AGE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[EXEC_FACT_AGR_CCAA_AGE]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_EXEC_FACT_AGR_CCAA_AGE",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_EXEC_FACT_AGR_CCAA_AGE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_EXEC_FACT_AGR_CCAA_OOAA_RE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[EXEC_FACT_AGR_CCAA_OOAA_RE]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_EXEC_FACT_AGR_CCAA_OOAA_RE",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_EXEC_FACT_AGR_CCAA_OOAA_RE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_EXEC_FACT_AGR_CCAA_SP_ADMIN",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[EXEC_FACT_AGR_CCAA_SP_ADMIN]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_EXEC_FACT_AGR_CCAA_SP_ADMIN",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_EXEC_FACT_AGR_CCAA_SP_ADMIN",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_EXEC_FACT_AGR_CCAA_SP_EMPR",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[EXEC_FACT_AGR_CCAA_SP_EMPR]\n",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_EXEC_FACT_AGR_CCAA_SP_EMPR",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_EXEC_FACT_AGR_CCAA_SP_EMPR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Data_Any_Carrega": {
						"type": "string",
						"defaultValue": "2022"
					}
				},
				"folder": {
					"name": "ÀMBIT EXECUCIÓ PRESSUPOSTARIA"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-17T09:42:56Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_LIA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "STG_LIA_FACT_LICITACIONS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[LIA_FACT_LICITACIONS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "XLSX_LIA_FACT_LICITACIONS",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									},
									"Mes": {
										"value": "@pipeline().parameters.Data_Mes_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_LIA_FACT_LICITACIONS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_LIA_FACT_ADJUDICACIONS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[LIA_FACT_ADJUDICACIONS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "XLSX_LIA_FACT_ADJUDICACIONS",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									},
									"Mes": {
										"value": "@pipeline().parameters.Data_Mes_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_LIA_FACT_ADJUDICACIONS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Data_Any_Carrega": {
						"type": "string",
						"defaultValue": "2021"
					},
					"Data_Mes_Carrega": {
						"type": "string",
						"defaultValue": "01"
					}
				},
				"folder": {
					"name": "ÀMBIT LICITACIONS ADJUDICACIONS"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-17T09:42:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/XLSX_LIA_FACT_LICITACIONS')]",
				"[concat(variables('factoryId'), '/datasets/XLSX_LIA_FACT_ADJUDICACIONS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_PRESSUPOST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "STG_PRES_FACT_DET_EST_OOAA_RE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[PRES_FACT_DET_EST_OOAA_RE]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_PRES_FACT_DET_EST_OOAA_RE",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_PRES_FACT_DET_EST_OOAA_RE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_PRES_FACT_AGR_RESUMEN_INVERSIONS",
						"description": "",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[PRES_FACT_AGR_RESUMEN_INVERSIONS]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_PRES_FACT_AGR_RESUMEN_INVERSIONS",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_PRES_FACT_AGR_RESUMEN_INVERSIONS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_PRES_FACT_AGR_CCAA_SP_ADMIN",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[PRES_FACT_AGR_CCAA_SP_ADMIN]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_PRES_FACT_AGR_CCAA_SP_ADMIN",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_PRES_FACT_AGR_CCAA_SP_ADMIN",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_PRES_FACT_AGR_CCAA_SP_EMPR",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[PRES_FACT_AGR_CCAA_SP_EMPR]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_PRES_FACT_AGR_CCAA_SP_EMPR",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_PRES_FACT_AGR_CCAA_SP_EMPR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_PRES_FACT_DET_SP_ADMIN",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[PRES_FACT_DET_SP_ADMIN]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_PRES_FACT_DET_SP_ADMIN",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_PRES_FACT_DET_SP_ADMIN",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_PRES_FACT_DET_SP_EMPR",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[PRES_FACT_DET_SP_EMPR]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_PRES_FACT_DET_SP_EMPR",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_PRES_FACT_DET_SP_EMPR",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_PRES_FACT_DET_SEGURETAT_SOCIAL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [INV_STG].[PRES_FACT_DET_SEGURETAT_SOCIAL]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CSV_PRES_FACT_DET_SEGURETAT_SOCIAL",
								"type": "DatasetReference",
								"parameters": {
									"Any": {
										"value": "@pipeline().parameters.Data_Any_Carrega",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_PRES_FACT_DET_SEGURETAT_SOCIAL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Data_Any_Carrega": {
						"type": "string",
						"defaultValue": "2021"
					}
				},
				"folder": {
					"name": "ÀMBIT PRESSUPOST"
				},
				"annotations": [],
				"lastPublishTime": "2023-04-17T09:42:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_DET_EST_OOAA_RE')]",
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_AGR_RESUMEN_INVERSIONS')]",
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_AGR_CCAA_SP_ADMIN')]",
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_AGR_CCAA_SP_EMPR')]",
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_DET_SP_ADMIN')]",
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_DET_SP_EMPR')]",
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_DET_SEGURETAT_SOCIAL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DIM_MINISTERIS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_PRES_FACT_DET_EST_OOAA_RE",
								"type": "DatasetReference"
							},
							"name": "STGPresEstOoaaRe"
						},
						{
							"dataset": {
								"referenceName": "DM_DIM_MINISTERIS",
								"type": "DatasetReference"
							},
							"name": "SourceDimMinisteris"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_DIM_MINISTERIS",
								"type": "DatasetReference"
							},
							"name": "DimMinisteris"
						}
					],
					"transformations": [
						{
							"name": "Distinct"
						},
						{
							"name": "Select"
						},
						{
							"name": "LeftJoin"
						},
						{
							"name": "FitroRepetidos"
						},
						{
							"name": "DataInici"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID_MINISTERI as string,",
						"          DESC_MINISTERI as string,",
						"          COMUNITAT_AUTONOMA as string,",
						"          CODI_CENTRE as string,",
						"          ID_PROGRAMA as string,",
						"          ID_ARTICLE as string,",
						"          DESC_CENTRE as string,",
						"          ID_PROJECTE as string,",
						"          NOM_PROJECTE as string,",
						"          ANY_INICI as string,",
						"          ANY_FI as string,",
						"          PROVINCIA as string,",
						"          TIPUS as string,",
						"          COST_TOTAL as string,",
						"          ANY_ANTERIOR as string,",
						"          ANY_ACTUAL as string,",
						"          {ANY_ACTUAL+1} as string,",
						"          {ANY_ACTUAL+2} as string,",
						"          {ANY_ACTUAL+3} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGPresEstOoaaRe",
						"source(output(",
						"          ID_MINISTERI as string,",
						"          DESC_MINISTERI as string,",
						"          DATA_INICI as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> SourceDimMinisteris",
						"STGPresEstOoaaRe aggregate(groupBy(ID_MINISTERI,",
						"          DESC_MINISTERI),",
						"     Count = count(1)) ~> Distinct",
						"DataInici select(mapColumn(",
						"          ID_MINISTERI = Distinct@ID_MINISTERI,",
						"          DESC_MINISTERI = Distinct@DESC_MINISTERI,",
						"          DATA_INICI",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Select",
						"Distinct, SourceDimMinisteris join(Distinct@DESC_MINISTERI == SourceDimMinisteris@DESC_MINISTERI,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> LeftJoin",
						"LeftJoin filter(isNull(SourceDimMinisteris@ID_MINISTERI)) ~> FitroRepetidos",
						"FitroRepetidos derive(DATA_INICI = year(currentDate())) ~> DataInici",
						"Select sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_MINISTERI as string,",
						"          DESC_MINISTERI as string,",
						"          DATA_INICI as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DimMinisteris"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_DET_EST_OOAA_RE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DIM_PROJECTE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_PRES_FACT_DET_EST_OOAA_RE",
								"type": "DatasetReference"
							},
							"name": "STGPresEstOoaaRe"
						},
						{
							"dataset": {
								"referenceName": "DM_DIM_PROJECTES",
								"type": "DatasetReference"
							},
							"name": "SourceDimProjectes"
						},
						{
							"dataset": {
								"referenceName": "STG_PRES_FACT_DET_SEGURETAT_SOCIAL",
								"type": "DatasetReference"
							},
							"name": "STGSeguretatSocial"
						},
						{
							"dataset": {
								"referenceName": "DIM_PROVINCIES",
								"type": "DatasetReference"
							},
							"name": "Provincies"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_DIM_PROJECTES",
								"type": "DatasetReference"
							},
							"name": "DimProjecte"
						}
					],
					"transformations": [
						{
							"name": "Distinct"
						},
						{
							"name": "LeftJoin"
						},
						{
							"name": "FitroRepetidos"
						},
						{
							"name": "DistinctSS"
						},
						{
							"name": "ObtenerIDProjecte"
						},
						{
							"name": "JoinProvincies"
						},
						{
							"name": "SelectSS"
						},
						{
							"name": "Union"
						},
						{
							"name": "select1"
						},
						{
							"name": "FiltroTOTAL"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID_MINISTERI as string,",
						"          DESC_MINISTERI as string,",
						"          COMUNITAT_AUTONOMA as string,",
						"          CODI_CENTRE as string,",
						"          ID_PROGRAMA as string,",
						"          ID_ARTICLE as string,",
						"          DESC_CENTRE as string,",
						"          ID_PROJECTE as string,",
						"          NOM_PROJECTE as string,",
						"          ANY_INICI as string,",
						"          ANY_FI as string,",
						"          PROVINCIA as string,",
						"          TIPUS as string,",
						"          COST_TOTAL as string,",
						"          ANY_ANTERIOR as string,",
						"          ANY_ACTUAL as string,",
						"          {ANY_ACTUAL+1} as string,",
						"          {ANY_ACTUAL+2} as string,",
						"          {ANY_ACTUAL+3} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGPresEstOoaaRe",
						"source(output(",
						"          ID_PROJECTE as string,",
						"          NOM_PROJECTE as string,",
						"          DESC_COMENTARI as string,",
						"          ID_MACROPROJECTE as integer,",
						"          CODI_PROJECTE_CLAU as string,",
						"          CODI_SUBPROJECTE as string,",
						"          ID_AMBIT as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> SourceDimProjectes",
						"source(output(",
						"          Organisme as string,",
						"          Programa as string,",
						"          Article as string,",
						"          {Centre Tipus} as string,",
						"          {Número} as string,",
						"          {Denominació} as string,",
						"          Inici as string,",
						"          Final as string,",
						"          {Import Total} as string,",
						"          ANY as string,",
						"          {ANY+1} as string,",
						"          {ANY+2} as string,",
						"          {ANY+3} as string,",
						"          {Província} as string,",
						"          {ID Entitat} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> STGSeguretatSocial",
						"source(output(",
						"          ID_PROVINCIA as string,",
						"          ID_CCAA as integer,",
						"          NOM_PROVINCIA as string,",
						"          NOM_PROVINCIA_CAT as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> Provincies",
						"STGPresEstOoaaRe aggregate(groupBy(ID_PROJECTE,",
						"          NOM_PROJECTE),",
						"     count = count(1)) ~> Distinct",
						"Union, SourceDimProjectes join(Union@ID_PROJECTE == SourceDimProjectes@ID_PROJECTE,",
						"     joinType:'left',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> LeftJoin",
						"LeftJoin filter(isNull(SourceDimProjectes@ID_PROJECTE)) ~> FitroRepetidos",
						"ObtenerIDProjecte aggregate(groupBy({Denominació},",
						"          ID_PROJECTE),",
						"     count = count(1)) ~> DistinctSS",
						"JoinProvincies derive(ID_PROJECTE = iif({Denominació} == 'VARIOS',concat(ID_PROVINCIA,' ',Organisme, ' ', Programa, ' ', Article,' ' ,{Centre Tipus}, ' ', {Número},'V'),concat(ID_PROVINCIA,' ',Organisme, ' ', Programa, ' ', Article,' ' ,{Centre Tipus}, ' ', {Número}))) ~> ObtenerIDProjecte",
						"FiltroTOTAL, Provincies join(lower({Província}) == lower(NOM_PROVINCIA),",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> JoinProvincies",
						"DistinctSS select(mapColumn(",
						"          NOM_PROJECTE = {Denominació},",
						"          ID_PROJECTE,",
						"          count",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> SelectSS",
						"Distinct, SelectSS union(byName: true)~> Union",
						"FitroRepetidos select(mapColumn(",
						"          ID_PROJECTE = Union@ID_PROJECTE,",
						"          NOM_PROJECTE = Union@NOM_PROJECTE",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"STGSeguretatSocial filter(substring({Denominació}, 2,5) != 'TOTAL') ~> FiltroTOTAL",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_PROJECTE as string,",
						"          NOM_PROJECTE as string,",
						"          DESC_COMENTARI as string,",
						"          ID_MACROPROJECTE as integer,",
						"          CODI_PROJECTE_CLAU as string,",
						"          CODI_SUBPROJECTE as string,",
						"          ID_AMBIT as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DimProjecte"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_DET_EST_OOAA_RE')]",
				"[concat(variables('factoryId'), '/datasets/STG_PRES_FACT_DET_SEGURETAT_SOCIAL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_EXEC_FACT_AGR_CCAA')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS_EXEC_FACT_AGR_CCAA",
								"type": "DatasetReference"
							},
							"name": "ODSFactAGRCCAA"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_EXEC_FACT_AGR_CCAA",
								"type": "DatasetReference"
							},
							"name": "DMFactAGRCCAA"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID_CCAA as integer,",
						"          DESC_TIPUS_ORGANISME as string,",
						"          DATA_ANY as integer,",
						"          QTY_CREDIT_INICIAL as decimal(15,2),",
						"          QTY_OBLIGACIONS_RECONEGUDES as decimal(15,2),",
						"          QTY_PERCENTATGE as decimal(15,2),",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ODSFactAGRCCAA",
						"ODSFactAGRCCAA alterRow(upsertIf(true())) ~> AlterRow1",
						"AlterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_CCAA as integer,",
						"          DESC_TIPUS_ORGANISME as string,",
						"          DATA_ANY as integer,",
						"          QTY_CREDIT_INICIAL as decimal(15,2),",
						"          QTY_OBLIGACIONS_RECONEGUDES as decimal(15,2),",
						"          QTY_PERCENTATGE as decimal(15,2),",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['ID_CCAA','DATA_ANY','DESC_TIPUS_ORGANISME'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMFactAGRCCAA"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_EXEC_FACT_DET_SECCIO_ENTITAT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS_EXEC_FACT_DET_SECCIO_ENTITAT",
								"type": "DatasetReference"
							},
							"name": "ODSFactDETSeccioEntitat"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_EXEC_FACT_DET_SECCIO_ENTITAT",
								"type": "DatasetReference"
							},
							"name": "DMFactDETSeccioEntitat"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          CODI_SECCIO as string,",
						"          DESC_ENTITAT as string,",
						"          DESC_TIPUS_ORGANISME as string,",
						"          DATA_ANY as integer,",
						"          QTY_CREDIT_INICIAL as decimal(15,2),",
						"          QTY_OBLIGACIONS_RECONEGUDES as decimal(15,2),",
						"          QTY_PERCENTATGE as decimal(15,2),",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ODSFactDETSeccioEntitat",
						"ODSFactDETSeccioEntitat alterRow(upsertIf(true())) ~> AlterRow1",
						"AlterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          CODI_SECCIO as string,",
						"          DESC_ENTITAT as string,",
						"          DESC_TIPUS_ORGANISME as string,",
						"          DATA_ANY as integer,",
						"          QTY_CREDIT_INICIAL as decimal(15,2),",
						"          QTY_OBLIGACIONS_RECONEGUDES as decimal(15,2),",
						"          QTY_PERCENTATGE as decimal(15,2),",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['CODI_SECCIO','DATA_ANY','DESC_TIPUS_ORGANISME'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMFactDETSeccioEntitat"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_LIA_FACT_ADJUDICACIONS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS_LIA_FACT_ADJUDICACIONS",
								"type": "DatasetReference"
							},
							"name": "ODSAdjudicacions"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_LIA_FACT_ADJUDICACIONS",
								"type": "DatasetReference"
							},
							"name": "DMAdjudicacions"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          ID_LICITACIO as integer,",
						"          QTY_IMPORT_ADJUDICACIO as decimal(15,2),",
						"          DATA_ACORD_LICITACIO as date,",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ODSAdjudicacions",
						"ODSAdjudicacions sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_LICITACIO as integer,",
						"          QTY_IMPORT_ADJUDICACIO as decimal(15,2),",
						"          DATA_ACORD_LICITACIO as date,",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     truncate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMAdjudicacions"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_LIA_FACT_LICITACIONS')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS_LIA_FACT_LICITACIONS",
								"type": "DatasetReference"
							},
							"name": "ODSLicitacions"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_LIA_FACT_LICITACIONS",
								"type": "DatasetReference"
							},
							"name": "DMLicitacions"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID_LICITACIO as integer,",
						"          CODI_PROJECTE_CLAU as string,",
						"          DESC_OBJ_CONTRACTE as string,",
						"          DESC_ESTAT as string,",
						"          QTY_PRESSUPOST as decimal(15,2),",
						"          DATA_PRIMERA_PUBLICACIO as date,",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ODSLicitacions",
						"ODSLicitacions alterRow(upsertIf(true())) ~> AlterRow1",
						"AlterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_LICITACIO as integer,",
						"          CODI_PROJECTE_CLAU as string,",
						"          DESC_OBJ_CONTRACTE as string,",
						"          DESC_ESTAT as string,",
						"          QTY_PRESSUPOST as decimal(15,2),",
						"          DATA_PRIMERA_PUBLICACIO as date,",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['ID_LICITACIO'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          ID_LICITACIO,",
						"          DESC_OBJ_CONTRACTE,",
						"          DESC_ESTAT,",
						"          QTY_PRESSUPOST,",
						"          DATA_PRIMERA_PUBLICACIO,",
						"          DATA_CARREGA",
						"     )) ~> DMLicitacions"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_DM_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ODS_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE",
								"type": "DatasetReference"
							},
							"name": "ODSFactAGRCCAA"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DM_PRES_FACT_AGR_CCAA_MIN_EST_OOAA_RE",
								"type": "DatasetReference"
							},
							"name": "DMFactAGRCCAA"
						}
					],
					"transformations": [
						{
							"name": "AlterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ID_CCAA as integer,",
						"          ID_MINISTERI as string,",
						"          DATA_ANY_EXC_PRESSUPOSTARI as integer,",
						"          QTY_COST_TOTAL as decimal(10,2),",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ODSFactAGRCCAA",
						"ODSFactAGRCCAA alterRow(upsertIf(true())) ~> AlterRow1",
						"AlterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          ID_CCAA as integer,",
						"          ID_MINISTERI as string,",
						"          DATA_ANY_EXC_PRESSUPOSTARI as integer,",
						"          QTY_COST_TOTAL as decimal(10,2),",
						"          DATA_CARREGA as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['ID_CCAA','ID_MINISTERI','DATA_ANY_EXC_PRESSUPOSTARI'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> DMFactAGRCCAA"
					]
				}
			},
			"dependsOn": []
		}
	]
}